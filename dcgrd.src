C 15 APR 11 - MK  - IMPLEMENT DC SCF GRADIENT
C
C*MODULE DCGRD   *DECK DCEWDM
      SUBROUTINE DCEWDM(EPS,L1,L2,OUT)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      LOGICAL OUT
C
      DIMENSION EPS(L2)
C
      PARAMETER (MXATM=2000)
      PARAMETER (MXLATM=200, MXLSHL=700)
C
      COMMON /FMCOM / X(1)
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      LOGICAL DCFLG
      COMMON /DCFRM / FRMLVA,FRMLVB,FRBETA,FTOL,MXITDC
      COMMON /DCOPT / SUBTYP,BUFTYP,SUBLNG,BUFRAD,NDCPRT,NSUBS,DCFLG
      COMMON /INFOLC/ LOC2TA(MXLATM),LOC2TS(MXLSHL),LCKLOC(MXLSHL),
     *                NLAT,NLATC,NLSH,NLSHC,LNUM,LNUMC
      COMMON /SUBSP / ILCST1(MXATM),NLC1,LNUMMX,ILATST(MXATM),NLCAT1
      COMMON /IODC  / IDCSUB,IDCVEC,IDCDM,IDCQ,IDCDMO,IDCEIG,IDCW,IDCEDM
      COMMON /DCGRD / NDCGRD,IDCRSP
C
      DATA UHF    /8HUHF     /
C
      PARAMETER (TWO=2.0D+00, HALF=0.5D+00, ONE=1.0D+00)
      PARAMETER (VLN10=2.30258509299405D+00)
C
C     *** GENERATE THE NEW DENSITY MATRIX ***
      CALL SEQREW(IDCDM)
      CALL SEQREW(IDCVEC)
      CALL SEQREW(IDCEDM)
C
      CALL VALFM(LOADFM)
      LEIGT = LOADFM+1
      LWRK  = LEIGT+ NLC1
      LWRK2 = LWRK + L2
      LAST  = LWRK2+ L2
C
      LEIGTB= LAST
      IF(SCFTYP.EQ.UHF) LAST = LEIGTB + NLC1
C
      NEEDE = LAST - LOADFM - 1
      CALL GETFM(NEEDE)
C
C     READ OVERLAP MATRIX IN X(LWRK)
      CALL DAREAD(IDAF,IODA,X(LWRK),L2,12,0)
C     READ FOCK MATRIX IN X(LWRK2)
      CALL DAREAD(IDAF,IODA,X(LWRK2),L2,14,0)
      CALL SEQREW(IDCEIG)
      CALL SQREAD(IDCEIG,X(LEIGT),NLC1)
      IF(SCFTYP.EQ.UHF) CALL SQREAD(IDCEIG,X(LEIGTB),NLC1)
C
      DO 100 ISUB=1,NSUBS
        CALL LOCREG(ISUB)
        LSUB1=LNUM
        LSUB3=LSUB1*LSUB1
        LSUB2=(LSUB3+LSUB1)/2
C
        CALL VALFM(LOADFM)
        LEIGLC= LOADFM+1
        LOCCLC= LEIGLC+ LSUB1
        LEWDLC= LOCCLC+ LSUB1
        LSLC  = LEWDLC+ LSUB2
        LVECLC= LSLC  + LSUB2
        LWRKL1= LVECLC+ LSUB3
        LWRKL2= LWRKL1+ LSUB1*LNUMC
        LAST  = LWRKL2+ LSUB1*LNUMC
C
        LTMP  = LAST
        IF(SCFTYP.EQ.UHF) LAST = LTMP + LSUB2
C
        NEEDLC = LAST - LOADFM - 1
        CALL GETFM(NEEDLC)
C
        IF(NDCGRD.EQ.0 .OR. NDCGRD.EQ.1 .OR. NDCGRD.EQ.3) THEN
C
C        ### ALPHA ###
C
         CALL SQREAD(IDCVEC,X(LVECLC),LSUB3)
         CALL DCOPY(LSUB1,X(LEIGT+ILCST1(ISUB)-1),1,X(LEIGLC),1)
C
         CALL VCLR(X(LOCCLC),1,LSUB1)
C
C        --- OCCUPATION NUMBERS IN DC METHOD ---
C                                  DC OCCUPANCIES
         I=1
         VAL=FRMLVA-X(LEIGLC+I-1)
         XFTOL= VLN10*FTOL/FRBETA
C
C        VALUE OF FERMI FUNCTION IS CLOSE TO ONE
         DO WHILE (I.LE.LSUB1 .AND. VAL.GT.XFTOL)
            X(LOCCLC+I-1) = -TWO * X(LEIGLC+I-1)
            I=I+1
            VAL=FRMLVA-X(LEIGLC+I-1)
         END DO
C
C        VALUE OF FERMI FUNCTION IS NOT CLOSE TO EITHER ZERO OR ONE
         DO WHILE (I.LE.LSUB1 .AND. VAL.GE.-XFTOL)
            X(LOCCLC+I-1) = -TWO * FERMIF(VAL,FRBETA) * X(LEIGLC+I-1)
            I=I+1
            VAL=FRMLVA-X(LEIGLC+I-1)
         END DO
C
         NOCDC=I-1
C
C        --- FORM NEW SUBSYSTEM DENSITY MATRIX ---
C
         CALL DMTX(X(LEWDLC),X(LVECLC),X(LOCCLC),NOCDC,LSUB1,LSUB1)
C
C        -- DEBUG PRINT
         IF(OUT) THEN
            WRITE(IW,*) 'LOCAL ENERGY WEIGHTED DENSITY MATRIX'
            CALL PRTRILDC(ISUB,X(LEWDLC),LSUB1)
         END IF
C
         IF(NDCGRD.EQ.1) THEN
C         READ STANDARD LOCAL DENSITY MATRIX IN X(LVECLC)
          CALL SQREAD(IDCDM ,X(LVECLC),LSUB2)
          CALL TRT2LC(X(LWRK),X(LSLC),L1,L2,LSUB1,LSUB2,'OVERLAP ')
C
          CALL LCMAT(X(LSLC),X(LWRKL1),LSUB1,LSUB2,LNUMC)
          CALL MTARBR(X(LEWDLC),LSUB1,X(LWRKL1),LNUMC,X(LWRKL2),LSUB1,1)
          CALL LCMAT(X(LVECLC),X(LWRKL1),LSUB1,LSUB2,LNUMC)
          CALL MRARTR(X(LWRKL2),LSUB1,LSUB1,LNUMC,X(LWRKL1),LSUB1,LSUB1,
     *                X(LVECLC),LSUB1)
C
C         -- DEBUG PRINT
          IF(OUT) THEN
             WRITE(IW,*) 'LOCAL WSD MATRIX'
             CALL PRSQLDC(ISUB,X(LVECLC),LSUB1,LSUB1,LSUB1)
          END IF
C
          CALL SYMSQT(LSUB1,X(LVECLC),LSUB1,X(LEWDLC),1)
          IF(SCFTYP.NE.UHF) CALL DSCAL(LSUB2,HALF,X(LEWDLC),1)
         END IF
C
C        ### BETA ###
C
         IF(SCFTYP.EQ.UHF) THEN
C          ALPHA MATRIX HAS THE FACTOR OF TWO
           CALL DSCAL(LSUB2,HALF,X(LEWDLC),1)
           CALL DCOPY(LSUB2,X(LEWDLC),1,X(LTMP),1)
C
           CALL SQREAD(IDCVEC,X(LVECLC),LSUB3)
           CALL DCOPY(LSUB1,X(LEIGTB+ILCST1(ISUB)-1),1,X(LEIGLC),1)
C
           CALL VCLR(X(LOCCLC),1,LSUB1)
C
C          --- OCCUPATION NUMBERS IN DC METHOD ---
C                                    DC OCCUPANCIES
           I=1
           VAL=FRMLVB-X(LEIGLC+I-1)
C
C          VALUE OF FERMI FUNCTION IS CLOSE TO ONE
           DO WHILE (I.LE.LSUB1 .AND. VAL.GT.XFTOL)
              X(LOCCLC+I-1) = -X(LEIGLC+I-1)
              I=I+1
              VAL=FRMLVA-X(LEIGLC+I-1)
           END DO
C
C          VALUE OF FERMI FUNCTION IS NOT CLOSE TO EITHER ZERO OR ONE
           DO WHILE (I.LE.LSUB1 .AND. VAL.GE.-XFTOL)
              X(LOCCLC+I-1) = -FERMIF(VAL,FRBETA) * X(LEIGLC+I-1)
              I=I+1
              VAL=FRMLVA-X(LEIGLC+I-1)
           END DO
C
           NOCDC=I-1
C
C          --- FORM NEW SUBSYSTEM DENSITY MATRIX ---
C
           CALL DMTX(X(LEWDLC),X(LVECLC),X(LOCCLC),NOCDC,LSUB1,LSUB1)
C
C          -- DEBUG PRINT
           IF(OUT) THEN
              WRITE(IW,*) 'LOCAL ENERGY WEIGHTED DENSITY MATRIX (BETA)'
              CALL PRTRILDC(ISUB,X(LEWDLC),LSUB1)
           END IF
C
           IF(NDCGRD.EQ.1) THEN
C           READ STANDARD LOCAL DENSITY MATRIX IN X(LVECLC)
            CALL SQREAD(IDCDM ,X(LVECLC),LSUB2)
            CALL TRT2LC(X(LWRK),X(LSLC),L1,L2,LSUB1,LSUB2,'OVERLAP ')
C
            CALL LCMAT(X(LSLC),X(LWRKL1),LSUB1,LSUB2,LNUMC)
            CALL MTARBR(X(LEWDLC),LSUB1,X(LWRKL1),LNUMC,X(LWRKL2),
     *                  LSUB1,1)
            CALL LCMAT(X(LVECLC),X(LWRKL1),LSUB1,LSUB2,LNUMC)
            CALL MRARTR(X(LWRKL2),LSUB1,LSUB1,LNUMC,X(LWRKL1),LSUB1,
     *                  LSUB1,X(LVECLC),LSUB1)
C
C           -- DEBUG PRINT
            IF(OUT) THEN
               WRITE(IW,*) 'LOCAL WSD MATRIX (BETA)'
               CALL PRSQLDC(ISUB,X(LVECLC),LSUB1,LSUB1,LSUB1)
            END IF
C
            CALL SYMSQT(LSUB1,X(LVECLC),LSUB1,X(LEWDLC),1)
           END IF
C          ADD ALPHA CONTRIBUTIONS
           CALL VADD(X(LEWDLC),1,X(LTMP),1,X(LEWDLC),1,LSUB2)
         END IF
        END IF
        IF(NDCGRD.GE.2) THEN
          IF(SCFTYP.EQ.UHF) THEN
             WRITE(IW,*) " ***ERROR. UHF IS UNAVAILABLE WITH NDCGRD>2"
             CALL ABRT
          END IF
C         ADDITIONAL MEMORY
          CALL VALFM(LOADFM)
          LWRKL3 = LOADFM + 1
          LWRKLL = LWRKL3 + LSUB1*LNUMC
          LAST   = LWRKLL + LSUB3
          NEEDL2 = LAST   - LOADFM - 1
          CALL GETFM(NEEDL2)
C
C         CALCULATE INVERSE OVERLAP MATRIX IN X(LSLC)
          CALL TRT2LC(X(LWRK),X(LSLC),L1,L2,LSUB1,LSUB2,'OVERLAP ')
          CALL CPYTSQ(X(LSLC),X(LVECLC),LSUB1,1)
          CALL DGEFA(X(LVECLC),LSUB1,LSUB1,X(LEIGLC),INFO)
          IF(INFO.EQ.0) THEN
            CALL DGEDI(X(LVECLC),LSUB1,LSUB1,X(LEIGLC),DET,X(LOCCLC),1)
          ELSE
            CALL ABRT
          ENDIF
          CALL SYMSQT(LSUB1,X(LVECLC),LSUB1,X(LSLC),1)
C
          IF(NDCGRD.EQ.2) THEN
C           PICK-UP LOCAL FOCK MATRIX IN X(LWRKL1)
            CALL TRT2LC(X(LWRK2),X(LWRKLL),L1,L2,LSUB1,LSUB2,'FOCK    ')
            CALL LCMAT(X(LWRKLL),X(LWRKL1),LSUB1,LSUB2,LNUMC)
C           READ STANDARD LOCAL DENSITY MATRIX IN X(LEWDLC)
            CALL SQREAD(IDCDM ,X(LEWDLC),LSUB2)
          ELSE IF(NDCGRD.EQ.3) THEN
            CALL DSCAL(LSUB2,-ONE,X(LEWDLC),1)
C           PICK-UP LOCAL OVERLAP MATRIX IN X(LWRKL1)
            CALL TRT2LC(X(LWRK),X(LWRKLL),L1,L2,LSUB1,LSUB2,'OVERLAP ')
            CALL LCMAT(X(LWRKLL),X(LWRKL1),LSUB1,LSUB2,LNUMC)
          END IF
C
          CALL MTARBR(X(LEWDLC),LSUB1,X(LWRKL1),LNUMC,X(LWRKL2),LSUB1,1)
          CALL LCMAT(X(LSLC),X(LWRKL3),LSUB1,LSUB2,LNUMC)
          CALL MRARTR(X(LWRKL2),LSUB1,LSUB1,LNUMC,X(LWRKL3),LSUB1,LSUB1,
     *                X(LVECLC),LSUB1)
C
          IF(NDCGRD.EQ.3) THEN
C           READ STANDARD LOCAL DENSITY MATRIX IN X(LEWDLC)
            CALL SQREAD(IDCDM ,X(LEWDLC),LSUB2)
C           PICK-UP LOCAL FOCK MATRIX IN X(LWRKL1)
            CALL TRT2LC(X(LWRK2),X(LWRKLL),L1,L2,LSUB1,LSUB2,'FOCK    ')
            CALL LCMAT(X(LWRKLL),X(LWRKL1),LSUB1,LSUB2,LNUMC)
          END IF
C
          CALL LCMAT(X(LEWDLC),X(LWRKL3),LSUB1,LSUB2,LNUMC)
          CALL SYMSQT(LSUB1,X(LVECLC),LSUB1,X(LEWDLC),1)
C
          CALL MTARBR(X(LSLC),LSUB1,X(LWRKL1),LNUMC,X(LWRKL2),LSUB1,1)
          CALL MRARTR(X(LWRKL2),LSUB1,LSUB1,LNUMC,X(LWRKL3),LSUB1,LSUB1,
     *                X(LVECLC),LSUB1)
          CALL SYMSQT(LSUB1,X(LVECLC),LSUB1,X(LSLC),1)
          CALL VADD(X(LEWDLC),1,X(LSLC),1,X(LEWDLC),1,LSUB2)
          CALL DSCAL(LSUB2,-HALF,X(LEWDLC),1)
C
          CALL RETFM(NEEDL2)
        ENDIF
C
        CALL SQWRIT(IDCEDM,X(LEWDLC),LSUB2)
C
        CALL RETFM(NEEDLC)
  100 CONTINUE
C
C     CONSTRUCT TOTAL DENSITY MATRIX FROM SUBSYSTEM MATRICES
      IF(NDCGRD.EQ.0) THEN
        CALL TRLC2T(IDCEDM,EPS,DUMMY,X(LWRK),L1,L2,'DCEWDM  ',
     *              .TRUE.,.FALSE.)
      ELSE
        CALL TRLC2T(IDCEDM,EPS,DUMMY,X(LWRK),L1,L2,'DCSEWDM ',
     *              .FALSE.,.FALSE.)
      ENDIF
C
      CALL RETFM(NEEDE)
      RETURN
      END
      

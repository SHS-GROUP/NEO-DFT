*  8 MAY 1983 - MWS - REASSEMBLED
*      THIS ROUTINE TAKEN FROM THE PROGRAM SYSTEM ALIS
*      ORIGINALLY WRITTEN AT IOWA STATE UNIVERSITY COMPUTER CENTER
*      THIS ROUTINE LETS THE IBM VERSION OF GAMESS PERFORM
*      CPU AND REAL TIMING CHECKS.
*
ZTIME    CSECT
         ENTRY TIME,ZTIME1,ZTIME2
         EJECT
*     SUBROUTINE TIME(S)
*                  THE ARGUMENT IS A REAL NUMBER WHICH WILL BE SET
*                  TO THE NUMBER OF SECONDS ELAPSED SINCE MIDNIGHT.
*
TIME     BC    ALWAYS,12(15) LINKAGE CONVENTION
         DC    X'08'
         DC    CL7'TIME'
         STM   14,WORK,12(13)
         BAL   WORK,A(15)
         USING *,13
SAVEMAC  DC    18F'0'
S        ST    13,4(WORK)
         ST    WORK,8(13)
         LR    13,WORK
         SPACE 3
*   GET TIME IN BINARY (1/100 SEC UNITS) FORMAT
         L     OUTADDR,0(1)  GET ADDR OF ARG
         TIME  BIN           GET TIME
         ST    0,CONV+4      CONVERT BINARY TO FLT PT NO
         LD    WORK,UNORMZRO
         AD    WORK,CONV
         DD    WORK,TIMRUNIT
         STE   WORK,0(OUTADDR)
         BC    ALWAYS,RETURN GO HOME
         EJECT
*
*     SUBROUTINE ZTIME1(T,X,Y)
*                  ONE, TWO, OR THREE ARGUMENTS MAY BE USED.
*                  T IS FOR REAL (WALL CLOCK) TIME IN SECONDS.
*                  X IS FOR TASK (CPU) TIME IN SECONDS.
*                  Y IS FOR DEFINING USER TASK TIME INTERVALS.
*                  Y IS SET TO ZERO WHEN THE USER INTERVAL EXPIRES.
*     NOTE:  CALLING ZTIME1 TWICE WITH NO INTERVENING CALL TO ZTIME2
*            RESULTS IN THE TASK TIMING INTERVAL BEING RESET.
ZTIME1   BC    ALWAYS,12(15) LINKAGE CONVENTIONS
         DC    X'08'
         DC    CL7'ZTIME1'
         STM   14,WORK,12(13)
         LA    WORK,B
         LCR   WORK,WORK
         AR    WORK,15
         ST    13,4(WORK)
         ST    WORK,8(13)
         LR    13,WORK
         SPACE 3
*        SUBTRACT TIMER VALUE FROM ARG AND RETURN
         L     OUTADDR,0(1)  GET ADDRESS OF USER'S SUBTOT-
         LTR   OUTADDR,OUTADDR    DO WE WANT TASK TIMING TOO
         BM    CONT1              NO
         L     WORK,4(1)
         LTR   WORK,WORK          IS THERE ANOTHER ARGUMENT
         BM    XXX                NO
         SDR   WORK,WORK          YES
         L     GT,8(1)            GET ADDRESS OF SET INTERVAL
         LE    WORK,0(GT)         GET SET INTERVAL
         LE    GT,0(WORK)          GET SUBTOTAL
         AER   GT,WORK             ADD SUBTOTAL
         STE   GT,0(WORK)          SAVE IT
         DD    WORK,FIX           CONVERT TO RIGHT UNITS
         AW    WORK,UNORMZRO      FIX IT
         STD   WORK,SUBTOT
         ST    GT,X               STORE IT'S ADDRESS
         STIMER TASK,EXIT,TUINTVL=SET
         B     CONT1
XXX      STIMER TASK,TUINTVL=H24RS     YES?. THEN SET TIMER
         LE    WORK,0(WORK)       GET USER'S SUBTOT
         MVC   CONV+4(4),H24RS    FLOAT SET INTERVAL
         LD    GT,CONV
         MD    GT,FIX             CONVERT TO SECONDS
         AER   WORK,GT            ADD THEM TOGETHER AND
         STE   WORK,0(WORK)       SAVE
CONT1    MVC   SUBTOT+0(4),0(OUTADDR)  MOVE IN USER'S SUBTOT
         TIME  BIN           GET TIME (INTEGER,UNITS=1/100 SEC)
         ST    0,CONV+4      CONVERT BINARY TIME TO FLOATING NUMBER
         LD    WORK,UNORMZRO
         SD    WORK,CONV     SUBTRACT CURRENT TIMER VALUE
         DD    WORK,TIMRUNIT CHANGE TIMER UNITS TO SECONDS
         AD    WORK,SUBTOT   ADD USER'S TIME
         STE   WORK,0(OUTADDR)    SUBTOTAL & RETURN VALUE IN USER'S
         BC    ALWAYS,RETURN  SUBTOTAL
         EJECT
*
*     SUBROUTINE ZTIME2(T,X,Y)
*                  ONE, TWO, OR THREE ARGUMENTS MAY BE USED.
*                  T IS FOR REAL (WALL CLOCK) TIME IN SECONDS.
*                  X IS FOR TASK (CPU) TIME IN SECONDS.
*                  Y IS FOR DEFINING USER TASK TIME INTERVALS.
*                  Y IS SET TO ZERO WHEN THE USER INTERVAL EXPIRES.
*     NOTE:  ZTIME2 SHOULD NEVER BE CALLED TWICE IN SUCCESSION UNLESS
*            THE ORIGINAL VALUES FROM ZTIME1 ARE RESTORED.
ZTIME2   BC    ALWAYS,12(15) LINKAGE CONVENTIONS
         DC    X'08'
         DC    CL7'ZTIME2'
         STM   14,WORK,12(13)
         LA    WORK,C
         LCR   WORK,WORK
         AR    WORK,15
         ST    13,4(WORK)
         ST    WORK,8(13)
         LR    13,WORK
         SPACE 3
*   ADD TIMER VALUE TO ARG TO GET TIME SUBTOTAL
         L     OUTADDR,0(1)  GET ADDR OF USER'S TIME SUBTOTAL
         LTR   OUTADDR,OUTADDR    DO WE WANT TASK TIME
         BM    CONT2              NO
         L     WORK,4(1)          YES, THEN GET ADDRESS
*                             PUT TIME LEFT IN REGISTER 0
         TTIMER
         ST    0,CONV+4           FLOAT IT AND NORMALIZE IT
         LD    WORK,UNORMZRO
         AD    WORK,CONV
         MD    WORK,FIX           CONVERT TO SECONDS
         LCDR  WORK,WORK     SUBTRACT TIME LEFT FROM USER'S SUBTOT
         AE    WORK,0(WORK)
         STE   WORK,0(WORK)       STORE SHORT
         LTR   WORK,WORK       IF HAVE 3RD AGRUMENT, CANCEL LAST STIMER
         BM    CONT2
         TTIMER CANCEL
CONT2    TIME  BIN                GET TIME OF DAY
         ST    0,CONV+4
         LD    WORK,UNORMZRO CONVERT BINARY TIME TO FLOATING NUMBER
         AD    WORK,CONV     ADD CURRENT TIMER VALUE
         DD    WORK,TIMRUNIT CHANGE TIMER UNITS TO SECONDS
         MVC   SUBTOT+0(4),0(OUTADDR)
         AD    WORK,SUBTOT   ADD USER'S SUBTOTAL
MODUP    BNL   ANSWER       ANSWER CONSIDERED GOOD IF IT IS POSITIVE.
         AD    WORK,HRS24       ELSE, ADD 24 HOURS AND TEST IT AGAIN
         BC    ALWAYS,MODUP
ANSWER   STE   WORK,0(OUTADDR)    PUT ANSWER IN USER'S SUBTOTAL
         BC    ALWAYS,RETURN
         EJECT
RETURN   EQU   *                  CONVENTIONAL RETURN
         L     13,4(13)
         LM    14,WORK,12(13)
         MVI   12(13),X'FF'
         BCR   ALWAYS,14
         SPACE 3
*   EXIT ROUTINE
         DROP  13
         DS    0D
         USING *,15
EXIT     ST    2,X+4
         L     2,X
         MVC   0(4,2),UNORMZRO+4
         L     2,X+4
         BR    14
X        DS    2F
         DROP  15
         SPACE 3
*   CONSTANT DEFINITION
         DS    0D
HRS24    DC    D'86400.0'
TIMRUNIT DC    D'100.0'
UNORMZRO DC    X'4E00000000000000'
CONV     DC    X'4E00000000000000'
SUBTOT   DC    X'0000000000000000'
FIX      DC    D'26.04E-6'
H24RS    DC    X'7F',3X'FF'
         SPACE 3
*    EQUIVALENCES
ALWAYS   EQU   15
GT       EQU   2
OUTADDR  EQU   3
WORK     EQU   4
A        EQU   S-TIME
B        EQU   ZTIME1-SAVEMAC
C        EQU   ZTIME2-SAVEMAC
SET      EQU   SUBTOT+4
         END

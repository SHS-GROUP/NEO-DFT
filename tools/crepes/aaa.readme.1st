Welcome to CREPES
Complete Rotation for the Evaluation of the Potential Energy Surface

This tool is designed to automatically generate GAMESS input files that 
sample the potential energy surface (PES) based on rotational parameters 
supplied by the user.

Written by Mike ver Haag at Iowa State University, April 2011.

Requirements
------------
C++
Python



Components
----------
readme.crepes
--General description of crepes

rotation.cpp
--C++ source code for the rotation code

crepes
--python script used for the execution of crepes

rotation
--A simple tool for using the rotation code to complete a rotation on 1 bond.



Installation
------------
Extract to desired installation location.
If you are reading this you have probably already succeeded at this.

bunzip2 crepes.tar.bz2
tar -xvf crepes.tar

Change to the crepes directory (I will assume for the purpose of this 
documentation that the install path for crepes is as below)

cd /home/USER/crepes

Compile rotation.cpp to an app called crot
To do this
1. Identify your C++ compiler

There are a lot of C++ compilers out there.
The most common are 
GNU, Intel, and Pathscale
To identify try the following

which g++
which icc
which pathCC

2. Based on which compiler you have, run the appropriate command.
g++ -o crot rotation.cpp
icc -o crot rotation.cpp
pathCC -o crot rotation.cpp

3. Add CREPES to your $PATH
Path is a *nix variable that tells the operating system where to look 
for its executables to save yourself the effort of typing out the entire 
path to crepes every time add the crepes path to your $PATH. This line 
is typically added to your .tcshrc .cshrc or .bashrc file in your home 
directory. To determine your current shell type.

echo $SHELL
or 
ps -p $$ |tail -1

Based on you shell add the appropriate line
tcsh
set path = ( "/home/USER/crepes" $path)
bash
path=$PATH:/home/USER/crepes
csh
setenv path $path:/home/USER/crepes



Usage
-----
*NOTICE* 
currently ^C ( Ctl-C escape sequence) only works at questions 
where CREPES is not asking for an integer
*NOTICE*

CREPES will ask for input, I have denoted input steps with 
-- 
Below each input question I elaborate on what specifically the question is 
asking for.

CREPES will generate a folder named for your inputfile called inputfile.output
In that folder will be created input files based on user input defined
during the running of CREPES.


Step 1

CREPES takes one argument, the name of the GAMESS input file.
All files need to end in .inp 
If no arguments are supplied 
--Enter a GAMESS input file:
Crepes is asking for the name of the file to be iterated upon for 
rotation.


Step 2

In this step CREPES determines information about the axes of rotation.
--Please enter the number of rotatable groups:
CREPES is asking how many rotations total you are performing on your molecule.
Be careful CREPES currently does not have a confirmation step here.
CREPES will ask a series of question for each individual rotation.
CREPES will order output nomenclature based on the order that you define 
your rotations.
Atom numbers are indicated by their order in the input deck
This order is typically easy to visualize by using another free GAMESS 
tool, macmolplt

--Enter atom number of rotation point 1 for rotation 1
This question is asking for the atom number of the first point on the 
line about which you would like to rotate your group of atoms. This 
atom does not move for this rotation but can move in another rotation.

--Enter atom number of rotation point 2 for rotation 1:
This question is asking for the atom number of the second point on the 
line about which you would like to rotate your group of atoms. This 
atom does not move for this rotation but can move in another rotation.

--Number of atoms moving by rotation 1:
This question is asking how many atoms are moving with a particular 
rotation not which atoms. It does not include the atoms you are rotating 
about. ie An alcohol will only have 1 atom moving.

--Total rotation (in degrees) 1 (360) :
This question is asking how many degrees your total rotation will be.
It has a default of 360 degrees.
It also has a notice.
For rotations less than 360 add one step size to total rotation.
For nomenclature reason an extra step is required, 
ie You would like to do a rotation of 180 degrees in 30 degree steps. 
You would enter 210 in total rotation.

--Step size (in degrees) of rotation 1 (120) :
This question is asking the increment of degrees you would like each Step
Default step size is 120 degrees
ie step of 120 in a 360 total rotation will generate structures for 
0,120,240

These questions will be repeated for each of the number of rotations 
you indicated in question 1


Step 3

CREPES will now ask question about the atoms that are moving.

--Enter the atoms that move for rotation 1 (comma separated):
This is asking for a list of atom numbers that are moving. 
This does not include the atoms that you are rotating about.
input should look something like 3,4,5

This process will repeat for each rotation.


Step 4

After all data is input about the rotations CREPES will display the input data. 
Carefully look over the defined rotations.
If there is an error indicate that they are not all correct
CREPES will ask which rotation needs to be corrected
you can only correct one at a time.

CREPES will then generate the input decks.
Output names are formatted in the following way

sample.inp
sample.output/
sample.rot1.rot2.etc.inp

looking from rotation point 2 towards point 1 rotations occur in a 
clockwise direction. if you wish to rotate in the opposite direction 
input your rotation points in the opposite order.



History
-------
This project started out as a simple tool to help me save some time 
when I needed to do a rotational analysis of a functional group on a 
given molecule. As part of my research we started looking at  
carbohydrates. I attempted to use molecular mechanics(MM) codes to help 
identify global minima. I found that the MM codes that were available were 
not very rigorous in their sampling of the PES. I was lucky enough to 
have a large amount of resources available. So it occurred to me a better 
method for identifying global minima would be to use a small basis set 
and generate a complete set of conformers. Thus, came the creation of 
CREPES. This shows where CREPES is strongest; in environments with high  
resource availability and with molecules with high number of degrees of 
freedom. I tried to make CREPES as general as possible so that it would 
be functional for as many other people as possible.



Wish list
--------
Some things that were not added but could be relatively easily to improve 
performance or functionality
--add escape sequence from integer questions
	currently ^C only works at questions where CREPES is not asking 
	for an integer. 
--re-write C++ code in python 
	there should be no reason why python could not handle the transforms
	this would reduce requirements 
--Find a way to make non-compound rotations more efficient.
	currently every rotation is recalculated every time it is called
	many rotations are the same every time they are calculated
	if they could be stored in memory it would reduce times that 
	the C++ would have to be called

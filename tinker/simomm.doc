              QM/MM computations with GAMESS and TINKER

   GAMESS/TINKER interface by Jim Shoemaker and Cheol Ho Choi - 1998
        Documentation written by Cheol Ho Choi - November 1999
      Additional functionality and parallization at AIST Tsukua,
    by N. Asada, Kazuo Kitaura and Dmitri Fedorov in September 2010
            this file's most recent update - February 2013

                    Outline of this document:
                        Introduction
                        References
                        TINKER program
                        Installation
                        Coordinate preparation
                        Examples

-------------------------------------------------------------------------

===== Introduction:

GAMESS can perform either Shoemaker et al's SIMOMM (Surface Integrated
Molecular Orbital/Molecular Mechanics) or Morokuma et al's IMOMM (Integrated
Molecular Orbital/Molecular Mechanics) scheme.  Although SIMOMM was
developed especially for the study of surface chemical systems, it is a
general method so that one may find it useful in other systems too.

The existence of a $LINK group triggers these QM/MM computations.

SIMOMM and IMOMM are models in which some atoms embedded in a larger
set of atoms are treated by quantum mechanics (any such method available
in GAMESS), while the remaining atoms are treated by molecular mechanics.
Capping atoms (usually hydrogens) connected by -single- bonds are
included in the QM treatment, to satisfy any dangling valences created
by the boundary between the QM atoms and the total set of atoms.
IMOMM places these capping atoms at fixed angles and distances, along
the cut bonds, whereas SIMOMM allows the positions of these capping
atoms to be optimized.  Accordingly, most applications we have performed
to date use the SIMOMM model.

Note that SIMOMM is not necessarily just a surface model, as shown by the
QM treatment of a small part of a larger organic molecule examples below.

===== References:

The original IMOMM model is described in
   F.Maseras, K.Morokuma  J.Comput.Chem. 16, 1170(1995).

The following paper describes the SIMOMM method:
    (a) "SIMOMM: an Integrated Molecular Orbita/Molecular Mechanics
         optimization scheme for Surfaces"
        J.R.Shoemaker, L.W.Burggraf, M.S.Gordon
        J.Phys.Chem.A  103, 3245-51(1999).
An initial application was to the controversial dimers found on the
reconstructed, bare silicon 100 surface, see also (i) and (l) below:
    (b) "An ab initio cluster study of the structure of the Si(001) surface"
        J.R.Shoemaker, L.W.Burggraf, M.S.Gordon
        J.Chem.Phys.  112, 2994-3005(2000)
Since then, this surface and the structures and reactivity of a variety
of species adsorbed on it have been studied (article (f) is a review):
    (c) "Cycloaddition Reactions of 1,3-Cyclohexadiene on the Si(100) surface"
        C.H.Choi, M.S.Gordon  J.Am.Chem.Soc.  121, 11311-7(1999)
    (d) "Modeling of the transition from active to passive oxidation
         of Si(100)"  D.-J.Liu, C.H.Choi, M.S.Gordon, J.W.Evans
        Mat. Res. Soc. Symposium Proceedings 619, 173-8 (2000)
    (e) "Adsorption of water on the Si(100) surface: An ab initio and
         QM/MM cluster study."
        Y.Jung, C.H.Choi, M.S.Gordon  J.Chem.Phys.B  105,4039-44(2001)
    (f) "Chemistry on Silicon Surfaces" C.H.Choi, M.S.Gordon
        in "The chemistry of organic silicon compounds",
        ed. Z.Rappaport, Y.Apeloig, p. 821 (2001)
    (g) "Cycloaddition Reactions of Acrylonitrile on the Si(100)-2x1 Surface"
        C.H.Choi, M.S.Gordon  J.Am.Chem.Soc.  124, 6162(2002)
    (h) "Passive and Active Oxidation of Si(100) by Atomic Oxygen:
         A Theoretical Study of Possible Reaction Mechanisms"
        C.H.Choi, D.-J.Liu, J.W.Evans, M.S.Gordon
        J.Am.Chem.Soc.  124, 8730(2002)
    (i) "An ab initio study of the structure of two-, three- and five-dimer
         silicon clusters: An approach to the Si(100) surface"
        Y.Jung, Y.Akinaga, K.D.Jordan, M.S.Gordon
        Theoret.Chem.Acc.  109, 268-73(2003)
    (j) "Cycloaddition reactions of dienes on the Si(100)-2x1 surface"
        C.H.Choi, M.S.Gordon  Int.J.Mod.Phys.B: Cond.Matt.Phys, Stat.Phys.,
        Appl.Phys. 17, 1205-1210(2003)
    (k) "Multiconfigurational self-consistent field study of the silicon
         carbide (001) surface"
        H.Tamura, M.S.Gordon   J.Chem.Phys.  119, 10318-10324(2003)
    (l) "Are both symmetric and buckled dimers on Si(100) minima?  Density
         functional and multireference perturbation theory calculations"
        Y.Jung, Y.Shao, M.S.Gordon, D.J.Doren, M.Head-Gordon
        J.Chem.Phys.  119, 10917-10923(2003)
    (m) "Atomistic modeling of morphological evolution during simultaneous
         etching and oxidation of Si(100)"
        M.A.Albao, D.-J.Liu, C.H.Choi, M.S.Gordon, J.W.Evans
        Surface Science  555, 51-67(2004)
    (n) "Adsorption of acetylene on Si(100)-(2x1)"
        J.M.Rintelman, M.S.Gordon
        J.Phys.Chem.B  108, 7820-7826(2004)

A review of many worker's study of silicon surface chemistry:
  Theoretical Studies of Silicon Surface Reactions with main group Absorbates
  C.H.Choi, M.S.Gordon  in Computational Materials Chemistry: Methods and
  Applications, Edited by L.A.Curtiss and M.S.Gordon  Kluwer Academic Press,
  Dordrecht, 2004, pp 125-190.

===== TINKER program:

Program TINKER has been integrated into GAMESS for the MM part of the
computations.  This molecular mechanics program is the product of
Jay Ponder's research group, and more information about TINKER can be
found on their web page,
    http://dasher.wustl.edu/tinker
Three journal articles relating to TINKER are
 a) J. W. Ponder and F. M Richards, "An Efficient Newton-like
    Method for Molecular Mechanics Energy Minimization of
    Large Molecules", Journal of Computational Chemistry,
    8, 1016-1024 (1987)
 b) C. E. Kundrot, J. W. Ponder and F. M. Richards, "Algorithms for
    Calculating Excluded Volume and Its Derivatives as a Function
    of Molecular Conformation and Their Use in Energy Minimization",
    Journal of Computational Chemistry, 12, 402-409 (1991)
 c) P. Ren and J. W. Ponder, "Polarizable Atomic Multipole Water Model
    for Molecular Mechanics Simulation"
    J. Phys. Chem. B, 107, 5933-5947 (2003).

The TINKER program is normally obtained directly from Washington
University through the web page mentioned above, under an agreement
not to make copies of it (much like GAMESS itself).  Since the
TINNKER program had to be modified somewhat to interface with GAMESS,
Jay Ponder graciously gave permission to distribute TINKER in its
modified form:
        You should read the licensing requirements on the
        TINKER web page, and consider this source code to
        be bound by this same agreement !!!
The manual for TINKER is not include here, but may be downloaded
from the TINKER web site.

TINKER is offered as an optional extension to GAMESS.  This is primarily
due to its use of numerous include files to dimension memory by static
storage allocations (changeable by adjusting sizes.i and recompiling).
This differs greatly from the usual GAMESS dynamic memory, so TINKER is
not included in GAMESS normally.  The use of static storage, with 1,000
atoms and a Hessian store of 1,000,000, leads to roughly doubling of the
memory image of GAMESS, before counting the user input for the MWORDS
and MEMDDI storage used by the QM portion of the run.

The package consists of twelve *.f FORTRAN source files, and numerous
include files (*.i).  The files named Libt*.f are lightly modified
TINKER code, while the three T*.f files were written by Jim Shoemaker
and Cheol Choi to perform the QM/MM interface.

The include file sizes.i can be used to adjust dimensions.  Note that
the parameter MAXATM in this file is used in GAMESS' file INPUTB.SRC,
and the values given must match exactly.

===== Installation:

To add TINKER to GAMESS, you must compile both programs, and link
a GAMESS+TINKER binary.  The steps for installing GAMESS are fully
described in the file
    ~/gamess/machines/readme.unix
so here it is only necessary to say what small changes are needed in
this procedure.  Basically, step 2's manual edits to the scripts,
shown below, will cause them to compile GAMESS+TINKER.

1. Obtain the TINKER add-on by downloading from
        http://www.msg.chem.iastate.edu/GAMESS/tinker.tar.Z
   and unpack this file inside your GAMESS intallation by
       chdir ~/gamess
       zcat /full/path/to/file/tinker.tar.Z | tar -xvf -
   After this, the files for TINKER will be present below the GAMESS
   directory tree, namely in the directories
       ~/gamess/tinker
       ~/gamess/tinker/params

2. The procedure for installing GAMESS is modified as follows:
    A. edit "compall" to set the variable TINKER to true.
    B. edit "comp" to set the variable TINKER to true,
       and double check the compile-time choice for the number
       of MM atoms against ~/gamess/tinker/sizes.i's value.
    C. edit "lked" to set the variable TINKER to true.

3. Now follow the usual directions in ~/gamess/misc/readme.unix,
   and TINKER will be automatically included into GAMESS.

In case you have previously installed GAMESS w/o TINKER,
the bare minimum steps to obtain GAMESS + TINKER are
    -- make the script changes indicated above.
    -- execute the part of 'compall' that compiles TINKER codes.
    -- use 'comp' to recompile GAMESS files inputb, fmogrd, and qmmm.
       These are presently the only GAMESS files containing /ATMTYP/,
       which interfaces coordinates between the two programs.
    -- use 'lked' to link a GAMESS+TINKER binary.

Some parallel content has been introduced into TINKER by the Tsukuba
gang.  Of course, the normal parallelization of the quantum mechanical
part of the run handled by GAMESS will also speed up the run.

TINKER + GAMESS is not tested as thoroughly as GAMESS alone, for example
on as many kinds of computers.  We have installed it on RedHat Linux in
32 or 64 bit mode, IBM AIX in both 32 and 64 bit modes, and on AXP computers
in 64 bit mode.  These are the only environments we have tested, so there
might be trouble with anything else!  Be sure to be cautious about the
significance of any results you obtain with GAMESS+TINKER.

===== Coordinate preparation:

Since we are using TINKER for the MM calculations, the initial input
format has to be TINKER format.  Since the MM region may contain many
atoms, you may prefer to use your favorite drawing program to create
the initial structure.  Then, use the program BABEL to convert almost
any molecular specification file format into TINKER format.

BABEL can be downloaded from http://openbabel.org

It is easiest to start with a TINKER input file defining the total
system.  This is read in your first run by setting COORD=TINKER in the
CONTRL group.  The coordinate information is in a new input group, named
$TINXYZ, where one inputs coordinates in TINKER format.  The IQMATM
keyword is also give, to indicate which subset of the total set of
atoms is to be treated as QM.  In other words, in the first run,
the $TINXYZ has both QM and MM atoms in it.

The first example below uses this style.

Later, when you restart, you should enter the $DATA group containing
the quantum mechanical atoms, as generated in the xxx.dat file written
by your initial run with just a $TINXYZ.  Thus the restart will contain
the $DATA group with QM atoms, but also the $TINXYZ from the xxx.dat
file with all QM/MM atoms present.  The restarts will use COORD=UNIQUE
to specify reading from $DATA, and will still contain a $LINK.  The
order of atoms in $DATA must match the $TINXYZ, but will automatically
do so if you start by $TINXYZ input only.

QM atoms in $DATA are followed by the capping atoms.  By default they
are monovalent hydrogens.  However, you can use any other monovalent
atom if you wish, such as changing them to fluorines.  These cap
atoms do not appear in the $TINXYZ, of course.

Since it is very convenient to use DLC (delocalized coordinates), it is
useful to set NZVAR in CONTRL group and add DLC=.True. and AUTO=.True.
to the $ZMAT group.

===== Examples:

Two examples are provided, after the first two there is some
explanation of the keywords they contain.

1. Suppose we want to treat the double bond of cyclopentene quantum
mechanically, and the rest with molecular mechanics on the basis of
IMOMM scheme.  An input file for this is

!  An example file to illustrate the general input file to perform
!  Morokuma's MOMM scheme.
!
!  The results of the geometry optimization are:
!  NSERCH=0:
!  FINAL QM E= -77.0655534379, RMS grad= 0.0127255, MM energy= 5.3199258027
!  combined QM+MM energy is -77.0570755969
!  NSERCH=7:
!  FINAL QM E= -77.0675805819, RMS grad= 0.0000101, MM energy= 5.4640575357
!  combined QM+MM energy is -77.0588730523
!
!  Note that the existence of a LINK group triggers MOMM calculation.
!  COORD=TINKER, if TINNKER coords are in $TINXYZ, means no $DATA given.
!  NZVAR used to trigger use of delocalized coordinates.
!
 $CONTRL SCFTYP=RHF RUNTYP=optimize COORD=TINKER NZVAR=33 $END
 $BASIS  GBASIS=sto NGAUSS=3  $END
 $ZMAT   DLC=.T. AUTO=.T. $END
!  $DATA group is not provided, because input format is only TINKER.
 $TINXYZ
    13 Cyclopentene, Maseras and Morokuma J. Comp. Chem. 1995, 16, 1170
     1  C     -0.809200   -1.126700   -0.107500     2     2     3    11
     2  C     -1.400300    0.245100   -0.087400     1     1     4     5    6
     3  H     -1.420900   -2.040000   -0.149000     5     1
     4  C     -0.180000    1.163900   -0.012100     1     2     7     8    9
     5  H     -2.049300    0.379500    0.806900     5     2
     6  H     -1.974700    0.435900   -1.021500     5     2
     7  H     -0.214800    1.764100    0.924700     5     4
     8  H     -0.164900    1.842400   -0.894100     5     4
     9  C      1.068700    0.280400   -0.018000     1     4    10    11   12
    10  H      1.688800    0.488300   -0.918500     5     9
    11  C      0.519000   -1.107700   -0.070000     2     1     9    13
    12  H      1.662100    0.432500    0.911300     5     9
    13  H      1.157900   -2.003100   -0.076500     5    11
 $END
!   Because IMOMM=.T., Morokuma's MOMM scheme is used.
!   IQMATM contains the atoms to be calculated quantum mechanically.
 $LINK IMOMM=.T. IQMATM(1)=1,11,3,13 $END
!   Due to non-GAMESS input format, each option in TINKEY group
!   should be on a separate line.
 $TINKEY
parameters /u1/mike/gamess/tinker/params/mm2
 $END

The presence of the $LINK group in the input file is what triggers
the QM/MM calculation.  In this group, you must choose between IMOMM
and SIMOMM, by entering one of these as .TRUE.  There is no default
selection, you must make one.

For either procedure, IQMATM specifies the atoms which are going to be
treated by quantum mechanics.  Any atoms not given in IQMATM are only
in the molecular mechanics region.  In the above example, the two C's
of the double bond, and their bonded hydrogen atoms are numbers 1, 11,
3, and 13.  The $TINXYZ group shows that each C is originally hooked
to one other C in the ring.  To be precise, the information in $TINXYZ
shows that the C atoms were attached to two other atoms, numbers 2 and
9.  Therefore the cut between QM and MM region separates bonds 1 with 2,
and bonds 11 with 9.   The IMOMM method will cut these bonds off, and
add an H atom to cap off the dangling valence.  The H atom will be
placed at the same angle as the original CC bond being cut, and at a
distance that is determined by the sum of the covalent radii (C+H in
this example).  The capping H will be frozen at that location, while
the rest of the double bond is geometry optimized.

Prior to June 2003, it was necessary to define the linkage explicitly,
but now that information will be deduced from the data in $TINXYZ and
the $LINK's IQMATM input.  It is no longer possible to define the
distance at which the capping hydrogens are fixed.  This means that
older input files, containing LINKGE, BLQM, and/or BLMM in the $LINK
group, no longer work.

SIMOMM removes the constraint about the angular and distance location
of the capping atoms, and as a result may provide a more realistic
geometry optimization within the quantum mechanical zone.

The capping atom is necessarily monovalent, and any automatically
generated $DATA will cap with hydrogen atoms.  The capping atom may
be changed to some other monovalent atom, e.g. fluorine, by editing
this $DATA.  Be careful not to change the order of atoms within this
group, during such a transmutation.  The requirement that capping atoms
be monovalent is equivalent to saying the bonds that are cut by the
boundary between QM and MM are single bonds, only, and so may be
reasonably well modeled by a M-H or M-Cl (etc.) bond in place of
the original cut at M-M'.  In other words, the electronegativity
match must be reasonable, as is the case of replacing severed
Si-Si bonds by capping Si-H in the references quoted above.

Transition metal surfaces are likely to be poor candidates for SIMOMM
modeling, as that sort of surface is probably a poor match for H or
halogens in electronegativity, and the capping process necessarily
interferes with the long range delocalization in metals.  SIMOMM, in
other words, is better suited to insulator or semiconductor type systems.

The group $TINKEY replaces the TINKER key file. Users are encouraged to
read the TINKER manual for the details.  You must specify the complete
path to the molecular mechanics parameter file in this group, but
not including the .prm extension of these files.  In the above example,
we used the MM2 parameter set.  Currently, TINKER has 14 different
parameter sets.  In addition, various other TINKER options can be
specified in the $TINKEY group.  A group $TOPTMZ can be used, when
TINKER Newton optimization needs extra options such as MODE, METHOD
and GRDMIN.  Please read the TINKER manual for detailed options.

Possible keywords in $TOPTMZ:
     MAXHES: amount of memory to use for the hessian matrix related storage.
             As of 2010, this is allocated from GAMESS' MWORDS, dynamically.
             Check runs should show the necessary amount.
             A value of 400,000 words suffices for Si15 H16 embedded
             in Si199 H92.
     OPTPRF: Tinker optimization module: NEWTN (NEWTON) or MINIMZ (MINIMIZE)
     TMODE: active for NEWTN only, optimization mode, choose from
            AUTO,NEWTON,TNCG,DTNCG (deafult: DTNCG)
     TMETH:  active for NEWTN only, optimization method, choose from:
             AUTO,NONE,DIAG,BLOCK,SSOR,ICCG (default: ICCG)
     MINMET: active for MINIMZ only, optimization method, choose from
             MQN,SD,FR,PR,HS,POW. default: MQN.
     GRDMIN: optimization convergence tolerance (default: 0.0001)
     MODPAR: 0 run Tinker in parallel, 1 do not do it. Default: 0.
     FRZMM: freeze geometry of all MM atoms.

Possible keywords in $LINK:
     IMOMM: see above
     SIMOMM: see above
     IQMATM: see above
     IBAS:

2. The above input yields optimized structures of QM part and MM part.
The QM part has extra hydrogens for the dangling bonds. Sometimes it is
easier to use a previously optimized QM coordinates, which are easily
provided in $DATA (compared to regenerating a $TINXYZ!).  Or, we may
simply want to add a user defined basis set, which we can only do with
a $DATA.  The second example shows a case where the cyclopentene
example was already optimized with the SIMOMM scheme and we want to
input the optimized QM part separately:

!  An example file to illustrate the general input file to perform
!  Shoemaker et al.'s SIMOMM scheme.
!
!  Note that the existence of a $LINK group triggers SIMOMM calculation.
!
!  COORD=UNIQUE, if you want to input QM atoms separately from the
!  MM atoms, although the same atoms must still be in $TINXYZ.  The
!  coordinates for the QM atoms will be those of the $DATA group,
!  not what $TINXYZ says.  Note that $DATA must have all the capping
!  hydrogens in it, at the end.
!
!  This particular optimization happens to input a previously
!  optimized geometry, so it runs only the initial NSERCH=0 point:
!  FINAL E=-77.0739142472, 7 ITERS, RMS GRAD= .0000089,
!  MM Energy=8.2680467843, combined QM+MM energy= -77.0607382765
!
 $CONTRL SCFTYP=RHF RUNTYP=optimize MULT=1 EXETYP=RUN
         COORD=UNIQUE NZVAR=33 $END
 $BASIS  GBASIS=sto NGAUSS=3  $END
 $ZMAT   DLC=.T. AUTO=.T. $END
!  The optimized QM part. Note that it MUST include the hydrogens
!  that replace dangling bonds.
 $DATA
Ab initio atoms in QM region
C1
C           6.0   -.7980989479  -1.1214243765   -.1070524532
C           6.0    .5077499641  -1.1027520491   -.0702239088
H           1.0  -1.3723767399  -2.0367069593   -.1475026326
H           1.0   1.1093101048  -2.0012199099   -.0775923300
H           1.0  -1.3810058083   -.2097263990   -.0989003921
H           1.0   1.0629880755   -.1747785792   -.0300254581
 $END
 $TINXYZ
    13 Cyclopentene, Maseras and Morokuma J. Comp. Chem. 1995, 16, 1170
     1  C     -0.809200   -1.126700   -0.107500     2     2     3    11
     2  C     -1.400300    0.245100   -0.087400     1     1     4     5    6
     3  H     -1.420900   -2.040000   -0.149000     5     1
     4  C     -0.180000    1.163900   -0.012100     1     2     7     8    9
     5  H     -2.049300    0.379500    0.806900     5     2
     6  H     -1.974700    0.435900   -1.021500     5     2
     7  H     -0.214800    1.764100    0.924700     5     4
     8  H     -0.164900    1.842400   -0.894100     5     4
     9  C      1.068700    0.280400   -0.018000     1     4    10    11   12
    10  H      1.688800    0.488300   -0.918500     5     9
    11  C      0.519000   -1.107700   -0.070000     2     1     9    13
    12  H      1.662100    0.432500    0.911300     5     9
    13  H      1.157900   -2.003100   -0.076500     5    11
 $END
!   Because SIMOMM=.T., Shoemaker's SIMOMM scheme is used.
!   IQMATM contains the atoms to be calculated quantum mechanically.
 $LINK SIMOMM=.T. IQMATM(1)=1,11,3,13 $END
!   Due to non-GAMESS input format, each option in TINKEY group
!   must have its own line.
 $TINKEY
parameters /u1/mike/gamess/tinker/params/mm2
 $END

By now, the above example should be self-explanatory.

Remember the total energy is QM energy + MM energy. QM energy is in
atomic unit (hartree) and negative, while MM energy is in kcal/mol
and positive.  Note that the string "FINAL" gives the QM energy,
at a point before the MM energy is known, so it only contains the
QM energy.  The MM region is later fully relaxed during computation
of the gradient at each QM geometry step, giving a fully optimized
MM energy for this QM geometry.  This energy is printed as the
"MM ENERGY", and at this point the program can sum "QM+MM ENERGY".
It is this total system energy that is optimized by the program,
and this should go down.  Note that the MM energy can and often
does go up during the total system's geometry optimization.

ADVICE:

If one wants to freeze some of the geometric parameters in QM
region, note that numbering MUST be based on the sequence in QM
region not the one in MM region.

Frequently, GAMESS complains by saying there are no parameter
values for certain MM parameters. It is simply because the parameter
set you are using does not have such parameters. If these parameters
are for the QM region atoms, one can fool the program by providing
arbitrary parameter values in the parameter file.

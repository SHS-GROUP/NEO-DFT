C 20 Feb 13 - MWS - synchronize SCFWFN common
C  4 Dec 12 - MWS - FIX CRAY DIAGNOSTICS: storage for G3MCCDX,CCCAS4X,
C                   CCCACCLX,MW4SX,G3MSX,CCCASX,G4MX,G4M6XX
C  7 MAR 12 - MWS - FTNCHEK CLEANING
C 30 JAN 12 - SAN - GENERAL COMPOSITE CODE AND HARDCODED COMPOSITE METHODS
C 31 JUL 09 - SAN - ADDING CCCA-CCL METHOD
C 06 JUL 09 - SAN - ADDING CCCA-S4 METHOD
C 02 FEB 09 - SAN - ADDING G3MS METHOD
C 13 SEP 08 - SAN - ADDING MW4S METHOD
C 13 SEP 08 - SAN - COMPOSITE METHODS ACCESS PCM SOLVATION MODEL
C 27 FEB 08 - SAN - ADDING G3(MP2,CCSD) METHOD
C 21 FEB 08 - SAN - ADDING COMPOSITE METHODS TO GAMESS
C
C  PROGRAM BY SEAN NEDD
C  GORDON GROUP/AMESLAB
C  IOWA STATE UNIVERSITY
C  NB:COMPX CALL FROM GAMESS.SRC
C
C*MODULE COMP  *DECK COMPX
C> @brief    main driver for composite thermochemistry
C> @details  main driver for composite thermochemistry
C> @author   Sean Nedd, at ISU, between 2008 and 2011
C
      SUBROUTINE COMPX
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      PARAMETER (NNAM=44,NCOM=20)
      PARAMETER (MAXA=103, MAXL=7)
      PARAMETER (MXATM=2000,MXRT=100)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (NZERO=0,ZERO=0.0D+00,ONE=1,ONE5=1.5D+00,TWO5=2.5D+00)
C
      DIMENSION QNAM(NNAM),KQNAM(NNAM)
      DIMENSION CETOT(NCOM),CENDFT(NCOM),CENCCS(NCOM),CCMP2(NCOM)
      DIMENSION CENCIT(NCOM),CENMPN(NCOM),CENCCM(NCOM)
      DIMENSION CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  ICENCA(NCOM),ICENCB(NCOM),IDOPCM(NCOM),CCORR(NCOM),
     *  CSCALE(NCOM),IEXTRP(NCOM)
C
      DOUBLE PRECISION POLAR,CPOLAR
      DOUBLE PRECISION MW4S
      LOGICAL HSSEND,DIFFSP,DIFFS,EXTFIL
      LOGICAL DIFFSP1,DIFFS1
      LOGICAL CDFFSP,CDIFFS,CEXTFL
      LOGICAL GOPARR,DSKWRK,MASWRK,CNVR,SECONDD
C
      COMMON /BASISC/ GBASIS,AEX(MAXA,MAXL),ABASIS(MAXA,MAXL),
     *                IAGAUS(MAXA,MAXL),IRDBAS
      COMMON /BASSPH/ QMTTOL,ISPHER
      COMMON /CCENGY/ ENRG,EREF,EMP2,ECCN,ETOT(6),ECORR(6),
     *                DIAGS(3),AMPMX(5,2),IAMPMX(5,4,2),XO1,XO2,
     *                DIFMAX,DIFFENG,ITER,CNVR
      COMMON /CCPAR / AMPTSH,METHCC,NCCTOT,NCCOCC,NCCFZC,NCCFZV,
     *                MXCCIT,MXRLEIT,NWRDCC,ICCCNV,ICCRST,IDSKCC
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /COMPBS/ NGAUSS,NDFUNC,NFFUNC,NPFUNC,DIFFSP,DIFFS,
     *                POLAR
      COMMON /COMPE2/ E2PARR,E2OPOS
      COMMON /DERPAR/ IDER,JDER,KDER,LDER,NDER
      COMMON /ENRGYS/ ENUCR,EELCT,ETOTL,SZ,SZZ,ECORE,ESCF,EERD,E1,E2,
     *                VEN,VEE,EPOT,EKIN,ESTATE(MXRT),STATN,EDFT(2),EDISP
      COMMON /ENRGMP/ EMP2L,EMP3,EMP4,EMP2A
      COMMON /EOMTRP/ DI1(10),DI2(10),DI3(10),DI4(10),DI5(10),DI6(10),
     *                ENESD(10),XNUM(10),XDENOM(10),R0(10),
     *                XM1(10),XM2(10),XM3(10),XD1(10),XD2(10),XD3(10),
     *                YD1(10),YD2(10),YD3(10),YD4(10),XNC3(10),DC3(10),
     *                XGRCORR,XGRCORR1,XGRCORR2,XGRCORR3,XGRCORR4,
     *                XGRCORR5,XGRCORR6,XGRCORR7,CI3GCORR
      COMMON /HSSCTL/ IHESSM,IHREP,HSSEND
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /PCMOPT/ RABI,RASC,REFPOL,THRSLS,DENSLS,WB,WA,ETA2,GD,EVAC,
     *                RHOW,PM,AREATL,AREAKP,BONDRY,OMEGA,RET,FRO,EPSINF,
     *                EPS,DR,RSOLV,VMOL,TCE,STEN,DSTEN,CMF,TABS,IDIRCT,
     *                IPCDER,IDP,ICOMP,IFIELD,ICAV,IDISP,IPRINT,IRETCAV,
     *                ICENT,IFAST,NEVAL,IEFPOL,KEEPSM,IMGABI,IMGASC,NADD
      COMMON /PCMPAR/ IPCM,NFT26,NFT27,IRPPCM,IEF,IP_F,NFMOPCM
      COMMON /RELWFN/ RMETHOD,QRQMT,CLIG,CLIG2,QRTOL,IQRORD,MODQR,NESOC,
     *                NRATOM,NUMU,NQMTR,NQRDAF,MORDA,NDARELB
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /SCFOPT/ CONVHF,MAXIT,MCONV,NPUNCH,NPREO(4)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA RNONE  /8HNONE    /
      DATA CRCCL  /8HCR-CCL  /
      DATA CCSDT  /8HCCSD(T) /
      DATA ROHF   /8HROHF    /
      DATA RHF    /8HRHF     /
C     DATA HAS MEMBERS OF GROUP COMP
      DATA COMP /8HCOMP    /
      DATA QNAM /8HRMETHD  ,8HIOP     ,8HIHS     ,8HCDFTTP  ,
     *           8HICMPLV  ,8HCCCTYP  ,8HCCITYP  ,8HICISPH  ,
     *           8HCGBASS  ,8HICNGSS  ,8HICNDFC  ,8HICNFFC  ,
     *           8HICNPFC  ,8HCDFFSP  ,8HCDIFFS  ,8HCPOLAR  ,
     *           8HCEXTFL  ,8HICNACR  ,8HICNBCR  ,8HICNCOR  ,
     *           8HICNDER  ,8HIENE    ,8HICALC   ,8HICENCA  ,
     *           8HICENCB  ,8HCZPSCL  ,8HCENHLC  ,8HIENREF  ,
     *           8HIDOPCM  ,8HCETOT   ,8HCXETH   ,8HCXHTH   ,
     *           8HCXGTH   ,8HCCXZPE  ,8HIDOFMO  ,8HCNUTRL  ,
     *           8HCHEATS  ,8HCSCALE  ,8HCXTRAP  ,8HCGASES  ,
     *           8HIEXTRP  ,8HCESCF   ,8HCECOR   ,8HCCSCF   /
      DATA KQNAM/5,1,1,205,        201,205,205,201,  205,201,201,201,
     *           201,200,200,203,  200,201,201,201,  201,1,1,201,
     *           201,3,3,1,        201,203,3,3,      3,3,1,3,
     *           5,205,5,3,        201,203,203,205/
      DATA G3MP2,CG3MP2/8HG3MP2   ,8HCG3MP2  /
      DATA MW4S,CMW4S  /8HMW4S    ,8HCMW4S   /
      DATA G3MS,CG3MS  /8HG3MS    ,8HCG3MS   /
      DATA G3RAD,CG3RAD/8HG3RAD   ,8HCG3RAD  /
      DATA CCCAS4,CCCCAS4  /8HCCCAS4  ,8HCCCCAS4 /
      DATA CCCACCL,CCCCACCL/8HCCCACCL ,8HCCCCACCL/
      DATA CCCAS,CCCCAS    /8HCCCAS   ,8HCCCCAS  /
      DATA S4/8HS4      /
C
C     --- READ IN NAMEIO GROUP CALLED $COMP ---
C
C----------------------------------------------------------------------------*
C     ROUTINE TO SETUP PARAMETERS FOR GENERALIZED COMPOSITE METHOD
C     METHODS MAY BE SAVED AS A 'RMETHD'
C     RMETHD = DIFFERENT HARDWIRED COMPOSITE METHODS
C     CHECK RMETHD=RNONE THEN USE THAT SETUP ELSE PULL PARAMETERS FROM NAMEIO
C     SETUP OF COMPOSITE METHOD IN $COMP GROUP
C----------------------------------------------------------------------------*
C
C     --- PRINT OUT COMPOSITE METHODS BANNER ---
C
      WRITE(IW,10)
      WRITE(IW,40)
      CALL FLSHBF(IW)
C
C     --- INITIALIZING PARAMETERS ---
C
      NCLR = 0
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP ,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
      NCLR = NCLR + 1
C
C--------------------------------------------------------------------------*
C--------------------------------------------------------------------------*
C     INPUT PARAMETERS FOR SETTING UP A COMPOSITE METHOD                   *
C     GROUP $COMP                                                          *
C     GENERAL SETUP: OPTIMIZATIONS,HESSIAN,SINGLE POINT ENERGIES           *
C     IOP = NUMBER OF OPTIMIZATIONS                                        *
C     IHS = INDEX OF OPTIMIZATION USED FOR HESSIAN CALCULATION             *
C     IENE = NUMBER OF SINGLE POINT ENERGY CALCULATIONS                    *
C     TOTAL # ENERGY CALCULATIONS = IOP + IENE                             *
C     RMETHD = HARDWIRED COMPOSITE METHOD                                  *
C     VARIOUS PARAMETERS FOR COMPOSITE METHOD:                             *
C     CZPSCL = ZERO POINT ENERGY SCALING FACTOR (DOUBLE PRECISION)         *
C     CENHLC = HIGHER LEVEL CORRECTION ENERGY (DOUBLE PRECISION)           *
C     IENREF = REFERENCE ENERGY FOR COMPOSITE ENERGY CALCULATION           *
C     CXETH  = ADDED THERMAL ENERGY CORRECTION                             *
C     CXHTH  = ADDED THERMAL ENTHALPY CORRECTION                           *
C     CXGTH  = ADDED THERMAL FREE CORRECTION                               *
C     CCXZPE = ADDED ZERO POINT ENERGY                                     *
C     CNUTRL = NEUTRAL ENERGY FOR HEATS OF FORMATION OF IONS AND RADICALS  *
C     CHEATS = ACCESSES ENERGIES FOR SPECIFIC COMPOSITE METHOD             *
C     CSCALE = PERFORMS SCALAR RELATIVISTIC CORRELATIONS                   *
C     CXTRAP = CBS EXTRAPOLATION TECHNIQUE                                 *
C     CGASES = GAS PHASE ENERGY VALUE FOR HEATS OF SOLVATION CALCULATION   *
C--------------------------------------------------------------------------*
C     ARRAYS FOR VARIOUS PARAMETERS USED FOR EACH COMPOSITE CALCULATION:   *
C     (DEFAULT VALUES IN ROUTINE 'CLRALL')                                 *
C     CDFTTP() = DFT FUNCTIONAL                                            *
C     ICMPLV() = MOLLER PLESSET ORDER NUMBER                               *
C     CCCTYP() = COUPLED CLUSTER TYPE                                      *
C     CCITYP() = CONFIGURATION INTERACTION TYPE                            *
C     CCSCF()  = SCF TYPE                                                  *
C **************************************************************************
C     BASIS SET OPTION ARRAYS:                                             *
C     ICISPH() = ISPHER SPHERICAL HARMONICS                                *
C     CGBASS() = GBASIS INTERNAL BASIS SET                                 *
C     ICNGSS() = NGAUSS VALUES                                             *
C     ICNDFC() = NDFUNC (D POLARIZATION FUNCTION) VALUES                   *
C     ICNFFC() = NFFUNC (F POLARIZATION FUNCTION) VALUES                   *
C     ICNPFC() = NPFUNC (P POLARIZATION FUNCTION) VALUES                   *
C     CDFFSP() = DIFFSP (SP DIFFUSE FUNCTION) OPTION                       *
C     CDIFFS() = DIFFS  (S DIFFUSE FUNCTION) OPTION                        *
C **************************************************************************
C     CETOT()  = ADDED ENERGY VALUES                                       *
C     ICNACR() = NACORE (# ALPHA CORE ELECTRONS)                           *
C     ICNBCR() = NBCORE (# BETA CORE ELECTRONS)                            *
C     ICNCOR() = NCORE(NCCFZC)(# CORE ELECTRONS)                           *
C     IDOPCM() = PCM CONTROL (0 = OFF, 1 = ON)                             *
C     ICNDER() = MP2 GRADIENT CONTROL, ON FOR OPTIMIZATIONS (0=OFF, 1=ON)  *
C     IEXTRP() = SELECTS CETOT() ENERGIES FOR CBS EXTRAPOLATION            *
C     CESCF()  = OBTAINS REFERENCE ENERGY FOR CBS EXTRAPOLATION            *
C     CECOR()  = OBTAINS CORRELATION ENERGY FOR CBS EXTRAPOLATION          *
C--------------------------------------------------------------------------*
C     ENERGY CORRECTION CALCULATION (ICENCA - ICENCB):                     *
C     ICENCA() = HIGHER LEVEL CALCULATION                                  *
C     ICENCB() = LOWER LEVEL CALCULATION                                   *
C--------------------------------------------------------------------------*
C--------------------------------------------------------------------------*
C
      JRET = 0
      NERR = 0
      CALL NAMEIO(IR,JRET,COMP,NNAM,QNAM,KQNAM,RMETHD,IOP,IHS,CDFTTP,
     *       ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     *       ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *       ICNBCR,ICNCOR,ICNDER,IENE,ICALC,ICENCA,ICENCB,CZPSCL,
     *       CENHLC,IENREF,IDOPCM,CETOT,CXETH,CXHTH,CXGTH,CCXZPE,
     *       IDOFMO,CNUTRL,CHEATS,CSCALE,CXTRAP,CGASES,IEXTRP,
     *       CESCF,CECOR,CCSCF, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0,
     *       0,0,0,0,0)
C
      IF(JRET .EQ. 1) THEN
         IF(MASWRK) WRITE(IW,*) '$COMP IS NOT PRESENT'
         WRITE(IW,50)
         CALL FLSHBF(IW)
         NERR = NERR+1
      END IF
      IF(JRET .GE. 2) THEN
         IF(MASWRK) WRITE(IW,*) 'TROUBLE INTERPRETING $COMP'
         WRITE(IW,100)
         CALL FLSHBF(IW)
         NERR = NERR+1
      END IF
      IF(NERR.GT.0) CALL ABRT
C
C     --- NOW WE USE THESE PARAMETERS ---
C
C     --- CHECK FOR RMETHD FIRST ---
C     --- SETUP HARDWIRED PARAMETERS FOR $COMP ---
C     --- NMET=1 SETS COMP VARIABLES ---
C     --- NMET=2 EXECUTES ENERGY CALCULATIONS ---
C
      NMET = 1
      IF(RMETHD.NE.RNONE) CALL COMPMD(RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,IDOPCM,NMET,CETOT,CCMP2,
     * CNUTRL,CSCALE,CXTRAP,IEXTRP,CGASES,CESCF,CECOR,
     * CCSCF,CZPSCL,CXETH,CXHTH,CXGTH,CCXZPE,CENHLC)
C
C     --- CALL COMP AGAIN TO ALLOW REWRITES OF RMETHD ---
C     --- ONLY ATTEMPT IF THE CALCULATIONS IN RMETHD ARE UNDERSTOOD ---
C     --- IF MAJOR CHANGES NEEDED THEN USE GENERALIZED FORMAT ---
C
      CALL NAMEIO(IR,JRET,COMP,NNAM,QNAM,KQNAM,RMETHD,IOP,IHS,CDFTTP,
     *       ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     *       ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *       ICNBCR,ICNCOR,ICNDER,IENE,ICALC,ICENCA,ICENCB,CZPSCL,
     *       CENHLC,IENREF,IDOPCM,CETOT,CXETH,CXHTH,CXGTH,CCXZPE,
     *       IDOFMO,CNUTRL,CHEATS,CSCALE,CXTRAP,CGASES,IEXTRP,
     *       CESCF,CECOR,CCSCF, 0,0,0,0,0,  0,0,0,0,0,  0,0,0,0,0,
     *       0,0,0,0,0)
C
C     --- DO LOOPS FOR SETTING UP RUNS ---
C
      I=0
      J=0
      K=0
      L=0
      M=0
      N=0
      IADDON = 1
      ICXBAS = 3
      IEXTRA = 0
      IPCM0  = 0
      IOPEND = IOP + 1
      IENEND = IOP + IENE
      NCLR   = 1
C
C======== OPTIMIZATONS AND HESSIAN CALCULATIONS =========
C
      DO I=1,IOP
       IF(CETOT(I).NE.ZERO) GOTO 5
       CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
       DFTYPE = CDFTTP(I)
       MPLEVL = ICMPLV(I)
       CCTYP  = CCCTYP(I)
       CITYP  = CCITYP(I)
       ISPHER = ICISPH(I)
       GBASIS = CGBASS(I)
       NGAUSS = ICNGSS(I)
       NDFUNC = ICNDFC(I)
       NFFUNC = ICNFFC(I)
       NPFUNC = ICNPFC(I)
       DIFFSP = CDFFSP(I)
       DIFFS  = CDIFFS(I)
       POLAR  = CPOLAR(I)
       EXTFIL = CEXTFL(I)
       NACORE = ICNACR(I)
       NBCORE = ICNBCR(I)
       NCCFZC = ICNCOR(I)
       NDER   = ICNDER(I)
       ICXPCM = IDOPCM(I)
       RMETHOD= CSCALE(I)
       SCFTYP =  CCSCF(I)
C
        NPUNCH = 2
        IF(MPLEVL.GT.0)    CONVHF=1.0D-05
        IF(CCTYP.NE.RNONE) CONVHF=1.0D-06
        IF(CITYP.NE.RNONE) CONVHF=1.0D-06
C
       IF(EXTFIL) THEN
        WRITE(IW,*)'NO EXTFIL FUNCTIONALITY HERE YET'
       END IF
C
       IF(I.EQ.IHS) HSSEND = .TRUE.
C
C      --- CHECKING FOR NEED TO RESETB GAMESS FOR BASIS SET CHANGE ---
C
        IF(I.EQ.1) THEN
         J=I
        ELSE
         J=I-1
        END IF
        GBASIS1  = CGBASS(J)
        NGAUSS1  = ICNGSS(J)
        NDFUNC1  = ICNDFC(J)
        NFFUNC1  = ICNFFC(J)
        NPFUNC1  = ICNPFC(J)
        DIFFSP1  = CDFFSP(J)
        DIFFS1   = CDIFFS(J)
        POLAR1   = CPOLAR(J)
        RMETHOD1 = CSCALE(J)
        SCFTYP1  = CCSCF(J)
      IF(GBASIS.NE.GBASIS1.OR.NGAUSS.NE.NGAUSS1.OR.NDFUNC.NE.NDFUNC1
     *.OR.NFFUNC.NE.NFFUNC1.OR.NPFUNC.NE.NPFUNC1.OR.DIFFSP.AND.DIFFSP1
     *.OR.DIFFS .AND.DIFFS1 .OR. POLAR.NE.POLAR1
     *.OR. RMETHOD.NE.RMETHOD1 .OR. I.EQ.1) THEN
        CALL BASISS
        CALL RESETB
       ELSE
c       IF(I.NE.1) CALL BASISS
        CALL BASISS
      END IF
C     --- SETUP ANY SCFTYP CHANGE ---
      IF(SCFTYP1.NE.SCFTYP .OR. I.EQ.1) CALL CSCFTYP
C     --- SETUP SCALAR RELATIVISTIC CORRELATION ---
      IF(RMETHOD.NE.RNONE) CALL CSCALAR
C     --- SETUP PCM CALCULATION ---
       IPCM0=IPCM0+ICXPCM
       IF(ICXPCM.EQ.1) THEN
        MCONV = 65
        CALL PCMINP
        CALL INPPCM(NDER,MXATM,NAT)
       END IF
       CALL DTTSET
       CALL CCTSET
       CALL CITSET
       CALL MPLSET
      IF(NAT.EQ.1) THEN
       CALL ENERGX
       CALL FLSHBF(6)
      ELSE
       CALL SIGX(.FALSE.)
       CALL FLSHBF(6)
      END IF
C
      IF(RUNTYP.EQ.COMP .AND. (MASWRK .OR. DSKWRK) .AND.
     *CCTYP.NE.CRCCL) THEN
      CALL CLOSCC
      END IF
      IF(ICXPCM.EQ.1) THEN
       IF(IFIELD.NE.0) CALL EFIELDM
       IF(ICAV.EQ.1)   CALL CAVITM
       IF(IDISP.EQ.1)  CALL DISRPM
       CALL SOLPRT
      END IF
C
      CALL TIMIT(1)
      CALL TIMIT(0)
C
C     --- COMPILING ENERGIES ---
C
C     --- ENERGY DEFAULTED TO HF TOTAL ENERGY ---
      CALL FLSHBF(6)
C                         CETOT(I) =ETOTL
                          CETOT(I) =ESCF
       IF(MPLEVL.EQ.2)    CENMPN(I)=EMP2L
       IF(MPLEVL.EQ.3)    CENMPN(I)=EMP3
       IF(MPLEVL.EQ.4)    CENMPN(I)=EMP4
                          CENCCS(I)=ESCF+ENRG
       IF(CCTYP.EQ.CRCCL .AND.
     *     SCFTYP.EQ.RHF) CENCCS(I)=ESCF+ENRG+XNUM(2)
       IF(CCTYP.EQ.CRCCL .AND.
     *    SCFTYP.EQ.ROHF) CENCCS(I)=ESCF+ENRG-XM1(2)+XNUM(2)
                          CENCIT(I)=ESCF+ENRG
                          CENDFT(I)=ESCF+ENRG
                          CENCCM(I)=EREF+EMP2
       IF(MPLEVL.GT.0)    THEN
                          CETOT(I) =CENMPN(I)
             IF(SCFTYP.EQ.RHF) THEN
                          IEXTRA   =IENEND+IADDON
                     CETOT(IEXTRA) =E2OPOS
                          IEXTRA   =IEXTRA+1
                     CETOT(IEXTRA) =E2PARR
                            IADDON =IADDON+2
             ENDIF
       ENDIF
       IF(CCTYP.NE.RNONE) THEN
                          IEXTRA   =IENEND+IADDON
                          CETOT(I) =CENCCS(I)
                          CCMP2(I) =CENCCM(I)
                     CETOT(IEXTRA) =CCMP2(I)
                            IADDON =IADDON+1
       END IF
       IF(CITYP.NE.RNONE) CETOT(I) =CENCIT(I)
       IF(DFTYPE.NE.RNONE)CETOT(I) =CENDFT(I)
C
C     --- FOR CBS EXTRAPOLATIONS HF AND CORRELATION ENERGIES ARE ALSO SAVED ---
C
       IF(MPLEVL.GT.0) THEN
        CESCF(I)      =ESCF
        CECOR(I)      =EMP2L-ESCF
       ELSE IF(CCTYP.NE.RNONE) THEN
        CESCF(I)      =ESCF
        IF(CCTYP.EQ.CRCCL) THEN
         CECOR(I)     =ENRG-XM1(2)+XNUM(2)
        ELSE
         CECOR(I)     =ENRG
        END IF
        CESCF(IEXTRA) =ESCF
        CECOR(IEXTRA) =EMP2
       ELSE IF(CITYP.NE.RNONE) THEN
        CESCF(I)      =ESCF
        CECOR(I)      =ENRG
       ELSE IF(DFTYPE.NE.RNONE) THEN
        CESCF(I)      =ESCF
        CECOR(I)      =ENRG
       ELSE
        CESCF(I)      =ESCF
       END IF
C
    5 CONTINUE
C
       II=0
       IF(I.LT.10) THEN

       IF(DFTYPE.NE.RNONE) THEN
         WRITE(6,205)I,CESCF(I)
       ELSE
         WRITE(6,210)I,CESCF(I),I,CECOR(I)
       END IF
       IF(CCTYP.NE.RNONE)
     * WRITE(6,220)IEXTRA,CESCF(IEXTRA),IEXTRA,CECOR(IEXTRA),
     * IEXTRA,CETOT(IEXTRA)
       WRITE(6,225) I,CETOT(I)
       DO II=1,I
        WRITE(6,225) II,CETOT(II)
       END DO

       ELSE

       IF(DFTYPE.NE.RNONE) THEN
         WRITE(6,206)I,CESCF(I)
       ELSE
         WRITE(6,211)I,CESCF(I),I,CECOR(I)
       END IF
       IF(CCTYP.NE.RNONE)
     * WRITE(6,221)IEXTRA,CESCF(IEXTRA),IEXTRA,CECOR(IEXTRA),
     * IEXTRA,CETOT(IEXTRA)
       WRITE(6,40)
       WRITE(6,45)
       WRITE(6,226) I,CETOT(I)
       DO II=1,I
        WRITE(6,226) II,CETOT(II)
       END DO
       WRITE(6,40)

       END IF

       IF(I.EQ.IHS) THEN
          ETH = ZERO
          HTH = ZERO
          GTH = ZERO
          ETH = CXTHERM(9)/TOKCAL
          HTH = CXTHERM(10)/TOKCAL
          GTH = CXTHERM(11)/TOKCAL
          IF(CXETH.NE.ZERO) ETH = CXETH
          IF(CXHTH.NE.ZERO) HTH = CXHTH
          IF(CXGTH.NE.ZERO) GTH = CXGTH
CSN       IF(CCXZPE.NE.ZERO) THEN
CSN       ELSE
CSN          CCXZPE = CXZPE
CSN       END IF
CSN       WRITE(6,187) ETH,HTH,GTH,CCXZPE,CZPSCL
          WRITE(6,187) ETH,HTH,GTH,CXZPE,CZPSCL
       END IF
       WRITE(6,180) I

       CALL TIMIT(1)
       CALL TIMIT(0)
       CALL FLSHBF(IW)
      END DO
      ICXBAS=3
C
C======== SINGLE POINT ENERGY CALCUALATIONS =========
C
      DO K=IOPEND,IENEND
      IF(CETOT(K).NE.ZERO) GOTO 11
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
       DFTYPE = CDFTTP(K)
       MPLEVL = ICMPLV(K)
       CCTYP  = CCCTYP(K)
       CITYP  = CCITYP(K)
       ISPHER = ICISPH(K)
       GBASIS = CGBASS(K)
       NGAUSS = ICNGSS(K)
       NDFUNC = ICNDFC(K)
       NFFUNC = ICNFFC(K)
       NPFUNC = ICNPFC(K)
       DIFFSP = CDFFSP(K)
       DIFFS  = CDIFFS(K)
       POLAR  = CPOLAR(K)
       EXTFIL = CEXTFL(K)
       NACORE = ICNACR(K)
       NBCORE = ICNBCR(K)
       NCCFZC = ICNCOR(K)
       NDER   = ICNDER(K)
       ICXPCM = IDOPCM(K)
       RMETHOD= CSCALE(K)
       SCFTYP =  CCSCF(K)

       NPUNCH = 1
       IF(SCFTYP.EQ.ROHF.AND.CCTYP.EQ.RNONE) NPUNCH = 2
       IF(MPLEVL.GT.0)    NPUNCH=2
       IF(MPLEVL.GT.0)    CONVHF=1.0D-06
       IF(CCTYP.NE.RNONE) CONVHF=1.0D-06
       IF(CITYP.NE.RNONE) CONVHF=1.0D-06

      IF(EXTFIL) THEN
       WRITE(IW,*)'NO EXTFIL FUNCTIONALITY HERE YET'
      END IF
C
       L=K-1
       GBASIS1  = CGBASS(L)
       NGAUSS1  = ICNGSS(L)
       NDFUNC1  = ICNDFC(L)
       NFFUNC1  = ICNFFC(L)
       NPFUNC1  = ICNPFC(L)
       DIFFSP1  = CDFFSP(L)
       DIFFS1   = CDIFFS(L)
       POLAR1   = CPOLAR(L)
       RMETHOD1 = CSCALE(L)
       SCFTYP1  = CCSCF(L)
      IF(GBASIS.NE.GBASIS1.OR.NGAUSS.NE.NGAUSS1.OR.NDFUNC.NE.NDFUNC1
     * .OR.NFFUNC.NE.NFFUNC1.OR.NPFUNC.NE.NPFUNC1.OR.DIFFSP.AND.DIFFSP1
     * .OR.DIFFS .AND.DIFFS1 .OR.POLAR .NE.POLAR1
     * .OR. RMETHOD.NE.RMETHOD1) THEN
      CALL FLSHBF(6)
       CALL BASISS
       CALL RESETB
      ELSE
       CALL BASISS
      END IF
      CALL FLSHBF(6)
C     --- SETUP ANY SCFTYP CHANGE ---
      IF(SCFTYP1.NE.SCFTYP) CALL CSCFTYP
C    --- SETUP SCALAR RELATIVISTIC CORRELATION ---
      IF(RMETHOD.NE.RNONE) CALL CSCALAR
C    --- SETUP PCM CALCULATION ---
      IPCM0=IPCM0+ICXPCM
      IF(ICXPCM.EQ.1) THEN
       MCONV = 65
       CALL PCMINP
       CALL INPPCM(NDER,MXATM,NAT)
      END IF
      CALL DTTSET
      CALL CCTSET
      CALL CITSET
      CALL MPLSET
      CALL ENERGX
      IF(RUNTYP.EQ.COMP .AND. (MASWRK .OR. DSKWRK) .AND.
     * CCTYP.NE.CRCCL) THEN
       CALL CLOSCC
      END IF
       IF(ICXPCM.EQ.1) THEN
       IF(IFIELD.NE.0) CALL EFIELDM
       IF(ICAV.EQ.1)   CALL CAVITM
       IF(IDISP.EQ.1)  CALL DISRPM
       CALL SOLPRT
      END IF
C
      CALL TIMIT(1)
      CALL TIMIT(0)
      CALL FLSHBF(6)
C
C    --- COMPILING SINGLE POINT ENERGIES ---
C
                          CETOT(K)=ESCF
      IF(MPLEVL.EQ.2)    CENMPN(K)=EMP2L
      IF(MPLEVL.EQ.3)    CENMPN(K)=EMP3
      IF(MPLEVL.EQ.4)    CENMPN(K)=EMP4
                         CENCCS(K)=ESCF+ENRG
      IF(CCTYP.EQ.CRCCL .AND.
     *   SCFTYP.EQ.RHF)  CENCCS(K)=ESCF+ENRG+XNUM(2)
      IF(CCTYP.EQ.CRCCL .AND.
     *  SCFTYP.EQ.ROHF)  CENCCS(K)=ESCF+ENRG-XM1(2)+XNUM(2)
CSN    write(6,*)'escf is ',escf
CSN    write(6,*)'enrg is ',enrg
                         CENCIT(K)=ESCF+ENRG
                         CENDFT(K)=ESCF+ENRG
                         CENCCM(K)=EREF+EMP2
      IF(MPLEVL.GT.0)    THEN
                         CETOT(K) =CENMPN(K)
       IF(SCFTYP.EQ.RHF) THEN
                         IEXTRA   =IENEND+IADDON
                    CETOT(IEXTRA) =E2OPOS
                         IEXTRA   =IEXTRA+1
                    CETOT(IEXTRA) =E2PARR
                           IADDON =IADDON+2
       ENDIF
      ENDIF
      IF(CCTYP.NE.RNONE) THEN
                         IEXTRA   =IENEND+IADDON
                         CETOT(K) =CENCCS(K)
                         CCMP2(K) =CENCCM(K)
                    CETOT(IEXTRA) =CCMP2(K)
CSN                      IEXTRA   =IENEND+1
CSN                 CETOT(IEXTRA) =
CSN                      IEXTRA   =IENEND+1
CSN                 CETOT(IEXTRA) =
CSN                        IADDON =IADDON+3
                           IADDON =IADDON+1
      END IF
      IF(CITYP.NE.RNONE) CETOT(K) =CENCIT(K)
      IF(DFTYPE.NE.RNONE)CETOT(K) =CENDFT(K)
C
C    --- FOR CBS EXTRAPOLATIONS HF AND CORRELATION ENERGIES ARE ALSO SAVED ---
C
      IF(MPLEVL.GT.0) THEN
       CESCF(K)      =ESCF
       CECOR(K)      =EMP2L - ESCF
      ELSE IF(CCTYP.NE.RNONE) THEN
       CESCF(K)      =ESCF
       IF(CCTYP.EQ.CRCCL) THEN
        CECOR(K)     =ENRG-XM1(2)+XNUM(2)
CSN     nnn=0
CSN     do nnn=1,10
CSN      write(6,*)'xnum(',nnn,') is ',xnum(nnn)
CSN      write(6,*)'xm1(',nnn,') is ',xm1(nnn)
CSN      write(6,*)'xm2(',nnn,') is ',xm2(nnn)
CSN      write(6,*)'xm3(',nnn,') is ',xm3(nnn)
CSN     end do
       ELSE IF(CCTYP.EQ.CCSDT) THEN
        CECOR(K)     =ENRG+XNUM(4)
CSN     write(6,*)'enrg is ',enrg
CSN     nnn=0
CSN     do nnn=1,10
CSN      write(6,*)'xnum(',nnn,') is ',xnum(nnn)
CSN      write(6,*)'xm1(',nnn,') is ',xm1(nnn)
CSN      write(6,*)'xm2(',nnn,') is ',xm2(nnn)
CSN      write(6,*)'xm3(',nnn,') is ',xm3(nnn)
CSN     end do
       ELSE
        CECOR(K)     =ENRG
       END IF
       CESCF(IEXTRA) =ESCF
       CECOR(IEXTRA) =EMP2
      ELSE IF(CITYP.NE.RNONE) THEN
       CESCF(K)      =ESCF
       CECOR(K)      =ENRG
      ELSE IF(DFTYPE.NE.RNONE) THEN
       CESCF(K)      =ESCF
       CECOR(K)      =ENRG
      ELSE
       CESCF(K)      =ESCF
      END IF
C
   11 CONTINUE
C
       KK=0
       IF(K.LT.10) THEN

       IF(DFTYPE.NE.RNONE) THEN
         WRITE(6,205)K,CESCF(K)
       ELSE
         WRITE(6,210)K,CESCF(K),K,CECOR(K)
       END IF
       IF(IEXTRA.LT.10) THEN
       IF(CCTYP.NE.RNONE)
     * WRITE(6,220)IEXTRA,CESCF(IEXTRA),IEXTRA,CECOR(IEXTRA),
     * IEXTRA,CETOT(IEXTRA)
       ELSE
       IF(CCTYP.NE.RNONE)
     * WRITE(6,221)IEXTRA,CESCF(IEXTRA),IEXTRA,CECOR(IEXTRA),
     * IEXTRA,CETOT(IEXTRA)
       END IF
       WRITE(6,225) K,CETOT(K)
       WRITE(6,40)
       WRITE(6,45)
       WRITE(6,187) ETH,HTH,GTH,CCXZPE,CZPSCL
       WRITE(6,*)'$DATA'
       WRITE(6,*)
       WRITE(6,*)'C1'
        CALL PRATM(IW,1)
       WRITE(6,*)'$END'
       DO KK=1,K
        IF(K.LT.IENEND) WRITE(6,185) KK,CETOT(KK)
       END DO
       WRITE(6,40)

       ELSE

       IF(DFTYPE.NE.RNONE) THEN
         WRITE(6,206)K,CESCF(K)
       ELSE
         WRITE(6,211)K,CESCF(K),K,CECOR(K)
       END IF
       IF(CCTYP.NE.RNONE)
     * WRITE(6,221)IEXTRA,CESCF(IEXTRA),IEXTRA,CECOR(IEXTRA),
     * IEXTRA,CETOT(IEXTRA)
       WRITE(6,226) K,CETOT(K)
       WRITE(6,40)
       WRITE(6,45)
       WRITE(6,187) ETH,HTH,GTH,CCXZPE,CZPSCL
       WRITE(6,*)'$DATA'
       WRITE(6,*)
       WRITE(6,*)'C1'
        CALL PRATM(IW,1)
       WRITE(6,*)'$END'
       DO KK=1,K
        IF(K.LT.IENEND) WRITE(6,186) KK,CETOT(KK)
       END DO
       WRITE(6,40)

       END IF

       WRITE(6,180) K
C
C     --- ADD METHOD ENERGY CORRECTIONS (CETOT()) HERE ---
C
C     -----------------------------------
       CALL TIMIT(1)
       CALL TIMIT(0)
       CALL FLSHBF(6)
C
      END DO
C
C     PRINT OUT CETOT ENERGIES FOR RESTART RUNS
C     WITH THERMOCHEMICAL AND GEOMETRY DATA
C
      WRITE(6,40)
      WRITE(6,45)
      WRITE(6,40)
      IF(IEXTRA.LE.K) THEN
       NN=K
      ELSE
       NN=IEXTRA
      END IF
      DO N=1,NN
       IF(N.LT.10) THEN
        WRITE(6,185) N,CETOT(N)
       ELSE
        WRITE(6,186) N,CETOT(N)
       END IF
      END DO
C
      IF(RMETHD.NE.RNONE) THEN
      NMET=2
      CALL COMPMD(RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,IDOPCM,NMET,CETOT,CCMP2,
     * CNUTRL,CSCALE,CXTRAP,IEXTRP,CGASES,CESCF,CECOR,
     * CCSCF,CZPSCL,CXETH,CXHTH,CXGTH,CCXZPE,CENHLC)
      ELSE
       WRITE(6,20)
       WRITE(6,30)
       CALL FLSHBF(6)
       DO M=1,IENEND
       IF(ICMPLV(M).GT.0) WRITE(6,60) M,ICMPLV(M),CETOT(M)
       IF(CCCTYP(M).NE.RNONE) WRITE(6,70) M,CCCTYP(M),CETOT(M),CENCCM(M)
       IF(CCITYP(M).NE.RNONE) WRITE(6,80) M,CCITYP(M),CETOT(M)
       IF(CDFTTP(M).NE.RNONE) WRITE(6,90) M,CDFTTP(M),CETOT(M)
       IF(ICMPLV(M).GT.0)      GOTO 1
       IF(CCCTYP(M).NE.RNONE)  GOTO 1
       IF(CCITYP(M).NE.RNONE)  GOTO 1
       IF(CDFTTP(M).NE.RNONE)  GOTO 1
       WRITE(6,55) M,CETOT(M)
    1 CONTINUE
       END DO
      END IF
      WRITE(6,40)
      CALL FLSHBF(6)
C
C   ----- SETTING THERMOCHEMICAL DATA ----
C   ETH   = THERMAL ENERGY
C   HTH   = THERMAL ENTHALPY
C   GTH   = FREE ENERGY
C   CXZPE = ZERO POINT ENERGY
C
      IF(RMETHD.EQ.RNONE) THEN
      ETH = ZERO
      HTH = ZERO
      GTH = ZERO
C
      WRITE(IW,110)
      CALL FLSHBF(6)
      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
         WRITE(IW,120) ETH
         WRITE(IW,130) HTH
         CALL FLSHBF(6)
       ELSE
         ETH = CXTHERM(9)/TOKCAL
         HTH = CXTHERM(10)/TOKCAL
         GTH = CXTHERM(11)/TOKCAL
         IF(CXETH.NE.ZERO) ETH = CXETH
         IF(CXHTH.NE.ZERO) HTH = CXHTH
         IF(CXGTH.NE.ZERO) GTH = CXGTH
         WRITE(IW,120) ETH
         WRITE(IW,130) HTH
         WRITE(IW,140) GTH
         CALL FLSHBF(6)
      END IF
C
        IF(CCXZPE.NE.ZERO) CXZPE = CCXZPE
        WRITE(IW,150) CXZPE
        CALL FLSHBF(6)
C
C ---PERFORMING ENERGY CORRELATIONS---
C
      IF (ICALC.GT.0) THEN
       I=0
       COMPA=ZERO
       COMP0=ZERO
       COMP1=ZERO
       COMP2=ZERO
       COMP3=ZERO
       ZPESCL=ZERO
       NCORRA=NZERO
       NCORRB=NZERO
       DO I=1,ICALC
        NCORRA=ICENCA(I)
        NCORRB=ICENCB(I)
        CCORR(I) = CETOT(NCORRA) - CETOT(NCORRB)
        COMPA = COMPA + CCORR(I)
        WRITE(IW,160)I,CCORR(I)
        CALL FLSHBF(6)
       END DO
      WRITE(6,40)
      CALL FLSHBF(6)
C
C     ---- SETUP VARIOUS CBS EXTRAPOLATION OPTIONS ----
C
      CENREF = ZERO
      CENSCF = ZERO
      CENCOR = ZERO
      CENINF = ZERO
      IF(CXTRAP.EQ.S4) THEN
        CENSCF = (6561.0D+00/4160.0D+00)*CESCF(IEXTRP(1))
     *          -(2401.0D+00/4160.0D+00)*CESCF(IEXTRP(2))
        CENCOR = (6561.0D+00/4160.0D+00)*CECOR(IEXTRP(1))
     *          -(2401.0D+00/4160.0D+00)*CECOR(IEXTRP(2))
        CENINF = CENSCF + CENCOR
        CENREF = CENINF
       ELSE
        CENREF = CETOT(IENREF)
      END IF
C
C  ---COMPOSITE METHOD ENERGY WITHOUT HIGHER LEVEL CORRECTIONS---
C  ---COMP1 = 0K COMPOSITE ENERGY---
C  ---COMP2 = 298K COMPOSITE ENTHALPY---
C  ---COMP3 = FREE ENERGY---
C
C  ---ADD IN SPIN ORBIT COUPLING FOR ATOMS (G3MP2 VALUES) -----
C
      IF(NAT.EQ.1) THEN
       ICHARG = ICH
       IZATM = INT(ZAN(1))
       CALL G3SPNORB(IZATM,ICHARG,SOVAL)
       CENREF = CENREF + SOVAL
      END IF
      COMP0 = CENREF + COMPA +       CENHLC
      COMP1 = CENREF + COMPA + ETH + CENHLC
      COMP2 = CENREF + COMPA + HTH + CENHLC
      COMP3 = CENREF + COMPA + GTH + CENHLC
      IF(NAT.GT.ONE) THEN
       ZPESCL = CZPSCL*CXZPE
       COMP0 = COMP0 +         ZPESCL
       COMP1 = COMP1 - CXZPE + ZPESCL
       COMP2 = COMP2 - CXZPE + ZPESCL
       COMP3 = COMP3 - CXZPE + ZPESCL
      ENDIF
C
      WRITE(6,170)COMP0,COMP1,COMP2,COMP3
      WRITE(6,40)
      CALL FLSHBF(6)
C
      ELSE
       CONTINUE
      ENDIF
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)

      IPCM=IPCM0

      IF(NAT.GT.1) THEN
       IF(CHEATS.NE.RNONE) THEN
        IF(CHEATS.EQ.G3MP2) THEN
         CALL HEATS(CG3MP2,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.MW4S ) THEN
         CALL HEATS(CMW4S,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.G3MS ) THEN
         CALL HEATS(CG3MS,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.G3RAD ) THEN
         CALL HEATS(CG3RAD,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.CCCAS4 ) THEN
         CALL HEATS(CCCCAS4,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.CCCACCL ) THEN
         CALL HEATS(CCCCACCL,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE IF(CHEATS.EQ.CCCAS ) THEN
         CALL HEATS(CCCCAS,CNUTRL,COMP0,COMP2,HFOR0,HFOR298)
         WRITE(6,200) HFOR0,HFOR298
         GO TO 2
        ELSE
C ----- LISTS CORRECT CHEATS NAMES -----
        WRITE(6,190)
        END IF
       END IF
      END IF
    2 CONTINUE

      ELSE

C ----- RESETTING VALUES TO END COMP METHOD -----

      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)

      END IF

C
   10 FORMAT(/,4X,'COMPOSITE METHODS AND CALCULATIONS',
     *       /,4X,'CODE SET FOR FORMULATING ANY COMPOSITE METHOD')
   20 FORMAT(/,4X,41(1H-),
     *       /,4X,'COMPOSITE METHOD ENERGY VALUES (HARTREES)',
     *       /,4X,66(1H-))
   30 FORMAT(  4X,'STEP#',3X,'MPLEVL',3X,'CCTYP+CCMP2',3X,
     *        'CITYP',3X,'DFTYPE'
     *       /,4X,66(1H-))
   40 FORMAT(  4X,66(1H-))
   45 FORMAT(  6X,'RESTART INFO FOR COMPOSITE METHOD CALCULATIONS',
     *       /,6X,'ADDING CETOT(X) WILL STOP CALCULATION X',
     *       /,6X,'IF RERUNNING SAVE THE ORIGINAL DATA AT THIS POINT '
     *        ,'IF NEEDED')
   50 FORMAT(/,4X,'IF YOUR RUNTYP IS COMP THEN $COMP MUST BE PRESENT')
   55 FORMAT(  4X,I2,2X,'[HF:',1X,F14.6,']',2X,38(1H-))
   60 FORMAT(  4X,I2,2X,3(1H-),1X,'[MP',I1,':',1X,F14.6,']',2X,35(1H-))
   70 FORMAT(  4X,I2,2X,12(1H-),1X,'[',A8,':',1X,F14.6,2X,',',F14.6,']'
     *        ,1X,5(1H-))
   80 FORMAT(  4X,I2,2X,20(1H-),1X,'[',A8,':',1X,F14.6,']',1X,1(1H-))
   90 FORMAT(  4X,I2,2X,34(1H-),1X,'[',A8,':',1X,F14.6,']')
  100 FORMAT(/,4X,'DOUBLE CHECK YOUR LIST IS ONE OF THE FOLLOWING:',/,
     * 'METHD,IOP,IHS,CDFTTP,ICMPLV,CCCTYP,CCITYP,ICISPH,',/,
     * 'CGBASS,ICNGSS,ICNDFC,ICNFFC,ICNPFC,CDFFSP,CDIFFS,',/,
     * 'CPOLAR,CEXTFL ,ICNACR  ,ICNBCR  ,ICNCOR ,ICNDER,IENE',1X,/)
  110 FORMAT(  4X,'THERMOCHEMICAL DATA (HARTREES)'
     *           ,'(TEMPERATURE = 298.15K)',
     *       /,4X,66(1H-))
  120 FORMAT(  4X,'THERMAL ENERGY    = ',F10.6)
  130 FORMAT(  4X,'THERMAL ENTHALPY  = ',F10.6)
  140 FORMAT(  4X,'FREE ENERGY       = ',F10.6)
  150 FORMAT(  4X,'ZERO POINT ENERGY = ',F10.6,
     *       /,4X,66(1H-))
  160 FORMAT(  4X,'ENERGY CORRECTION ',I2,'    = ',F14.8)
  170 FORMAT(  4X,'COMPOSITE ENERGY @ 0K   = ',F14.6,
     *       /,4X,'COMPOSITE ENERGY @ 298K = ',F14.6,
     *       /,4X,'COMPOSITE ENTHALPY      = ',F14.6,
     *       /,4X,'COMPOSITE FREE ENERGY   = ',F14.6)
  180 FORMAT(/,4X,'==COMPOSITE ENERGY CALCULATION,',I2,' ,DONE==',/)
  185 FORMAT(  2X,'CETOT(',I1,')=',F16.8)
  186 FORMAT(  2X,'CETOT(',I2,')=',F16.8)
  187 FORMAT(  2X,'CXETH =',F16.8,
     *       /,2X,'CXHTH =',F16.8,
     *       /,2X,'CXGTH =',F16.8,
     *       /,2X,'CCXZPE =',F16.8,
     *       /,2X,'CZPSCL =',F16.8)
  190 FORMAT(/,4X,'CHECK CHEATS VALUES: G3MP2,MW4S,G3MS,G3RAD',
     *            'CCCAS4,CCCACCL,CCCAS',/)
  200 FORMAT(/,4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
  205 FORMAT(/,4X,'DFT ENERGY,         CESCF(',I1,') = ',F14.8)
  206 FORMAT(/,4X,'DFT ENERGY,         CESCF(',I2,') = ',F14.8)
  210 FORMAT(/,4X,'REFERENCE ENERGY,   CESCF(',I1,') = ',F14.8,
     *       /,4X,'CORRELATION ENERGY, CECOR(',I1,') = ',F14.8)
  211 FORMAT(/,4X,'REFERENCE ENERGY,   CESCF(',I2,') = ',F14.8,
     *       /,4X,'CORRELATION ENERGY, CECOR(',I2,') = ',F14.8)
  220 FORMAT(  4X,'REFERENCE ENERGY,   CESCF(',I1,') = ',F14.8,
     *       /,4X,'CORRELATION ENERGY, CECOR(',I1,') = ',F14.8,
     *       /,4X,'TOTAL ENERGY,       CETOT(',I1,') = ',F14.8)
  221 FORMAT(  4X,'REFERENCE ENERGY,   CESCF(',I2,') = ',F14.8,
     *       /,4X,'CORRELATION ENERGY, CECOR(',I2,') = ',F14.8,
     *       /,4X,'TOTAL ENERGY,       CETOT(',I2,') = ',F14.8)
  225 FORMAT(  4X,'TOTAL ENERGY,       CETOT(',I1,') = ',F14.8)
  226 FORMAT(  4X,'TOTAL ENERGY,       CETOT(',I2,') = ',F14.8)

      END
C================================================================
C
C*MODULE COMP  *DECK COMPMD
      SUBROUTINE COMPMD(RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,IDOPCM,NMET,CETOT,CCMP2,
     * CNUTRL,CSCALE,CXTRAP,IEXTRP,CGASES,CESCF,CECOR,
     * CCSCF,CZPSCL,CXETH,CXHTH,CXGTH,CCXZPE,CENHLC)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      PARAMETER(NCOM = 20)
C
      DOUBLE PRECISION MW4S
      LOGICAL CDFFSP,CDIFFS,CEXTFL
C
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CSCALE(NCOM),
     *  CCSCF(NCOM),IEXTRP(NCOM)
C
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
C
      DATA RNONE/8HNONE    /
      DATA G1,G2,G3,G2MP2,G3MP2,G3MP2CCSD,G3MP2B3LY,W1,W2,W3,W4,MW4S,
     *     G3MS,CCCAS4,CCCACCL,CCCAS,G4MP2,G4MP26X
     *     /8HG1      ,8HG2      ,8HG3      ,8HG2MP2   ,8HG3MP2   ,
     *      8HG32CCSD ,8HG32B3LYP,8HW1      ,8HW2      ,8HW3      ,
     *      8HW4      ,8HMW4S    ,8HG3MS    ,8HCCCA-S4 ,8HCCCA-CCL,
     *      8HCCCA-S  ,8HG4MP2   ,8HG4MP2-6X/
C
C         these three aren't used below, we touch then for FTNCHEK.
C         note this routine isn't called unless RMETHD isn't RNONE!
C
      IF(RMETHD.EQ.RNONE) THEN
         CENHLC = 0.0D+00
         CGASES = 0.0D+00
         IEXTRP(1) = 0
      END IF
C
C     --- FIRST PART TO GET PARAMETERS FOR RMETHD - NMET=1 ---
C     --- SECOND PART TO GET RESULTS FOR RMETHD - NMET=2 ---
C
      IF(RMETHD.EQ.G1) THEN
C       CALL G1X(NMET)
      ENDIF
      IF (RMETHD.EQ.G2) THEN
C       CALL G2X(NMET)
      END IF
      IF (RMETHD.EQ.G3) THEN
C       CALL G3X(NMET)
      END IF
      IF (RMETHD.EQ.G2MP2) THEN
C       CALL G2MP2X(NMET)
      END IF
      IF (RMETHD.EQ.G3MP2) THEN
C        CALL G3MP2XX(NMET)
      END IF
      IF (RMETHD.EQ.G4MP2) THEN
         CALL G4MX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CESCF,CCSCF,CCMP2,CNUTRL)
      END IF
      IF (RMETHD.EQ.G4MP26X) THEN
         CALL G4M6XX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CESCF,CCSCF,CCMP2,CNUTRL)
      END IF
      IF (RMETHD.EQ.G3MP2CCSD) THEN
        CALL G3MCCDX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,CCMP2,
     *          CNUTRL,CXETH,CXHTH,CXGTH,CCXZPE)
      END IF
      IF (RMETHD.EQ.G3MP2B3LY) THEN
C       CALL G3MP2BX(NMET)
      END IF
      IF (RMETHD.EQ.W1) THEN
C       CALL W1X(NMET)
      END IF
      IF (RMETHD.EQ.W2) THEN
C       CALL W2X(NMET)
      END IF
      IF (RMETHD.EQ.W3) THEN
C       CALL W3X(NMET)
      END IF
      IF (RMETHD.EQ.W4) THEN
C       CALL W4X(NMET)
      END IF
      IF (RMETHD.EQ.MW4S) THEN
        CALL MW4SX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL)
      END IF
      IF (RMETHD.EQ.G3MS) THEN
        CALL G3MSX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL)
      END IF
      IF (RMETHD.EQ.CCCAS4) THEN
        CALL CCCAS4X(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR,CCSCF,CZPSCL,
     *          CXETH,CXHTH,CXGTH,CCXZPE,
     *          CXTRAP)
      END IF
      IF (RMETHD.EQ.CCCACCL) THEN
        CALL CCCACCLX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR,CCSCF,CZPSCL,
     *          CXETH,CXHTH,CXGTH,CCXZPE,
     *          CXTRAP)
      END IF
      IF (RMETHD.EQ.CCCAS) THEN
        CALL CCCASX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR)
      END IF
C
      IF(RMETHD.NE.RNONE) THEN
        WRITE(IW,10) RMETHD
        CALL FLSHBF(IW)
      ELSE
        WRITE(IW,20)
        CALL FLSHBF(IW)
        CALL ABRT
      END IF
C
      RETURN
C
   10 FORMAT(/,4X,64(1H-),
     *       /,10X,'COMPOSITE METHOD ACCESSED: ',A8,
     *       /,4X,64(1H-))
   20 FORMAT(4X,'RMETHD SHOULD BE ONE OF THESE:',/,
     *       4X,'G1,G2,G3,G2MP2,G3MP2,',/,
     *       4X,'G32CCSD,G3MP2B3LYP,',/,
     *       4X,'W1,W2,W3,W4,MW4S,G3MS,CCCAS4,',/,
     *       4X,'CCCACCL,CCCAS,G4MP2,G4MP26X')
      END
C================================================================
C
C     ROUTINE TO ASSIGN DEFAULT DFT SETTINGS
C
C*MODULE COMP  *DECK DTTSET
      SUBROUTINE DTTSET
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /PCKLAB/ LABSIZ
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /SCFOPT/ CONVHF,MAXIT,MCONV,NPUNCH,NPREO(4)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA RNONE/8HNONE    /
C
      NEVALS=0
      IF (DFTYPE.NE.RNONE) THEN
       MCONV = 17
       CALL DFTINP(DFTYPE)
       LABSIZ = 1
      END IF
C
      END
C================================================================
C
C     ROUTINE TO ASSIGN DEFAULT CCTYP SETTINGS
C
C*MODULE COMP  *DECK CCTSET
      SUBROUTINE CCTSET
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL GOPARR,MASWRK,DSKWRK
C
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,IDFT34,NAUXFUN,
     *                                                    NAUXSHL
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /SCFOPT/ CONVHF,MAXIT,MCONV,NPUNCH,NPREO(4)
      COMMON /SYMREP/ IRPNAM(14),IPP(14),LAMBDA(14),LAMBD0(14),
     *                IADDR1(14),IADDR2(14),IADDR3(14)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA RNONE/8HNONE    /
      DATA CCSDT/8HCCSD(T) /
      DATA CRCCL,EOMSD,EOMSDT/8HCR-CCL  ,8HEOM-CCSD,8HCR-EOM  /
C
      CALL INTIN
      NEVALS=0
      NPREO(2) = IPP(1)
      IF(CCTYP.EQ.CRCCL) GOPARR = .FALSE.
      IF(CCTYP.EQ.CCSDT) GOPARR = .FALSE.
      IF(CCTYP.NE.RNONE) CALL CCINP
      IF(CCTYP.NE.RNONE) DFTTYP(3)=1.0D+00
      IF(CCTYP.NE.RNONE) MCONV=65
      IF(CCTYP.EQ.EOMSD  .OR.
     *   CCTYP.EQ.EOMSDT .OR.
     *   CCTYP.EQ.CRCCL) CALL EOMINP(SCFTYP,CCTYP)
C
      END
C================================================================
C
C     ROUTINE TO ASSIGN DEFAULT CITYP SETTINGS
C
C*MODULE COMP  *DECK CITSET
      SUBROUTINE CITSET
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,IDFT34,NAUXFUN,
     *                                                    NAUXSHL
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA RNONE/8HNONE    /
C     DATA ALDET,GENCI,FSOCI/8HALDET   ,8HGENCI   ,8HFSOCI   /
C     DATA    ORMAS,CIS,GUGA/8HORMAS   ,8HCIS     ,8HGUGA    /
C     DATA FCI/8HFCI     /
C
      NEVALS=0
      IF(CITYP.NE.RNONE) THEN
        CALL WFNCI
        DFTTYP(3)=1.0D+00
      END IF
C
      END
C================================================================
C
C     ROUTINE TO ASSIGN DEFAULT MPLEVL SETTINGS
C
C*MODULE COMP  *DECK MPLSET
      SUBROUTINE MPLSET
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      LOGICAL MPTEST
C
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,IDFT34,NAUXFUN,
     *                                                    NAUXSHL
      COMMON /PCKLAB/ LABSIZ
      COMMON /SCFOPT/ CONVHF,MAXIT,MCONV,NPUNCH,NPREO(4)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      CALL INTIN
      MPTEST=.FALSE.
C     MCONV = 65
      IF(MPLEVL.GT.0) THEN
       MCONV = 65
       CALL MP2INP(MPTEST)
       LABSIZ= 2
       DFTTYP(3)=1.0D+00
       CALL SYMORB
      END IF
C
      END
C================================================================
C
C     ROUTINE TO SETUP SCALAR RELATIVITIC CORRECTIONS
C
C*MODULE COMP  *DECK CSCALAR
      SUBROUTINE CSCALAR
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      PARAMETER (MXATM=2000, MXSH=5000, MXGTOT=20000)
      CHARACTER*4 ATM
C
      COMMON /FMCOM / XX(1)
      COMMON /INFO  / CDUM(MXATM,3),IZAN(MXATM),NATOMS,IUNTRD,ATM(MXATM)
      COMMON /MACHIN/ NWDVAR,MAXFM,MAXSM,LIMFM,LIMSM
      COMMON /RELWFN/ RMETHOD,QRQMT,CLIG,CLIG2,QRTOL,IQRORD,MODQR,NESOC,
     *                NRATOM,NUMU,NQMTR,NQRDAF,MORDA,NDARELB
      COMMON /ZMTALT/ NZMAT2,NZVAR2,NVAR2,NZMTRD,ICOORD
C
CSN   DATA RESC,ANESC,DK/8HRESC    ,8HNESC    ,8HDK      /
      DATA ANESC/8HNESC    /
      DATA RNONE/8HNONE    /
C
      IF(RMETHOD.EQ.ANESC) THEN
C
C        THE ORDER OF CALLS TO RELSAVE IS IMPORTANT. SEE RELSAVE
C
C        SMALL AND LARGE BASIS SETS SHOULD NOT BE NORMALISED!
C        READ THE SMALL COMPONENT BASIS SET
         CALL MOLE(' $DATAS ',IUNTRD,ICOORD,.FALSE.)
         CALL RELSAVE(4)
C        READ THE LARGE COMPONENT BASIS SET
         CALL MOLE(' $DATAL ',IUNTRD,ICOORD,.FALSE.)
         CALL RELSAVE(0)
      END IF
C
C     READ THE MOLECULE AND ITS NORMAL BASIS SET, OR POSSIBLY,
C     READ THE FOLDY-WOUTHUYSEN TRANSFORMED BASIS FOR 2E INTEGRALS
C     THIS BASIS SET IS "NORMAL" AND IS TO BE NORMALISED
C
      CALL MOLE(' $DATA  ',IUNTRD,ICOORD,.TRUE.)
C
      IF(RMETHOD.EQ.ANESC) CALL RELSAVE(3)
C     NOTA BENE: THE LAST DATA GROUP DEFINES GEOMETRY ETC
      CALL FLSHBF(6)
      IF(RMETHOD.NE.RNONE.AND.MOD(MODQR,2).EQ.1) THEN
         MAXGTOT = MXGTOT
         MAXSH   = MXSH
         CALL VALFM(LOADFM)
         LEXU     = LOADFM   + 1
         LCSU     = LEXU     + MAXGTOT
         LCPU     = LCSU     + MAXGTOT
         LCDU     = LCPU     + MAXGTOT
         LCFU     = LCDU     + MAXGTOT
         LCGU     = LCFU     + MAXGTOT
         LKSTARTU = LCGU     + MAXGTOT
         LKATOMU  = LKSTARTU + MAXSH/NWDVAR + 1
         LKTYPEU  = LKATOMU  + MAXSH/NWDVAR + 1
         LKNGU    = LKTYPEU  + MAXSH/NWDVAR + 1
         LKLOCU   = LKNGU    + MAXSH/NWDVAR + 1
         LKMINU   = LKLOCU   + MAXSH/NWDVAR + 1
         LKMAXU   = LKMINU   + MAXSH/NWDVAR + 1
         LMAPLE   = LKMAXU   + MAXSH/NWDVAR + 1
         LLARCH   = LMAPLE   + MAXGTOT/NWDVAR + 1
         LELM     = LLARCH   + MAXGTOT/NWDVAR + 1
         LAST     = LELM     + MAXGTOT/NWDVAR + 1
         NEED = LAST - LOADFM - 1
         CALL GETFM(NEED)
         CALL BUNCON(MAXGTOT,MAXSH,XX(LEXU),XX(LCSU),XX(LCPU),
     *               XX(LCDU),XX(LCFU),XX(LCGU),XX(LKSTARTU),
     *               XX(LKATOMU),XX(LKTYPEU),XX(LKNGU),XX(LKLOCU),
     *               XX(LKMINU),XX(LKMAXU),XX(LMAPLE),XX(LLARCH),
     *               XX(LELM))
         CALL RETFM(NEED)
      END IF
C
      END
C================================================================
C
C     ROUTINE TO SETUP SCFTYP PARAMETERS
C
C*MODULE COMP  *DECK CSCFTYP
      SUBROUTINE CSCFTYP
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      PARAMETER (MXAO=8192, MXATM=2000)
      PARAMETER (HALF=0.5D+00, ONE=1.0D+00, TWO=2.0D+00)
C
      COMMON /GVBWFN/ CICOEF(2,12),F(25),ALPHA(325),BETA(325),NO(10),
     *                NCO,NSETO,NOPEN,NPAIR,NORB,NCONF(MXAO),NHAM
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /SCFWFN/ AROHF(3),BROHF(3),PACAVO(6),IACAVO,IUHFNO,ICUHF,
     *                MVOQ
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA RHF/8HRHF     /
      DATA ROHF/8HROHF    /
C
      IF(SCFTYP.EQ.RHF) THEN
         NCO=NA
         NORB=NA
         NSETO=0
         NPAIR=0
         NHAM=1
         ALPHA(1)=TWO
         BETA(1)=-ONE
         F(1)=ONE
      END IF
C
      IF(SCFTYP.EQ.ROHF) THEN
         ALPHA(1)= -HALF
         ALPHA(2)=  HALF
         ALPHA(3)=  ONE+HALF
         BETA(1) =  ONE+HALF
         BETA(2) =  HALF
         BETA(3) = -HALF
CSN      COUPLE = .TRUE.
      END IF
      IF(SCFTYP.EQ.ROHF) THEN
         AROHF(1) = ALPHA(1)
         AROHF(2) = ALPHA(2)
         AROHF(3) = ALPHA(3)
         BROHF(1) =  BETA(1)
         BROHF(2) =  BETA(2)
         BROHF(3) =  BETA(3)
C
         IF(NCO.GT.0) THEN
            IF(NA.EQ.NB) THEN
               F(1) = ONE
               ALPHA(1) = TWO
               BETA(1)  = -ONE
            ELSE
               F(1) = ONE
               F(2) = HALF
               ALPHA(1) = TWO
               ALPHA(2) = ONE
               ALPHA(3) = HALF
               BETA(1) = -ONE
               BETA(2) = -HALF
               BETA(3) = -HALF
            END IF
         ELSE
            F(1) = HALF
            ALPHA(1) = HALF
            BETA(1) = -HALF
         END IF
      END IF
C
      END
C================================================================
C
C     ROUTINE TO INITIALIZE ALL PARAMETERS AND
C     RE-INITIALIZE CERTAIN PARAMETERS
C
C*MODULE COMP  *DECK CLRALL
      SUBROUTINE CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     LOGICAL HSSEND,DIFFS,DIFFSP,EXTFIL,SECONDD
      LOGICAL HSSEND,DIFFS,DIFFSP,SECONDD
      LOGICAL CDIFFS,CDFFSP,CEXTFL,SG1
C
      PARAMETER (MAXA=103, MAXL=7, NCOM=20)
      PARAMETER (NZERO=0, SZERO=0.0D+00, ONE=1.0D+00)
      PARAMETER (MXUNIT=299)
      PARAMETER (MXGRID=10)
C
      DIMENSION CDFTTP (NCOM),ICMPLV (NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),CENMPN(NCOM),CENCCS(NCOM),
     *  CENDFT(NCOM),CENCIT(NCOM),CENCCM(NCOM),
     *  ICENCA(NCOM),ICENCB(NCOM),CCORR(NCOM),IDOPCM(NCOM),
     *  CSCALE(NCOM),IEXTRP(NCOM),CESCF(NCOM),CECOR(NCOM),
     *  CCSCF(NCOM)
C
      COMMON /BASISC/ GBASIS,AEX(MAXA,MAXL),ABASIS(MAXA,MAXL),
     *                IAGAUS(MAXA,MAXL),IRDBAS
      COMMON /BASSPH/ QMTTOL,ISPHER
      COMMON /CCPAR / AMPTSH,METHCC,NCCTOT,NCCOCC,NCCFZC,NCCFZV,
     *                MXCCIT,MXRLEIT,NWRDCC,ICCCNV,ICCRST,IDSKCC
      COMMON /COMPBS/ NGAUSS,NDFUNC,NFFUNC,NPFUNC,DIFFSP,DIFFS,
     *                POLAR
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /DFGRID/ DFTTHR,DFTGTHR,SWOFF,SW0,BSLRD(137),NDFTFG,
     *                NRAD,NTHE,NPHI,NRAD0,NTHE0,NPHI0,
     *                NANGPT(MXGRID),NANGPT0(MXGRID),SG1,JANS
      COMMON /DFTPAR/ DFTTYP(20),EXENA,EXENB,EXENC,IDFT34,NAUXFUN,
     *                                                    NAUXSHL
      COMMON /HSSCTL/ IHESSM,IHREP,HSSEND
      COMMON /MACHSW/ KDIAG,ICORFL,IXDR,MODIO
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
      COMMON /OPNNFT/ NFTOPN(MXUNIT),NODEXT(MXUNIT),IOSMP(2)
      COMMON /PCMPAR/ IPCM,NFT26,NFT27,IKREP,IEF,IP_F,NFMOPCM
      COMMON /RELWFN/ RMETHOD,QRQMT,CLIG,CLIG2,QRTOL,IQRORD,MODQR,NESOC,
     *                NRATOM,NUMU,NQMTR,NQRDAF,MORDA,NDARELB
      COMMON /SCFOPT/ CONVHF,MAXIT,MCONV,NPUNCH,NPREO(4)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
      COMMON /ZMTALT/ NZMAT2,NZVAR2,NVAR2,NZMTRD,ICOORD
C
      DATA RNONE/8HNONE    /
C
      HSSEND  = .FALSE.
      SECONDD = .FALSE.
      ICXPCM  = NZERO
      IPCM    = NZERO
      NZMTRD  = NZERO
      KDIAG   = 3
      IHESSM  = 0
      MAXIT   = 200
      DO II=70,77
       NFTOPN(II)=NZERO
      END DO
C
      IF(NCLR.EQ.1) GOTO 1
C
      RMETHD  = RNONE
      ICXBAS  = NZERO
      ICALC   = NZERO
      IENREF  = NZERO
      IOP     = NZERO
      IHS     = NZERO
      IENE    = NZERO
      CZPSCL  = ONE
      CENHLC  = SZERO
      CXETH   = SZERO
      CXHTH   = SZERO
      CXGTH   = SZERO
      CCXZPE  = SZERO
      CNUTRL  = SZERO
      CHEATS  = RNONE
      CXTRAP  = RNONE
      CGASES  = SZERO
C
C     --- INITIALIZATION OF PARAMETERS ---
C
      DO I=1,20
       CDFTTP(I) = RNONE
       ICMPLV(I) = NZERO
       CCCTYP(I) = RNONE
       CCITYP(I) = RNONE
       CSCALE(I) = RNONE
       CCSCF(I)  = SCFTYP
       ICISPH(I) = -1
       CGBASS(I) = RNONE
       ICNGSS(I) = NZERO
       ICNDFC(I) = NZERO
       ICNFFC(I) = NZERO
       ICNPFC(I) = NZERO
       CDFFSP(I) = .FALSE.
       CDIFFS(I) = .FALSE.
       CPOLAR(I) = RNONE
       CEXTFL(I) = .FALSE.
       ICNACR(I) = NUMCOR()
       ICNBCR(I) = NUMCOR()
       ICNCOR(I) = NUMCOR()
       ICNDER(I) = NZERO
       ICENCA(I) = NZERO
       ICENCB(I) = NZERO
       IDOPCM(I) = NZERO
       IEXTRP(I) = NZERO
       CETOT(I)  = SZERO
       CCMP2(I)  = SZERO
       CENMPN(I) = SZERO
       CENCCS(I) = SZERO
       CENDFT(I) = SZERO
       CENCCM(I) = SZERO
       CENCIT(I) = SZERO
       CESCF(I)  = SZERO
       CECOR(I)  = SZERO
       CCORR(I)  = SZERO
      END DO
C
    1 CONTINUE
C
C     --- DEFAULTS FOR EVERY RUN ---
C
       DFTYPE = RNONE
       MPLEVL = NZERO
       CCTYP  = RNONE
       CITYP  = RNONE
       ISPHER = -1
       GBASIS = RNONE
       NGAUSS = NZERO
       NDFUNC = NZERO
       NFFUNC = NZERO
       NPFUNC = NZERO
       DIFFSP = .FALSE.
       DIFFS  = .FALSE.
       POLAR  = RNONE
C      EXTFIL = .FALSE.
       NACORE = NUMCOR()
       NBCORE = NUMCOR()
       NCCFZC = NUMCOR()
       RMETHOD= RNONE
       NDFTFG = NZERO
       DFTTYP(3)= ONE
C
      END
C================================================================
C*MODULE COMP  *DECK CLOSCC
      SUBROUTINE CLOSCC
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CLOSE(70,STATUS='DELETE')
      CLOSE(71,STATUS='DELETE')
      CLOSE(72,STATUS='DELETE')
      CLOSE(73,STATUS='DELETE')
      CLOSE(74,STATUS='DELETE')
      CLOSE(75,STATUS='DELETE')
      CLOSE(76,STATUS='DELETE')
      CLOSE(77,STATUS='DELETE')
C
      RETURN
C
      END
C
C*MODULE COMP  *DECK G3MCCDX
C> @brief    SET G3MP2 PARAMETERS AND RESULTS
C> @details  SET G3MP2 PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE G3MCCDX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,CNUTRL,CXETH,CXHTH,
     *          CXGTH,CCXZPE)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CG3MP2
C
C     ----- G3(MP2,CCSD) PARAMETERS -----
C           CURTISS, ET AL., CPL 314 (1999) 101-107
C
      PARAMETER (SCLZPE1=0.8929D+00)
      PARAMETER (HLCA=9.170D-03,HLCB=4.455D-03,
     *           HLCC=9.155D-03,HLCD=1.947D-03)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
      DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),CENCCS(NCOM),CENDFT(NCOM),
     *  CENCCM(NCOM),CENCIT(NCOM),ICENCA(NCOM),ICENCB(NCOM),
     *  CCORR(NCOM),IDOPCM(NCOM),CSCALE(NCOM),IEXTRP(NCOM),
     *  CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM),CENMPN(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
C
      DATA BASN31,BASG3L,CCSDT/8HN31     ,8HG3L     ,8HCCSD(T) /
      DATA CG3MP2/'CG3MP2  '/
      DATA ROHF    /8HROHF    /
      DATA ZAPT/8HZAPT    /
C
      DATA NCOR /2*0,
     *             2*1,                  6*1,
     *             2*5,                  6*5,
     *             2*9,          10*9,   6*14,
     *             2*18,         10*18,  6*23,
     *             2*27,  14*27, 10*34,  6*39,
     *             2*43,  14*43,    50/
C
C RHF SETUP (ROHF AND NAT=1 CORRECTIONS BELOW):
C$COMP
C iop=2, ihs=1, iene=2, icalc=2, ienref=5,
C cenhlc={input HLC value}, czpscl=0.8929, cheats=g3mp2,
C icmplv(2)=2,
C icmplv(4)=2,
C ccctyp(3)=ccsd(t),
C icisph(4)=1,
C cgbass(1)=n31,n31,n31,g3l,
C icngss(1)=6,6,6,
C icndfc(1)=1,1,1,
C icnacr(2)=0,
C icnbcr(2)=0,
C icnder(2)=1,
C icenca(1)=3,4,
C icencb(1)=5,5
C$END
C
      CZPSCL=1.0D+00
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IOP  = 2
      IHS  = 1
      IENE = 2
      OSPT = ZAPT
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) IENE = 3
C
      ICMPLV(2) = 2
      ICMPLV(4) = 2
CSN   ICMPLV(5) = 2
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) ICMPLV(5) = 2
      CCCTYP(3) = CCSDT
      ICISPH(4) = 1
      CGBASS(1) = BASN31
      CGBASS(2) = BASN31
      CGBASS(3) = BASN31
      CGBASS(4) = BASG3L
CSN   CGBASS(5) = BASN31
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) CGBASS(5) = BASN31
      ICNGSS(1) = 6
      ICNGSS(2) = 6
      ICNGSS(3) = 6
      ICNGSS(4) = 0
CSN   ICNGSS(5) = 6
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) ICNGSS(5) = 6
      ICNDFC(1) = 1
      ICNDFC(2) = 1
      ICNDFC(3) = 1
CSN   ICNDFC(5) = 1
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) ICNDFC(5) = 1
      ICNACR(2) = 0
      ICNBCR(2) = 0
      ICNDER(1) = 0
      ICNDER(2) = 1
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      WRITE(IW,9000)
      IF(MUL.NE.1) THEN
       WRITE(IW,9800)
       WRITE(IW,9005)
C      CALL ABRT
      END IF
      WRITE(IW,9010)
      WRITE(IW,9020)
      WRITE(IW,9030)
      WRITE(IW,9040)
C
      E0G     = ZERO
      HG3     = ZERO
      E0G3MP2 = ZERO
      HG3MP2  = ZERO
      ENMP2   = CCMP2(3)
      IF(NAT.EQ.1 .OR. SCFTYP.EQ.ROHF) ENMP2 = CETOT(5)
      ECCSD   = CETOT(3)
      ENMP2L  = CETOT(4)
C
      ITHAT = 0
      NCORT = 0
      DO I=1,NAT
         ITHAT = INT(ZAN(I))
         NCORT = NCORT + NCOR(ITHAT)
      END DO
      NAVAL = NA - NCORT
      NBVAL = NB - NCORT
C
C     ----- HIGH LEVEL CORRECTIONS -----
C
      IF(NAT.EQ.1) THEN
         FUDGE  = -HLCC*NBVAL - HLCD*(NAVAL-NBVAL)
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      ELSE
         FUDGE = -HLCA*NBVAL - HLCB*(NAVAL-NBVAL)
      END IF
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
         IF(CXETH.NE.ZERO) ETH=CXETH
         IF(CXHTH.NE.ZERO) HTH=CXHTH
         IF(CXGTH.NE.ZERO) GTH=CXGTH
         IF(CCXZPE.NE.ZERO) THEN
           IF(CZPSCL.NE.ZERO) THEN
            ZPESCL = CCXZPE*CZPSCL
            CXZPE  = ZPESCL/CZPSCL
           ELSE
            ZPESCL = CCXZPE
            CXZPE  = ZPESCL/SCLZPE1
           END IF
         ENDIF
      END IF

C
      DELCORR = ECCSD  - ENMP2
      DELBAS  = ENMP2L - ENMP2

C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
        E0G3MP2= ENMP2 + DELCORR + DELBAS       + FUDGE + SOVAL
        EG3MP2 = ENMP2 + DELCORR + DELBAS + ETH + FUDGE + SOVAL
        HG3MP2 = ENMP2 + DELCORR + DELBAS + HTH + FUDGE + SOVAL
        GG3MP2 = ENMP2 + DELCORR + DELBAS + GTH + FUDGE + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
        E0G3MP2= ENMP2 + DELCORR + DELBAS               + ZPESCL + FUDGE
        EG3MP2 = ENMP2 + DELCORR + DELBAS + ETH - CXZPE + ZPESCL + FUDGE
        HG3MP2 = ENMP2 + DELCORR + DELBAS + HTH - CXZPE + ZPESCL + FUDGE
        GG3MP2 = ENMP2 + DELCORR + DELBAS + GTH - CXZPE + ZPESCL + FUDGE
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         IF(NAT.EQ.1) THEN
            WRITE(IW,9610) HLCC,HLCD
         ELSE
            WRITE(IW,9610) HLCA,HLCB
         END IF
         WRITE(IW,9615) ENMP2,ECCSD,ENMP2L,DELBAS,ZPESCL,SCLZPE1,
     *           FUDGE,GTH,ETH,HTH,E0G3MP2,EG3MP2,HG3MP2,GG3MP2
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C     LET:
      E0G = E0G3MP2
      HG3 = HG3MP2
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CG3MP2,CNUTRL,E0G,HG3,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'G3(MP2,CCSD) CALCULATIONS',
     *       5X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9005 FORMAT(/5X,'***** G3(MP2) NOT IMPLEMENTED FOR UHF OPEN-',
     *      'SHELLS ******'//,5X,'CR-CC(2,3) VERSION OF ',
     *      'ROHF BASED CCSD(T) WILL BE USED INSTEAD',/)
C9005 FORMAT(/5X,'***** ERROR:  G3(MP2) NOT IMPLEMENTED FOR UHF OPEN-',
C    *      'SHELLS ******'//,5X,'PLEASE WAIT FOR UCCSD(T)',/
C    *      'WILL BE AVAILABLE FROM MICHIGAN',/)
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) HF OPTIMIZATION',
     *      ' AND HESSIAN',/5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) MP2 OPTIMIZATION',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) CCSD(T)/6-31G(D)',
     *      /5X,50(1H-))
 9040 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) MP2/G3MP2LARGE',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF G3(MP2) CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(G3(MP2))@0K   = E(CCSD(T))   + DE(BASIS)   + ',
     *       'ZPE(SCALED) + HLC',
     *       /4X,'E(G3(MP2))@298K = E(G3(MP2))@0K + (E(THERMAL) - ZPE)',
     *       /4X,'H(G3(MP2))      = E(G3(MP2))@298K + KT',
     *       /4X,'G(G3(MP2))      = H(G3(MP2)) - TDS',
     *      //8X,'E(CCSD(T))      = CCSD(T)/6-31G(D)//MP2/6-31G(D) ',
     *           'FROZEN CORE',
     *       /8X,'DE(BASIS)       = E(MP2/G3MP2LARGE) - ',
     *           'E(MP2/6-31G(D)) FROZEN CORE',
     *       /8X,'GEOMETRY MP2/6-31G(D) CORE CORRELATION INCLUDED')
 9610 FORMAT(8X,'ZPE AND OTHER THERMAL CALCULATIONS AT HF/6-31G(D)',
     *       /8X,'HLCS USED ARE:  A = ',F8.6,'     B = ',F8.6,
     *           ' HARTREE')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF G3(MP2) CALCULATIONS',
     *   /4X,64(1H-),
     *   /4X,'MP2/6-31G(D)    =',F13.6,3X,'CCSD(T)/6-31G(D) =',F13.6,
     *   /4X,'MP2/G3MP2LARGE  =',F13.6,3X,'BASIS CONTRIBUT  =',F13.6,
     *   /4X,'ZPE(HF/6-31G(D))=',F13.6,3X,'ZPE SCALE FACTOR =',F13.6,
     *   /4X,'HLC             =',F13.6,3X,'FREE ENERGY      =',F13.6,
     *   /4X,'THERMAL ENERGY  =',F13.6,3X,'THERMAL ENTHALPY =',F13.6,
     *   /4X,64(1H-),
     *   /4X,'E(G3(MP2)) @ 0K =',F13.6,3X,'E(G3(MP2)) @298K =',F13.6,
     *   /4X,'H(G3(MP2))      =',F13.6,3X,'G(G3(MP2))       =',F13.6,
     *   /4X,64(1H-))
 9800 FORMAT(/4X,64(1H-),/10X,'RESULTS ARE SUSPECT',
     * /10X,'THERE IS NO UCCSD(T) CODED CURRENTLY IN GAMESS',
     *   /10X,'THE MULTIPLICITY IS NOT A SINGLET !!',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK MW4SX
C> @brief    SET MW4S METHOD PARAMETERS AND RESULTS
C> @details  SET MW4S METHOD PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE MW4SX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CMW4S
C
C     ----- MW4S PARAMETERS -----
C     OPTIMIZATION AND HESSIAN:
C      MP2/CCT full core
C     SINGLE POINT CALCULATIONS:
C      MP2/CCQ
C      CR-CCL(2,3)/CCT
C      MP2(PCM)/CCT
C
C     SCALING NOT KNOWN YET
c     PARAMETER (SCLZPE1=0.8929D+00)
      PARAMETER (SCLZPE1=0.895D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
CSN   DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CENMPN(NCOM),
     *  CENCCS(NCOM),CENDFT(NCOM),CENCCM(NCOM),CENCIT(NCOM),
     *  ICENCA(NCOM),ICENCB(NCOM),CCORR(NCOM),CSCALE(NCOM),
     *  IEXTRP(NCOM),CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
      DATA BASCCT,BASCCQ/8HCCT     ,8HCCQ     /
CSN   DATA BASACT,BASACQ/8HACCT    ,8HACCQ    /
      DATA CRCCL/8HCR-CCL  /
      DATA CMW4S/'CMW4S   '/
C
CSN   DATA NCOR /2*0,
CSN  *             2*1,                  6*1,
CSN  *             2*5,                  6*5,
CSN  *             2*9,          10*9,   6*14,
CSN  *             2*18,         10*18,  6*23,
CSN  *             2*27,  14*27, 10*34,  6*39,
CSN  *             2*43,  14*43,    50/
C
C$comp
Ciop=1,ihs=1,iene=3,icalc=3,ienref=5,czpscl=0.895,cheats=mw4s,
Cccctyp(3)=        cr-ccl,
Cicmplv(1)=2  ,2  ,0    ,2,
Ccgbass(1)=cct,ccq,cct  ,cct,
Cidopcm(1)=0  ,0  ,0    ,1,
Cicnacr(1)=0  ,
Cicnbcr(1)=0  ,
Cicisph(1)=1  ,1  ,1    ,1,
Cicenca(1)=2,3,4,
Cicencb(1)=5,5,2,
Cicnder(1)=1
C$END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IOP  = 1
      IHS  = 1
      IENE = 3
C
      ICMPLV(1) = 2
      ICMPLV(2) = 2
      CCCTYP(3) = CRCCL
      ICMPLV(4) = 2
      ICNDER(1) = 1
      CGBASS(1) = BASCCT
      CGBASS(2) = BASCCQ
      CGBASS(3) = BASCCT
      CGBASS(4) = BASCCT
      ICNACR(1) = 0
      ICNBCR(1) = 0
      ICISPH(1) = 1
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      IDOPCM(4) = 1
C
C     ----- ADD $PCM TO INPUT FILE -----
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      WRITE(IW,9000)
      WRITE(IW,9010)
      WRITE(IW,9015)
      WRITE(IW,9020)
      WRITE(IW,9030)
C
      ICHARG  = 0
      IZATM   = 0
      E0MS    = ZERO
      E298MS  = ZERO
      HMS     = ZERO
      GMS     = ZERO
      DELCCQ  = ZERO
      DELCCL  = ZERO
      DELPCM  = ZERO
      EREF    = ZERO
      EMSREF  = ZERO
      EMSCCQ  = ZERO
      EMSCCL  = ZERO
      EMSPCM  = ZERO
      SOVAL   = ZERO
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      END IF

      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
      END IF
C
      EMSREF = CETOT(5)
      EMSCCQ = CETOT(2)
      EMSCCL = CETOT(3)
      EMSPCM = CETOT(4)
      DELCCQ = EMSCCQ - EMSREF
      DELCCL = EMSCCL - EMSREF
      DELPCM = EMSPCM - EMSCCQ
C
C-----NOTE: CETOT(5) IS THE MP2 CALCULATION FROM
C     CR-CC(2,3)/cc-pVTZ SINGLE POINT CALCULATION
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = EMSREF + DELCCQ + DELCCL + DELPCM
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0MS   = EREF       + SOVAL
       E298MS = EREF + ETH + SOVAL
       HMS    = EREF + HTH + SOVAL
       GMS    = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0MS   = EREF +            ZPESCL
       E298MS = EREF + ETH -CXZPE+ZPESCL
       HMS    = EREF + HTH -CXZPE+ZPESCL
       GMS    = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9615) EMSREF,EMSCCQ,EMSCCL,EMSPCM,
     *                  DELCCQ,DELCCL,DELPCM,ZPESCL,ETH,SCLZPE1,
     *                  HTH,GTH,E0MS,E298MS,HMS,GMS
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CMW4S,CNUTRL,E0MS,HMS,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'MW4S CALCULATIONS',
     *       19X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) MP2/CCT ',
     *      ' OPTIMIZATION AND HESSIAN',/5X,50(1H-))
 9015 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) MP2/CCQ ',
     *      /5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) CR-CC(2,3)/CCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) MP2(PCM)/CCT',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF MW4S CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(MW4S)@0K   = E(MP2)   + DE(CCQ)   + ',
     *      /17X,'DE(CCL) + DE(PCM) + ZPE(SCALED)',
     *       /4X,'E(MW4S)@298K = E(MW4S)@0K + (E(THERMAL) - ZPE)',
     *       /4X,'H(MW4S)      = E(MW4S)@298K + KT',
     *       /4X,'G(MW4S)      = H(MW4S) - TDS',
     *      //8X,'E(MP2)          = MP2/CCT ',
     *       /8X,'DE(CCQ)  = E(MP2/CCQ) - E(MP2/CCT)',
     *       /8X,'DE(CCL)         = E(CR-CC(2,3)/CCT) - ',
     *           'E(MP2/CCT)',
     *       /8X,'DE(PCM)         = E(MP2(PCM)/CCQ) - ',
     *           'E(MP2/CCQ)')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF MW4S CALCULATIONS',
     */4X,64(1H-),
     */4X,'MP2/CCT fu        =',F13.6,3X,'MP2/CCQ            =',F13.6,
     */4X,'CR-CCL/CCT        =',F13.6,3X,'MP2(PCM)/CCQ       =',F13.6,
     */4X,'DE(CCQ)           =',F13.6,3X,'DE(CR-CCL)         =',F13.6,
     */4X,'DE(PCM)           =',F13.6,3X,'ZPE,MP2/CCT        =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'ZPE SCALE FACTOR   =',F13.6,
     */4X,'THERMAL ENTHALPY  =',F13.6,3X,'FREE ENERGY        =',F13.6,
     */4X,64(1H-),
     */4X,'E(MW4S) @ 0K        =',F13.6,3X,'E(MW4S) @298K    =',F13.6,
     */4X,'H(MW4S)             =',F13.6,3X,'G(MW4S)          =',F13.6,
     */4X,64(1H-))
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK G3MSX
C> @brief    SET G3MS METHOD PARAMETERS AND RESULTS
C> @details  SET G3MS METHOD PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE G3MSX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CG3MS
C
C     ----- G3MS PARAMETERS -----
C     OPTIMIZATION AND HESSIAN:
C      MP2/6-31G(d,p)full core
C     SINGLE POINT CALCULATIONS:
C      MP2/G3MP2LARGE
C      CR-CCL(2,3)/6-31G(d,p)
C      MP2(PCM)/G3MP2LARGE
C
C     SCALING NOT KNOWN YET
c     PARAMETER (SCLZPE1=0.8929D+00)
      PARAMETER (SCLZPE1=0.895D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
CSN   DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CENMPN(NCOM),
     *  CENCCS(NCOM),CENDFT(NCOM),CENCCM(NCOM),CENCIT(NCOM),
     *  ICENCA(NCOM),ICENCB(NCOM),CCORR(NCOM),CSCALE(NCOM),
     *  IEXTRP(NCOM),CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
CSN   DATA BASN31,BASG3L,CCSDT/8HN31     ,8HG3L     ,8HCCSD(T) /
      DATA BASN31,BASG3L/8HN31     ,8HG3L     /
      DATA CRCCL/8HCR-CCL  /
      DATA CG3MS/'G3MS    '/
C
CSN   DATA NCOR /2*0,
CSN  *             2*1,                  6*1,
CSN  *             2*5,                  6*5,
CSN  *             2*9,          10*9,   6*14,
CSN  *             2*18,         10*18,  6*23,
CSN  *             2*27,  14*27, 10*34,  6*39,
CSN  *             2*43,  14*43,    50/
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IOP  = 1
      IHS  = 1
      IENE = 3
C
      ICMPLV(1) = 2
      ICMPLV(2) = 2
      CCCTYP(3) = CRCCL
      ICMPLV(4) = 2
      ICNDER(1) = 1
      CGBASS(1) = BASN31
      CGBASS(2) = BASG3L
      CGBASS(3) = BASN31
      CGBASS(4) = BASG3L
      ICNGSS(1) = 6
      ICNGSS(2) = 0
      ICNGSS(3) = 6
      ICNGSS(4) = 0
      ICNDFC(1) = 1
      ICNDFC(3) = 1
      ICNDFC(4) = 0
      ICNPFC(1) = 1
      ICNPFC(3) = 1
      ICNPFC(4) = 0
      ICNACR(1) = 0
      ICNBCR(1) = 0
      ICISPH(1) = 0
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      IDOPCM(4) = 1
C
C     ----- ADD $PCM TO INPUT FILE -----
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      WRITE(IW,9000)
      WRITE(IW,9010)
      WRITE(IW,9015)
      WRITE(IW,9020)
      WRITE(IW,9030)
C
      ICHARG  = 0
      IZATM   = 0
      E0MS    = ZERO
      E298MS  = ZERO
      HMS     = ZERO
      GMS     = ZERO
      DELG3L  = ZERO
      DELCCL  = ZERO
      DELPCM  = ZERO
      EREF    = ZERO
      EMSREF  = ZERO
      EMSG3L  = ZERO
      EMSCCL  = ZERO
      EMSPCM  = ZERO
      SOVAL   = ZERO
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      END IF

      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
      END IF
C
      EMSREF = CETOT(5)
      EMSG3L = CETOT(2)
      EMSCCL = CETOT(3)
      EMSPCM = CETOT(4)
      DELG3L = EMSG3L - EMSREF
      DELCCL = EMSCCL - EMSREF
      DELPCM = EMSPCM - EMSG3L
C
C-----NOTE: CETOT(5) IS THE MP2 CALCULATION FROM
C     CCSD(T)/6-31G(D,P) SINGLE POINT CALCULATION
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = EMSREF + DELG3L + DELCCL + DELPCM
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0MS   = EREF       + SOVAL
       E298MS = EREF + ETH + SOVAL
       HMS    = EREF + HTH + SOVAL
       GMS    = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0MS   = EREF +            ZPESCL
       E298MS = EREF + ETH -CXZPE+ZPESCL
       HMS    = EREF + HTH -CXZPE+ZPESCL
       GMS    = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9615) EMSREF,EMSG3L,EMSCCL,EMSPCM,
     *                  DELG3L,DELCCL,DELPCM,ZPESCL,ETH,SCLZPE1,
     *                  HTH,GTH,E0MS,E298MS,HMS,GMS
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CG3MS,CNUTRL,E0MS,HMS,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'G3MS CALCULATIONS',
     *       19X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) MP2/6-31G(D,P) ',
     *      ' OPTIMIZATION AND HESSIAN',/5X,50(1H-))
 9015 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) MP2/G3MP2LARGE ',
     *      /5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) CR-CC(2,3)/6-31G(D,P)',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) MP2(PCM)/G3MP2LARGE',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF G3MS CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(G3MS)@0K   = E(MP2)   + DE(G3MP2LARGE)   + ',
     *      /17X,'DE(CCL) + DE(PCM) + ZPE(SCALED)',
     *       /4X,'E(G3MS)@298K = E(G3MS)@0K + (E(THERMAL) - ZPE)',
     *       /4X,'H(G3MS)      = E(G3MS)@298K + KT',
     *       /4X,'G(MW4S)      = H(G3MS) - TDS',
     *      //8X,'E(MP2)          = MP2//6-31G(D,P) ',
     *       /8X,'DE(G3MP2LARGE)  = E(MP2/G3MP2LARGE) - ',
     *           'E(MP2/6-31G(D,P))',
     *       /8X,'DE(CCL)         = E(CR-CC(2,3)/6-31G(D,P)) - ',
     *           'E(CCSD(T)/6-31G(D,P))',
     *       /8X,'DE(PCM)         = E(MP2(PCM)/G3MP2LARGE) - ',
     *           'E(MP2(CR-CC(2,3))/G3MP2LARGE)')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF G3MS CALCULATIONS',
     */4X,64(1H-),
     */4X,'MP2/6-31G(D,P) fu =',F13.6,3X,'MP2/G3MP2LARGE     =',F13.6,
     */4X,'CR-CCL/6-31G(D,P) =',F13.6,3X,'MP2PCM/6-31G(D,P)  =',F13.6,
     */4X,'DE(G3MP2LARGE)    =',F13.6,3X,'DE(CR-CCL)         =',F13.6,
     */4X,'DE(PCM)           =',F13.6,3X,'ZPE,MP2/6-31G(D,P) =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'ZPE SCALE FACTOR   =',F13.6,
     */4X,'THERMAL ENTHALPY  =',F13.6,3X,'FREE ENERGY        =',F13.6,
     */4X,64(1H-),
     */4X,'E(G3MS) @ 0K      =',F13.6,3X,'E(G3MS) @298K      =',F13.6,
     */4X,'H(G3MS)           =',F13.6,3X,'G(G3MS)            =',F13.6,
     */4X,64(1H-))
C9800 FORMAT(/4X,64(1H-),/10X,'RESULTS ARE SUSPECT',
C    * /10X,'THERE IS NO OPEN SHELL CCSD(T) CODED CURRENTLY IN GAMESS',
C    *   /10X,'THE MULTIPLICITY IS NOT A SINGLET !!',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK CCCAS4X
C> @brief    SET ccCA-S4 METHOD PARAMETERS AND RESULTS
C> @details  SET ccCA-S4 METHOD PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE CCCAS4X(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR,CCSCF,CZPSCL,
     *          CXETH,CXHTH,CXGTH,CCXZPE,
     *          CXTRAP)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CCCCAS4
C
C     ----- ccCA-S4 PARAMETERS -----
C     OPTIMIZATION AND HESSIAN:
C      B3LYP/6-31G(2df,p)full core
C     SINGLE POINT CALCULATIONS:
C      MP2/ACCQ
C      MP2/CCT-DK
C      MP2/ACCT
C      CCSD(T)/CCT
C      MP2/ACCTC
C      MP2/CCT (IF ROHF OR NAT=1)
C      MP2/NCT
C
C     SCALING NOT KNOWN YET
C
      PARAMETER (SCLZPE1=0.9854D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
CSN   DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CSCALE(NCOM),
     *  CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM),CENCCS(NCOM),
     *  CENDFT(NCOM),CENCCM(NCOM),CENCIT(NCOM),ICENCA(NCOM),
     *  ICENCB(NCOM),CCORR(NCOM),IEXTRP(NCOM),CENMPN(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
C
      DATA BASN31,CCSDT/8HN31     ,8HCCSD(T) /
      DATA CCCCAS4/'CCCCAS4 '/
      DATA B3LYP  /8HB3LYP   /
      DATA BASCCT /8HCCT     /
      DATA BASNCT /8HNCT     /
      DATA BASACT /8HACCT    /
      DATA BASACQ /8HACCQ    /
      DATA BACACT /8HACCTC   /
CSN   DATA BACAWT /8HACCTWC  /
      DATA DK     /8HDK      /
      DATA RHF    /8HRHF     /
      DATA ROHF   /8HROHF    /
CSN   DATA ZAPT,RMP/8HZAPT    ,8HRMP     /
      DATA RMP/8HRMP     /
C
CSN   DATA NCOR /2*0,
CSN  *             2*1,                  6*1,
CSN  *             2*5,                  6*5,
CSN  *             2*9,          10*9,   6*14,
CSN  *             2*18,         10*18,  6*23,
CSN  *             2*27,  14*27, 10*34,  6*39,
CSN  *             2*43,  14*43,    50/
C
C IENREF=3 IS CHOSEN ARBITRARILY AS REFERENCE SHOULD BE E(CBS)
C RHF SETUP (ROHF AND NAT=1 CORRECTIONS ARE BELOW):
C$COMP
C IOP=1, IHS=1, IENE=6, ICALC=3, IENREF=3, CZPSCL=0.9854,
C CXTRAP=S4, IEXTRP(1)=2,6, CHEATS=CCCAS4,
C CCSCF(3) =           ROHF ,ROHF,
C CDFTTP(1)=B3LYP,
C CCCTYP(5)=                 CCSD(T),
C ICMPLV(2)=      2   ,2    ,0      ,2     ,2    ,2   ,2,
C CGBASS(1)=N31  ,ACCQ,CCT  ,CCT    ,ACCTC ,ACCT ,CCT ,NCT,
C CSCALE(3)=           DK,
C ICNGSS(1)=6,
C ICNDFC(1)=2,
C ICNFFC(1)=1,
C ICNPFC(1)=1,
C ICENCA(1)=3,4,5,
C ICENCB(1)=6,6,6,
C ICISPH(2)=1,1,1,1,1,1,1,
C ICNACR(5)=0,
C ICNBCR(5)=0
C$END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      N  = 0
      NN = 0
      NUCZ = 0
      IOP  = 1
      IHS  = 1
      IENE = 7
      OSPT = RMP
      IF(NAT.EQ.1) NUCZ = INT(ZAN(1))
C
      CDFTTP(1) = B3LYP
      ICMPLV(2) = 2
      ICMPLV(3) = 2
      CCCTYP(4) = CCSDT
      ICMPLV(5) = 2
      ICMPLV(6) = 2
      ICMPLV(7) = 2
      ICMPLV(8) = 2
      CGBASS(1) = BASN31
      CGBASS(2) = BASACQ
      CGBASS(3) = BASNCT
      CGBASS(4) = BASCCT
CSN   CGBASS(4) = BASNCT
      CGBASS(5) = BACACT
      CGBASS(6) = BASACT
      CGBASS(7) = BASCCT
      CGBASS(8) = BASNCT
      CSCALE(3) = DK
      CCSCF(3)  = ROHF
      CCSCF(4)  = ROHF
      IF(MUL.EQ.1) CCSCF(4)  = RHF
      ICNGSS(1) = 6
      ICNDFC(1) = 2
      ICNFFC(1) = 1
      ICNPFC(1) = 1
      DO N = 1,NAT
       NUCZ = INT(ZAN(N))
       IF(NUCZ.GE.13 .AND. NUCZ.LE.18) NN = NN + 1
      END DO
      ICNACR(5) = NN
      ICNBCR(5) = NN
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      ICISPH(5) = 1
      ICISPH(6) = 1
      ICISPH(7) = 1
      ICISPH(8) = 1
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      ICHARG  = 0
      IZATM   = 0
      E0MS    = ZERO
      E298MS  = ZERO
      HMS     = ZERO
      GMS     = ZERO
      DELTDK  = ZERO
      DELSDT  = ZERO
      DELCCC  = ZERO
      EREF    = ZERO
      EMSREF  = ZERO
      EMSDFT  = ZERO
      EMSCCT  = ZERO
      EMSNCT  = ZERO
      EMSACT  = ZERO
      EMSACQ  = ZERO
      EMSTDK  = ZERO
      EMSSDT  = ZERO
      EMSCCC  = ZERO
      EMPINF  = ZERO
      SOVAL   = ZERO
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      END IF

      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
         IF(CXETH.NE.ZERO) ETH=CXETH
         IF(CXHTH.NE.ZERO) HTH=CXHTH
         IF(CXGTH.NE.ZERO) GTH=CXGTH
         IF(CCXZPE.NE.ZERO) THEN
           IF(CZPSCL.NE.ZERO) THEN
            ZPESCL = CCXZPE*CZPSCL
            CXZPE  = ZPESCL/CZPSCL
           ELSE
            ZPESCL = CCXZPE
            CXZPE  = ZPESCL/SCLZPE1
           END IF
         ENDIF
      END IF
C
      WRITE(6,8000) ZPESCL,ETH,HTH,GTH
      WRITE(6,*)'$DATA'
      WRITE(6,*)
      WRITE(6,*)'C1'
       CALL PRATM(IW,1)
      WRITE(6,*)'$END'
C
      WRITE(IW,9000)
      WRITE(IW,9010)
      WRITE(IW,9015)
      WRITE(IW,9020)
      WRITE(IW,9025)
      WRITE(IW,9030)
      WRITE(IW,9035)
      WRITE(IW,9040)
      WRITE(IW,9045)
C
C     --- COMPLETE BASIS SET EXTRAPOLATION ---
C-----NOTE: CETOT(7) IS THE MP2 ENERGY VALUE FROM
C     CCSD(T)/CCT SINGLE POINT ENERGY CALCULATION
C
c     EMSCF = (6561.0D+00/4160.0D+00)*CESCF(2)
c    *       -(2401.0D+00/4160.0D+00)*CESCF(6)
c     EMCOR = (6561.0D+00/4160.0D+00)*CECOR(2)
c    *       -(2401.0D+00/4160.0D+00)*CECOR(6)
c     EMPINF = EMSCF + EMCOR
      EMPINF =(6561.0D+00/4160.0D+00)*CETOT(2)
     *       -(2401.0D+00/4160.0D+00)*CETOT(6)
C
      EMSDFT = CETOT(1)
      EMSACQ = CETOT(2)
      EMSTDK = CETOT(3)
      EMSSDT = CETOT(4)
      EMSCCC = CETOT(5)
      EMSACT = CETOT(6)
      EMSCCT = CETOT(7)
      EMSNCT = CETOT(8)
      EMSREF = EMSCCT
      DELTDK = EMSTDK - EMSNCT
      DELSDT = EMSSDT - EMSREF
CSN   DELSDT = EMSSDT - EMSNCT
      DELCCC = EMSCCC - EMSACT
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = EMPINF + DELTDK + DELSDT + DELCCC
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0MS   = EREF       + SOVAL
       E298MS = EREF + ETH + SOVAL
       HMS    = EREF + HTH + SOVAL
       GMS    = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0MS   = EREF +            ZPESCL
       E298MS = EREF + ETH -CXZPE+ZPESCL
       HMS    = EREF + HTH -CXZPE+ZPESCL
       GMS    = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9615) EMSDFT,EMSCCT,EMSACT,EMSACQ,EMSTDK,EMSSDT,
     *        EMSCCC,EMSNCT,DELSDT,DELCCC,DELTDK,EMPINF,ZPESCL,
     *        ETH,SCLZPE1,HTH,GTH,E0MS,E298MS,HMS,GMS
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CCCCAS4,CNUTRL,E0MS,HMS,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 8000 FORMAT(2X,'CCXZPE= ',F13.9,
     *      /2X,'CXETH= ',F13.9,
     *      /2X,'CXHTH= ',F13.9,
     *      /2X,'CXGTH= ',F13.9)
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'ccCA-S4 CALCULATIONS',
     *       19X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) B3LYP/6-31G(2DF,P) ',
     *      ' OPTIMIZATION AND HESSIAN',/5X,50(1H-))
 9015 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) MP2/ACCQ ',
     *      /5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) MP2/CCT-DK',
     *      /5X,50(1H-))
 9025 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) CCSD(T)/CCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) MP2/ACCTC',
     *      /5X,50(1H-))
 9035 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(6) MP2/ACCT',
     *      /5X,50(1H-))
 9040 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(7) MP2/CCT',
     *      /5X,50(1H-))
 9045 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(8) MP2/NCT',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF ccCA-S4 CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(ccCA-S4)@0K = E(MP2/INF) + DE(DK) + ',
     *           'DE(SDT) + DE(ACCTC) + ZPE(SCALED)',
     *       /4X,'E(ccCA-S4)@298K = E(ccCA-S4)@0K+(E(THERMAL)-ZPE)',
     *       /4X,'H(ccCA-S4)      = E(ccCA-S4)@298K + KT',
     *       /4X,'G(ccCA-S4)      = H(ccCA-S4) - TDS',
     *      //8X,'E(MP2/INF) = ',
     *           'CBS EXTRAPOLATION FOR E(MP2/ACCT) AND E(MP2/ACCQ)',
     *       /8X,'DE(DK)     = E(MP2/CCT-DK) - ',
     *           'E(MP2(NCT))',
     *       /8X,'DE(SDT)    = E(CCSD(T)/CCT) - ',
     *           'E(MP2(CCT))',
     *       /8X,'DE(ACCTC)  = E(MP2/ACCTC) - ',
     *           'E(MP2/ACCT)')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF ccCA-S4 CALCULATIONS',
     */4X,64(1H-),
     */4X,'B3LYP/6-31G(2DF,P)=',F13.6,3X,'MP2/CCT            =',F13.6,
     */4X,'MP2/ACCT          =',F13.6,3X,'MP2/ACCQ           =',F13.6,
     */4X,'MP2/CCT-DK        =',F13.6,3X,'CCSD(T)/CCT        =',F13.6,
     */4X,'MP2/ACCTC         =',F13.6,3X,'MP2/NCT            =',F13.6,
     */4X,'DE(SDT)           =',F13.6,3X,'DE(ACCTC)          =',F13.6,
     */4X,'DE(DK)            =',F13.6,
     */4X,'MP2(CBS)          =',F13.6,3X,'ZPE,DFT            =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'ZPE SCALE FACTOR   =',F13.6,
     */4X,'THERMAL ENTHALPY  =',F13.6,3X,'FREE ENERGY        =',F13.6,
     */4X,64(1H-),
     */4X,'E(ccCA-S4) @ 0K   =',F13.6,3X,'E(ccCA-S4) @298K   =',F13.6,
     */4X,'H(ccCA-S4)        =',F13.6,3X,'G(ccCA-S4)         =',F13.6,
     */4X,64(1H-))
C9800 FORMAT(/4X,64(1H-),/10X,'RESULTS ARE SUSPECT',
C    * /10X,'THERE IS NO UHF CCSD(T) CODED CURRENTLY IN GAMESS',
C    *   /10X,'THE MULTIPLICITY IS NOT A SINGLET !!',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK CCCACCLX
C> @brief    SET ccCA-CCL METHOD PARAMETERS AND RESULTS
C> @details  SET ccCA-CCL METHOD PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE CCCACCLX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR,CCSCF,CZPSCL,
     *          CXETH,CXHTH,CXGTH,CCXZPE,
     *          CXTRAP)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CCCCACCL
C
C     ----- ccCA-CCL PARAMETERS -----
C     OPTIMIZATION AND HESSIAN:
C      B3LYP/6-31G(2df,p)
C     SINGLE POINT CALCULATIONS:
C      MP2/ACCQ
C      MP2/CCT-DK
C      MP2/ACCT
C      CR-CCL(2,3)/CCT
C      MP2/ACCTC
C      MP2/CCT (IF ROHF OR NAT=1)
C      MP2/NCT
C
C     SCALING NOT KNOWN YET
C
      PARAMETER (SCLZPE1=0.9854D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
CSN   DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CSCALE(NCOM),
     *  CESCF(NCOM),CECOR(NCOM),CCSCF(NCOM),CENMPN(NCOM),
     *  CCORR(NCOM),IEXTRP(NCOM),CENCCS(NCOM),CENDFT(NCOM),
     *  CENCCM(NCOM),CENCIT(NCOM),ICENCA(NCOM),ICENCB(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
      DATA BASN31/8HN31     /
      DATA CCCCACCL/'CCCCACCL'/
      DATA CRCCL   /8HCR-CCL  /
      DATA B3LYP   /8HB3LYP   /
      DATA BASCCT  /8HCCT     /
      DATA BASNCT  /8HNCT     /
      DATA BASACT  /8HACCT    /
      DATA BASACQ  /8HACCQ    /
      DATA BACACT  /8HACCTC   /
      DATA DK      /8HDK      /
      DATA ROHF    /8HROHF    /
CSN   DATA ZAPT,RMP,UMP/8HZAPT    ,8HRMP     ,8HUMP     /
      DATA RMP/8HRMP     /
C
CSN   DATA NCOR /2*0,
CSN  *             2*1,                  6*1,
CSN  *             2*5,                  6*5,
CSN  *             2*9,          10*9,   6*14,
CSN  *             2*18,         10*18,  6*23,
CSN  *             2*27,  14*27, 10*34,  6*39,
CSN  *             2*43,  14*43,    50/
C
C IENREF=3 IS CHOSEN ARBITRARILY AS REFERENCE SHOULD BE E(CBS)
C RHF SETUP (ROHF AND NAT=1 CORRECTIONS ARE BELOW):
C$COMP
C IOP=1, IHS=1, IENE=6, ICALC=3, IENREF=6, CZPSCL=0.9854,
C CXTRAP=S4, IEXTRP(1)=2,6, CHEATS=CCCACCL,
C CDFTTP(1)=B3LYP,
C CCCTYP(4)=                CR-CCL,
C ICMPLV(2)=      2   ,2   ,0     ,2     ,2    ,2   ,2,
C CGBASS(1)=N31  ,ACCQ,CCT ,CCT   ,ACCTC ,ACCT ,CCT ,NCT,
C CSCALE(3)=           DK,
C ICNGSS(1)=6,
C ICNDFC(1)=2,
C ICNFFC(1)=1,
C ICNPFC(1)=1,
C ICENCA(1)=3,4,5,
C ICENCB(1)=7,7,6,
C ICISPH(2)=1,1,1,1,1,1,1,
C ICNACR(5)=0, VARIES W/ AL-AR ATOM CONTENT
C ICNBCR(5)=0  VARIES W/ AL-AR ATOM CONTENT
C$END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      N    = 0
      NN   = 0
      NUCZ = 0
      IOP  = 1
      IHS  = 1
      IENE = 7
      OSPT = RMP
      IF(NAT.EQ.1) NUCZ = INT(ZAN(1))
C
      CDFTTP(1) = B3LYP
      ICMPLV(2) = 2
      ICMPLV(3) = 2
      CCCTYP(4) = CRCCL
      ICMPLV(5) = 2
      ICMPLV(6) = 2
      ICMPLV(7) = 2
      ICMPLV(8) = 2
      CGBASS(1) = BASN31
      CGBASS(2) = BASACQ
      CGBASS(3) = BASNCT
CSN   CGBASS(4) = BASNCT
      CGBASS(4) = BASCCT
      CGBASS(5) = BACACT
      CGBASS(6) = BASACT
      CGBASS(7) = BASCCT
      CGBASS(8) = BASNCT
      CSCALE(3) = DK
CSN   IF(MUL.EQ.1) CCSCF(4) = RHF
      CCSCF(4) = ROHF
      ICNGSS(1) = 6
      ICNDFC(1) = 2
      ICNFFC(1) = 1
      ICNPFC(1) = 1
      DO N = 1,NAT
       NUCZ = INT(ZAN(N))
       IF(NUCZ.GE.13 .AND. NUCZ.LE.18) NN = NN + 1
      END DO
      ICNACR(5) = NN
      ICNBCR(5) = NN
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      ICISPH(5) = 1
      ICISPH(6) = 1
      ICISPH(7) = 1
      ICISPH(8) = 1
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      ICHARG  = 0
      IZATM   = 0
      E0MS    = ZERO
      E298MS  = ZERO
      HMS     = ZERO
      GMS     = ZERO
      DELTDK  = ZERO
      DELCCL  = ZERO
      DELACC  = ZERO
      EREF    = ZERO
      EMSREF  = ZERO
      EMSACT  = ZERO
      EMSACQ  = ZERO
      EMSTDK  = ZERO
      EMSCCL  = ZERO
      EMSACC  = ZERO
      EMSCCT  = ZERO
      EMSNCT  = ZERO
      EMPINF  = ZERO
      SOVAL   = ZERO
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      END IF

      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
         IF(CXETH.NE.ZERO) ETH=CXETH
         IF(CXHTH.NE.ZERO) HTH=CXHTH
         IF(CXGTH.NE.ZERO) GTH=CXGTH
         IF(CCXZPE.NE.ZERO) THEN
           IF(CZPSCL.NE.ZERO) THEN
            ZPESCL = CCXZPE*CZPSCL
            CXZPE  = ZPESCL/CZPSCL
           ELSE
            ZPESCL = CCXZPE
            CXZPE  = ZPESCL/SCLZPE1
           END IF
         ENDIF
      END IF
C
      WRITE(6,8000) ZPESCL,ETH,HTH,GTH
      WRITE(6,*)'$DATA'
      WRITE(6,*)
      WRITE(6,*)'C1'
       CALL PRATM(IW,1)
      WRITE(6,*)'$END'
C
      WRITE(IW,9000)
      WRITE(IW,9010)
      WRITE(IW,9015)
      WRITE(IW,9020)
      WRITE(IW,9025)
      WRITE(IW,9030)
      WRITE(IW,9035)
      WRITE(IW,9040)
      WRITE(IW,9045)
C
C     --- COMPLETE BASIS SET EXTRAPOLATION ---
C
C     EMSCF = (6561.0D+00/4160.0D+00)*CESCF(2)
C    *       -(2401.0D+00/4160.0D+00)*CESCF(6)
C     EMCOR = (6561.0D+00/4160.0D+00)*CECOR(2)
C    *       -(2401.0D+00/4160.0D+00)*CECOR(6)
C     EMPINF = EMSCF + EMCOR
      EMPINF =(6561.0D+00/4160.0D+00)*CETOT(2)
     *       -(2401.0D+00/4160.0D+00)*CETOT(6)
C
      EMSDFT = CETOT(1)
      EMSACQ = CETOT(2)
      EMSTDK = CETOT(3)
      EMSCCL = CETOT(4)
      EMSACC = CETOT(5)
      EMSACT = CETOT(6)
      EMSCCT = CETOT(7)
      EMSNCT = CETOT(8)
      EMSREF = EMSCCT
      DELTDK = EMSTDK - EMSNCT
      DELCCL = EMSCCL - EMSREF
      DELACC = EMSACC - EMSACT
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = EMPINF + DELTDK + DELCCL + DELACC
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0MS   = EREF       + SOVAL
       E298MS = EREF + ETH + SOVAL
       HMS    = EREF + HTH + SOVAL
       GMS    = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0MS   = EREF +            ZPESCL
       E298MS = EREF + ETH -CXZPE+ZPESCL
       HMS    = EREF + HTH -CXZPE+ZPESCL
       GMS    = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9615) EMSDFT,EMSCCT,EMSACT,EMSACQ,EMSTDK,EMSCCL,
     *         EMSACC,EMSNCT,DELCCL,DELACC,DELTDK,EMPINF,ZPESCL,
     *         ETH,SCLZPE1,HTH,GTH,E0MS,E298MS,HMS,GMS
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CCCCACCL,CNUTRL,E0MS,HMS,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 8000 FORMAT(2X,'CCXZPE= ',F13.9,
     *      /2X,'CXETH= ',F13.9,
     *      /2X,'CXHTH= ',F13.9,
     *      /2X,'CXGTH= ',F13.9)
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'ccCA-CCL CALCULATIONS',
     *       13X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) B3LYP/6-31G(2DF,P) ',
     *      ' OPTIMIZATION AND HESSIAN',/5X,50(1H-))
 9015 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) MP2/ACCQ ',
     *      /5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) MP2/CCT-DK',
     *      /5X,50(1H-))
 9025 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) CR-CC(2,3)/CCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) MP2/ACCTC',
     *      /5X,50(1H-))
 9035 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(6) MP2/ACCT',
     *      /5X,50(1H-))
 9040 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(7) MP2/CCT',
     *      /5X,50(1H-))
 9045 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(8) MP2/NCT',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF ccCA-CCL CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(ccCA-CCL)@0K   = E(MP2/INF) + DE(DK) + ',
     *           'DE(CCL) + DE(ACCTC) + ZPE(SCALED)',
     *       /4X,'E(ccCA-CCL)@298K=E(ccCA-CCL)@0K+(E(THERMAL)-ZPE)',
     *       /4X,'H(ccCA-CCL)      = E(ccCA-CCL)@298K + KT',
     *       /4X,'G(ccCA-CCL)      = H(ccCA-CCL) - TDS',
     *      //8X,'E(MP2(INF)) = ',
     *           'CBS EXTRAPOLATION FOR E(MP2/ACCT) AND E(MP2/ACCQ)',
     *       /8X,'DE(DK)      = E(MP2/CCT-DK) - ',
     *           'E(MP2/CCT)',
     *       /8X,'DE(CCL)     = E(CR-CC(2,3)/CCT) - ',
     *           'E(MP2/CCT)',
     *       /8X,'DE(ACCTC)   = E(MP2/ACCTC) - ',
     *           'E(MP2/ACCT)')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF ccCA-CCL CALCULATIONS',
     */4X,64(1H-),
     */4X,'B3LYP/6-31G(2DF,P)=',F13.6,3X,'MP2/CCT           =',F13.6,
     */4X,'MP2/ACCT          =',F13.6,3X,'MP2/ACCQ          =',F13.6,
     */4X,'MP2/CCT-DK        =',F13.6,3X,'CCL/CCT           =',F13.6,
     */4X,'MP2/ACCTC         =',F13.6,3X,'MP2/NCT           =',F13.6,
     */4X,'DE(CCL)           =',F13.6,3X,'DE(ACCTC)         =',F13.6,
     */4X,'DE(DK)            =',F13.6,
     */4X,'MP2(CBS)          =',F13.6,3X,'ZPE,DFT           =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'ZPE SCALE FACTOR  =',F13.6,
     */4X,'THERMAL ENTHALPY  =',F13.6,3X,'FREE ENERGY       =',F13.6,
     */4X,64(1H-),
     */4X,'E(ccCA-CCL) @ 0K  =',F13.6,3X,'E(ccCA-CCL) @298K =',F13.6,
     */4X,'H(ccCA-CCL)       =',F13.6,3X,'G(ccCA-CCL)       =',F13.6,
     */4X,64(1H-))
C9800 FORMAT(/4X,64(1H-),/10X,'RESULTS ARE SUSPECT',
C    * /10X,'THERE IS NO UHF CCSD(T) CODED CURRENTLY IN GAMESS',
C    *   /10X,'THE MULTIPLICITY IS NOT A SINGLET !!',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK CCCASX
C> @brief    SET ccCA-S METHOD PARAMETERS AND RESULTS
C> @details  SET ccCA-S METHOD PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE CCCASX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CCMP2,IDOPCM,CNUTRL,CSCALE,
     *          CESCF,CECOR)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CCCCAS
C
C     ----- ccCA-S PARAMETERS -----
C     OPTIMIZATION AND HESSIAN:
C      B3LYP/6-31G(2df,p)
C      HF(PCM)/6-31G(2df,p)
C     SINGLE POINT CALCULATIONS:
C      MP2/ACCT
C      MP2/ACCQ
C      MP2/ACCT-DK
C      CR-CCL(2,3)/ACCT
C      MP2/ACCTC
C
C     SCALING NOT KNOWN YET
C
      PARAMETER (SCLZPE1=0.9854D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
CSN   DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),IDOPCM(NCOM),CSCALE(NCOM),
     *  CESCF(NCOM),CENMPN(NCOM),CENCCS(NCOM),CENDFT(NCOM),
     *  CENCCM(NCOM),CENCIT(NCOM),ICENCA(NCOM),ICENCB(NCOM),
     *  CCORR(NCOM),IEXTRP(NCOM),CECOR(NCOM),CCSCF(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
CSN   DATA BASN31,CCSDT/8HN31     ,8HCCSD(T) /
      DATA BASN31  /8HN31     /
      DATA CRCCL   /8HCR-CCL  /
CSN   DATA CCCCAS4 /8HCCCCAS4 /
      DATA B3LYP   /8HB3LYP   /
      DATA BASACT  /8HACCT    /
      DATA BASACQ  /8HACCQ    /
      DATA BACACT  /8HACCTC   /
      DATA DK      /8HDK      /
C
CSN   DATA NCOR /2*0,
CSN  *             2*1,                  6*1,
CSN  *             2*5,                  6*5,
CSN  *             2*9,          10*9,   6*14,
CSN  *             2*18,         10*18,  6*23,
CSN  *             2*27,  14*27, 10*34,  6*39,
CSN  *             2*43,  14*43,    50/
C
C$COMP
C IOP=2, IHS=2, IENE=4, ICALC=3, IENREF=7, CZPSCL=0.9854,
C CXTRAP=S4, IEXTRP(1)=3,7,
C CDFTTP(1)=B3LYP,
C CCCTYP(5)=                       CR-CCL,
C ICMPLV(3)=            2   ,2    ,0     ,2,
C CGBASS(1)=N31  ,N31  ,ACCQ,ACCT ,ACCT  ,ACCTC,
C CSCALE(4)=                 DK,
C ICNGSS(1)=6    ,6,
C ICNDFC(1)=2    ,2,
C ICNFFC(1)=1    ,1,
C ICNPFC(1)=1    ,1,
C ICENCA(1)=4,5,6,
C ICENCB(1)=7,7,7,
C ICISPH(3)=            1   ,1    ,1     ,1,
C ICNACR(6)=0,
C ICNBCR(6)=0
C IDOPCM(2)=1
C$END
C$PCM SOLVNT=WATER $END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IOP  = 2
      IHS  = 1
      IENE = 4
C
      CDFTTP(1) = B3LYP
      ICMPLV(3) = 2
      ICMPLV(4) = 2
      CCCTYP(5) = CRCCL
      ICMPLV(6) = 2
      CGBASS(1) = BASN31
      CGBASS(2) = BASN31
      CGBASS(3) = BASACQ
      CGBASS(4) = BASACT
      CGBASS(5) = BASACT
      CGBASS(6) = BACACT
      CSCALE(4) = DK
      ICNGSS(1) = 6
      ICNDFC(1) = 2
      ICNFFC(1) = 1
      ICNPFC(1) = 1
      ICNGSS(2) = 6
      ICNDFC(2) = 2
      ICNFFC(2) = 1
      ICNPFC(2) = 1
      ICNACR(6) = 0
      ICNBCR(6) = 0
      ICISPH(3) = 1
      ICISPH(4) = 1
      ICISPH(5) = 1
      ICISPH(6) = 1
      IDOPCM(2) = 1
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      WRITE(IW,9000)
      WRITE(IW,9005)
      WRITE(IW,9010)
      WRITE(IW,9015)
      WRITE(IW,9020)
      WRITE(IW,9025)
      WRITE(IW,9030)
C
      ICHARG  = 0
      IZATM   = 0
      E0MS    = ZERO
      E298MS  = ZERO
      HMS     = ZERO
      GMS     = ZERO
      DELTDK  = ZERO
      DELCCL  = ZERO
      DELACC  = ZERO
      EREF    = ZERO
      EMSREF  = ZERO
      EMSACT  = ZERO
      EMSACQ  = ZERO
      EMSTDK  = ZERO
      EMSCCL  = ZERO
      EMSACC  = ZERO
      EMPINF  = ZERO
      SOVAL   = ZERO
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      END IF

      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
      END IF
C
C     --- COMPLETE BASIS SET EXTRAPOLATION ---
C-----NOTE: CETOT(7) IS THE MP2 CALCULATION FROM
C     CR-CC(2,3)/ACCT SINGLE POINT CALCULATION
C
      EMSACT = CETOT(7)
      EMSACQ = CETOT(3)
      EMPINF = (6561.0D+00/4160.0D+00)*EMSACQ
     *        -(2401.0D+00/4160.0D+00)*EMSACT
C
      EMSREF = EMSACT
      EMSTDK = CETOT(4)
      EMSCCL = CETOT(5)
      EMSACC = CETOT(6)
      DELTDK = EMSTDK - EMSREF
      DELCCL = EMSCCL - EMSREF
      DELACC = EMSACC - EMSREF
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = EMPINF + DELTDK + DELCCL + DELACC
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0MS   = EREF       + SOVAL
       E298MS = EREF + ETH + SOVAL
       HMS    = EREF + HTH + SOVAL
       GMS    = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0MS   = EREF +            ZPESCL
       E298MS = EREF + ETH -CXZPE+ZPESCL
       HMS    = EREF + HTH -CXZPE+ZPESCL
       GMS    = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9615) CETOT(2),CETOT(1),EMSACT,EMSACQ,EMSTDK,EMSCCL,
     *                  EMSACC,DELTDK,DELCCL,DELACC,ZPESCL,ETH,SCLZPE1,
     *                  HTH,GTH,E0MS,E298MS,HMS,GMS
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CCCCAS,CNUTRL,E0MS,HMS,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
        write(6,*)'heats of formation not ready'
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'ccCA-S CALCULATIONS',
     *       15X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9005 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) B3LYP/6-31G(2DF,P) ',
     *      ' OPTIMIZATION AND HESSIAN',/5X,50(1H-))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) HF(PCM)/6-31G(2DF,P) ',
     *      ' OPTIMIZATION',/5X,50(1H-))
 9015 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) MP2/ACCQ ',
     *      /5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) MP2/ACCT-DK',
     *      /5X,50(1H-))
 9025 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) CR-CC(2,3)/ACCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(6) MP2/ACCTC',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF ccCA-S CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(ccCA-S)@0K   = E(MP2(INF)) + DE(DK) + ',
     *           'DE(CCL) + DE(ACCTC) + ZPE(SCALED)',
     *       /4X,'E(ccCA-S)@298K = E(ccCA-S)@0K + (E(THERMAL) - ZPE)',
     *       /4X,'H(ccCA-S)      = E(ccCA-S)@298K + KT',
     *       /4X,'G(ccCA-S)      = H(ccCA-S) - TDS',
     *      //8X,'E(MP2(INF)) = ',
     *           'CBS EXTRAPOLATION FOR E(MP2/ACCT) AND E(MP2/ACCQ)',
     *       /8X,'DE(DK)      = E(MP2/ACCT-DK) - ',
     *           'E(MP2(INF))',
     *       /8X,'DE(CCL)     = E(CR-CC(2,3)/ACCT) - ',
     *           'E(MP2(INF))',
     *       /8X,'DE(ACCTC)   = E(MP2/ACCTC(FULL CORE)) - ',
     *           'E(MP2(INF)')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF ccCA-S CALCULATIONS',
     */4X,64(1H-),
     */4X,'HF(PCM)/6-31G(2DF,P)',33X,'=',F13.6,
     */4X,'B3LYP/6-31G(2DF,P)=',F13.6,3X,'MP2/ACCT          =',F13.6,
     */4X,'MP2/ACCQ          =',F13.6,3X,'MP2/ACCT-DK       =',F13.6,
     */4X,'CR-CC(2,3)/ACCT   =',F13.6,3X,'MP2/ACCTC         =',F13.6,
     */4X,'DE(DK)            =',F13.6,3X,'DE(CCL)           =',F13.6,
     */4X,'DE(ACCTC)',44X,'=',F13.6,
     */4X,'ZPE,B3LYP/6-31G(2DF,P)',31X,'=',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'ZPE SCALE FACTOR  =',F13.6,
     */4X,'THERMAL ENTHALPY  =',F13.6,3X,'FREE ENERGY       =',F13.6,
     */4X,64(1H-),
     */4X,'E(ccCA-S) @ 0K    =',F13.6,3X,'E(ccCA-S) @298K   =',F13.6,
     */4X,'H(ccCA-S)         =',F13.6,3X,'G(ccCA-S)         =',F13.6,
     */4X,64(1H-))
C9800 FORMAT(/4X,64(1H-),/10X,'RESULTS ARE SUSPECT',
C    * /10X,'THERE IS NO OPEN SHELL CCSD(T) CODED CURRENTLY IN GAMESS',
C    *   /10X,'THE MULTIPLICITY IS NOT A SINGLET !!',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK G4MX
C> @brief    SET G4(MP2) PARAMETERS AND RESULTS
C> @details  SET G4(MP2) PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE G4MX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CESCF,CCSCF,CCMP2,CNUTRL)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CG4MP2
C
C     ----- G4(MP2) PARAMETERS -----
C      BUN CHAN, JIA DENG, LEO RADOM,
C      "G4(MP2)-6X: A COST-EFFECTIVE IMPROVEMENT TO G4(MP2)",JCTC
C
      PARAMETER (SCLZPE1=0.9854D+00)
      PARAMETER (HLCA=9.472D-03,HLCAP=9.769D-03,
     *           HLCB=3.179D-03,HLCC=9.741D-03,
     *           HLCD=2.115D-03)
C---  PARAMETER (HLCE=2.379D-03)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
      DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),CCSCF(NCOM),CESCF(NCOM),
     *  CENMPN(NCOM),CENCCS(NCOM),CENDFT(NCOM),CENCCM(NCOM),
     *  CENCIT(NCOM),ICENCA(NCOM),ICENCB(NCOM),CCORR(NCOM),
     *  IDOPCM(NCOM),CSCALE(NCOM),IEXTRP(NCOM),CECOR(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
      DATA BASN31,BASG3LX,CCSDT/8HN31     ,8HG3LX    ,8HCCSD(T) /
      DATA CG4MP2/'CG4MP2  '/
      DATA BASACT  /8HACCT    /
      DATA BASACQ  /8HACCQ    /
CSN   DATA ROHF    /8HROHF    /
      DATA RHF     /8HRHF     /
      DATA B3LYP   /8HB3LYP   /
C
      DATA NCOR /2*0,
     *             2*1,                  6*1,
     *             2*5,                  6*5,
     *             2*9,          10*9,   6*14,
     *             2*18,         10*18,  6*23,
     *             2*27,  14*27, 10*34,  6*39,
     *             2*43,  14*43,    50/
C
C RHF SETUP (ROHF AND NAT=1 CORRECTIONS BELOW):
C$COMP
C iop=1, ihs=1, iene=5, icalc=2, ienref=6,
C cenhlc={input HLC value}, czpscl=0.9854,cheats=g4mp2,
C cxtrap=hfcbs,
C cdfttp(1)=b3lyp,
C icmplv(5)=2,
C icmplv(6)=2,
C ccctyp(7)=ccsd(t),
C icisph(2)=1,
C icisph(3)=1,
C icisph(4)=1,
C icisph(5)=1,
C cgbass(1)=n31,acct,accq,g3l,g3l,n31,n31,
C icngss(1)=6,0,0,0,0,6,6,
C icndfc(1)=2,
C icnffc(1)=1,
C icndfc(1)=1
C icndfc(6)=1,
C icndfc(7)=1,
C$END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CZPSCL = 1.0D+00
      CXETH  = 0.0D+00
      CXHTH  = 0.0D+00
      CXGTH  = 0.0D+00
      CCXZPE = 0.0D+00
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      IOP  = 1
      IHS  = 1
      IENE = 6
C
      CDFTTP(1) = B3LYP
      ICMPLV(5) = 2
      ICMPLV(6) = 2
      CCCTYP(7) = CCSDT
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      ICISPH(5) = 1
      CGBASS(1) = BASN31
      CGBASS(2) = BASACT
      CGBASS(3) = BASACQ
      CGBASS(4) = BASG3LX
      CGBASS(5) = BASG3LX
      CGBASS(6) = BASN31
      CGBASS(7) = BASN31
      ICNGSS(1) = 6
      ICNGSS(6) = 6
      ICNGSS(7) = 6
      ICNDFC(1) = 1
      ICNDFC(6) = 1
      ICNDFC(7) = 1
      IF(MUL.GT.1) CCSCF(7)=RHF
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      ICHARG  = 0
      IZATM   = 0
      E0G4M   = ZERO
      E298G4M = ZERO
      HG4M    = ZERO
      GG4M    = ZERO
      DELMPX  = ZERO
      DELSDT  = ZERO
      EREF    = ZERO
CSN   ENREF   = ZERO
      ENDFT   = ZERO
      ENACT   = ZERO
      ENACQ   = ZERO
      ENHFX   = ZERO
      ENMPX   = ZERO
      ENMP6   = ZERO
      ENSDT   = ZERO
CSN   ENSCF   = ZERO
CSN   ENCOR   = ZERO
      ENINF   = ZERO
      SOVAL   = ZERO
C
      WRITE(IW,9000)
      IF(MUL.NE.1) THEN
       WRITE(IW,9800)
       WRITE(IW,9005)
C      CALL ABRT
      END IF
      WRITE(IW,9010)
      WRITE(IW,9020)
      WRITE(IW,9030)
      WRITE(IW,9040)
      WRITE(IW,9050)
      WRITE(IW,9060)
      WRITE(IW,9070)
C
      ENDFT  = CETOT(1)
      ENACT  = CETOT(2)
      ENACQ  = CETOT(3)
      ENHFX  = CETOT(4)
      ENMPX  = CETOT(5)
      ENMP6  = CETOT(6)
      ENSDT  = CETOT(7)
C
      ITHAT = 0
      NCORT = 0
      DO I=1,NAT
         ITHAT = INT(ZAN(I))
         NCORT = NCORT + NCOR(ITHAT)
      END DO
      NAVAL = NA - NCORT
      NBVAL = NB - NCORT
C
C     ----- HIGH LEVEL CORRECTIONS -----
C
      IF(NAT.EQ.1) THEN
         FUDGE  = -HLCC*NBVAL - HLCD*(NAVAL-NBVAL)
         ICHARG = ICH
         IZATM  = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
      ELSE IF(NAT.NE.1 .AND. MUL.EQ.1) THEN
         FUDGE = -HLCA*NBVAL
      ELSE IF(NAT.NE.1 .AND. MUL.GT.1) THEN
         FUDGE = -HLCAP*NBVAL - HLCB*(NAVAL-NBVAL)
CSN?  ELSE IF(NAT.NE.1 .AND. MUL.EQ.1 .AND. NE.EQ.2) THEN
CSN?     FUDGE = -HLCE*NBVAL
      END IF
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
         IF(CXETH.NE.ZERO) ETH=CXETH
         IF(CXHTH.NE.ZERO) HTH=CXHTH
         IF(CXGTH.NE.ZERO) GTH=CXGTH
         IF(CCXZPE.NE.ZERO) THEN
           IF(CZPSCL.NE.ZERO) THEN
            ZPESCL = CCXZPE*CZPSCL
            CXZPE  = ZPESCL/CZPSCL
           ELSE
            ZPESCL = CCXZPE
            CXZPE  = ZPESCL/SCLZPE1
           END IF
         ENDIF
      END IF
C
      WRITE(6,8000) ZPESCL,ETH,HTH,GTH
      WRITE(6,*)'$DATA'
      WRITE(6,*)
      WRITE(6,*)'C1'
       CALL PRATM(IW,1)
      WRITE(6,*)'$END'
C
C     --- COMPLETE BASIS SET EXTRAPOLATION ---
C
      ENINF = (CETOT(3)-CETOT(2)*dble(EXP(-1.63)))/dble(1-EXP(-1.63))
C
C     --- CORRELATION ENERGIES ---
C
      DELMPX = ENMPX - ENHFX
      DELSDT = (ENSDT-CESCF(7)) - (ENMP6-CESCF(6))
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      EREF   = ENINF + DELMPX + DELSDT + FUDGE
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0G4M  = EREF       + SOVAL
       E298G4M= EREF + ETH + SOVAL
       HG4M   = EREF + HTH + SOVAL
       GG4M   = EREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0G4M  = EREF +            ZPESCL
       E298G4M= EREF + ETH -CXZPE+ZPESCL
       HG4M   = EREF + HTH -CXZPE+ZPESCL
       GG4M   = EREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         IF(NAT.EQ.1) THEN
            WRITE(IW,9610) HLCC,HLCD
         ELSE IF(MUL.EQ.1) THEN
            WRITE(IW,9611) HLCA
         ELSE IF(MUL.GT.1) THEN
            WRITE(IW,9612) HLCAP,HLCB
         END IF
         WRITE(IW,9615) ENDFT,ENACT,ENINF,ENACQ,ENMP6,ENSDT,ENHFX,
     *           ENMPX,DELMPX,DELSDT,ZPESCL,SCLZPE1,
     *           FUDGE,GTH,ETH,HTH,E0G4M,E298G4M,HG4M,GG4M
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C     LET:
      E0 = E0G4M
      H  = HG4M
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CG4MP2,CNUTRL,E0,H,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 8000 FORMAT(2X,'CCXZPE= ',F13.9,
     *      /2X,'CXETH= ',F13.9,
     *      /2X,'CXHTH= ',F13.9,
     *      /2X,'CXGTH= ',F13.9)
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'G4(MP2) CALCULATIONS',
     *       5X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9005 FORMAT(/5X,'****G4(MP2) NOT EXPLICITLY IMPLEMENTED FOR UHF OPEN-',
     *      'SHELLS ******'//,5X,'GAMESS USES THE CR-CC(2,3) VERSION',/
     *      ' OF OPEN SHELL CCSD(T)',/)
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) B3LYP OPTIMIZATION',
     *      ' AND HESSIAN',/5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) HF/ACCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) HF/ACCQ',
     *      /5X,50(1H-))
 9040 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) HF/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9050 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) MP2/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9060 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(6) MP2/6-31G(D)',
     *      /5X,50(1H-))
 9070 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(7) CCSD(T)/6-31G(D)',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF G4(MP2) CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(G4(MP2))@0K   = E(INF) + DE(MP2) + DE(CCSD(T)) + ',
     *       'ZPE(SCALED) + HLC',
     *       /4X,'E(G4(MP2))@298K = E(G4(MP2))@0K + (E(THERMAL) - ZPE)',
     *       /4X,'H(G4(MP2))      = E(G4(MP2))@298K + KT',
     *       /4X,'G(G4(MP2))      = H(G4(MP2)) - TDS',
     *   //8X,'E(CCSD(T))  = CCSD(T)/6-31G(D)//B3LYP/6-31G(2DF,P) ',
     *           'FROZEN CORE',
     *    /8X,'DE(MP2)     = E(MP2/G3MP2LARGEXP) - ',
     *           'E(HF/G3MP2LARGEXP) FROZEN CORE',
     *    /8X,'DE(CCSD(T)) = E(CCSD(T)/6-31G(D)) - ',
     *           'E(MP2/6-31G(D)) FROZEN CORE',
     *    /8X,'DE(CCSD(T)) USES CORRELATIONS ENERGY VALUES',
     *    /8X,'GEOMETRY B3LYP/6-31G(2DF,P) CORE CORRELATION INCLUDED')
 9610 FORMAT(8X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'B3LYP/6-31G(2DF,P)',
     *       /8X,'HLCS USED ARE:  C = ',F8.6,'     D = ',F8.6,
     *           ' HARTREE')
 9611 FORMAT(8X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'B3LYP/6-31G(2DF,P)',
     *       /8X,'HLCS USED ARE:  A = ',F8.6,
     *           ' HARTREE')
 9612 FORMAT(8X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'B3LYP/6-31G(2DF,P)',
     *       /8X,'HLCS USED ARE:  AP = ',F8.6,'    B = ',F8.6,
     *           ' HARTREE')
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF G4(MP2) CALCULATIONS',
     */4X,64(1H-),
     */4X,'B3LYP/6-31G(2DF,P)=',F13.6,3X,'HF/ACCT          =',F13.6,
     */4X,'HF/CBS            =',F13.6,3X,'HF/ACCQ          =',F13.6,
     */4X,'MP2/6-31G(D)      =',F13.6,3X,'CCSD(T)/6-31G(D) =',F13.6,
     */4X,'HF/G3MP2LARGEXP   =',F13.6,3X,'MP2/G3MP2LARGEXP =',F13.6,
     */4X,'DE(MP2)           =',F13.6,3X,'DE(CCSD(T))      =',F13.6,
     */4X,'ZPE(B3LYP)        =',F13.6,3X,'ZPE SCALE FACTOR =',F13.6,
     */4X,'HLC               =',F13.6,3X,'FREE ENERGY      =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'THERMAL ENTHALPY =',F13.6,
     */4X,64(1H-),
     */4X,'E(G4(MP2)) @ 0K   =',F13.6,3X,'E(G4(MP2)) @298K =',F13.6,
     */4X,'H(G4(MP2))        =',F13.6,3X,'G(G4(MP2))       =',F13.6,
     */4X,64(1H-))
 9800 FORMAT(/4X,64(1H-),/10X,'RESULTS HAVE THE CAVEAT THAT',
     * /10X,'THERE IS NO UCCSD(T) CODED CURRENTLY IN GAMESS',
     *   /10X,'**THE MULTIPLICITY IS NOT A SINGLET**',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END
C
C*MODULE COMP  *DECK G4M6XX
C> @brief    SET G4(MP2)-6X PARAMETERS AND RESULTS
C> @details  SET G4(MP2)-6X PARAMETERS AND RESULTS
C> @author   Sean Nedd, ISU, between 2008 and 2011
C
      SUBROUTINE G4M6XX(NMET,IOP,IHS,IENE,
     *          CDFTTP,ICMPLV,CCCTYP,
     *          CCITYP,ICISPH,CGBASS,ICNGSS,
     *          ICNDFC,ICNFFC,ICNPFC,CDFFSP,
     *          CDIFFS,CPOLAR,CEXTFL,ICNACR,
     *          ICNBCR,ICNCOR,ICNDER,CETOT,
     *          CESCF,CCSCF,CCMP2,CNUTRL)
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      CHARACTER*8 CG4M6X
      LOGICAL CNVR
C
C     ----- G4(MP2)-6X PARAMETERS -----
C      BUN CHAN, JIA DENG, LEO RADOM,
C      "G4(MP2)-6X: A COST-EFFECTIVE IMPROVEMENT TO G4(MP2)",
C      JCTC,2011,7,112-120
C
      PARAMETER (SCLZPE1=0.9770D+00)
CSN  *           SCLENTH=0.9627D+00)
      PARAMETER (HLCA=7.173D-03,HLCAP=7.264D-03,
     *           HLCB=3.677D-03,HLCC=7.239D-03,
     *           HLCD=2.404D-03,HLCE=1.021D-03,
     *           XTRA1=1.327D+00,XTRA2=0.403D+00,
     *           XTRA3=1.249D+00,XTRA4=0.486D+00,
     *           XTRA5=1.077D+00,XTRA6=0.824D+00)
C
      PARAMETER (MXATM=2000,NCOM=20)
      PARAMETER (ZERO=0.0D+00)
      PARAMETER (TOKCAL=627.51D+00, BOLTZ=1.380662D-23,
     *           AVOGAD=6.022045D+23,
     *           TEMP=2.9815D+02,TOKJ=4.184D+03)
      PARAMETER (ONE5=1.5D+00,TWO5=2.5D+00)
C
      DIMENSION NCOR(103)
      DIMENSION CDFTTP(NCOM),ICMPLV(NCOM),
     *  CCCTYP(NCOM),CCITYP(NCOM),ICISPH(NCOM),CGBASS(NCOM),
     *  ICNGSS(NCOM),ICNDFC(NCOM),ICNFFC(NCOM),ICNPFC(NCOM),
     *  CDFFSP(NCOM),CDIFFS(NCOM),CPOLAR(NCOM),CEXTFL(NCOM),
     *  ICNACR(NCOM),ICNBCR(NCOM),ICNCOR(NCOM),ICNDER(NCOM),
     *  CETOT(NCOM),CCMP2(NCOM),CCSCF(NCOM),CESCF(NCOM),
     *  CENMPN(NCOM),CENCCS(NCOM),CENDFT(NCOM),CENCCM(NCOM),
     *  CENCIT(NCOM),ICENCA(NCOM),ICENCB(NCOM),CCORR(NCOM),
     *  IDOPCM(NCOM),CSCALE(NCOM),IEXTRP(NCOM),CECOR(NCOM)
C
      LOGICAL GOPARR,DSKWRK,MASWRK,CEXTFL,CDIFFS,CDFFSP,SECONDD
C
      COMMON /CCENGY/ ENRG,EREF,EMP2X,ECCN,ETOT(6),ECORR(6),
     *                DIAGS(3),AMPMX(5,2),IAMPMX(5,4,2),XO1,XO2,
     *                DIFMAX,DIFFENG,ITER,CNVR
      COMMON /CCPAR / AMPTSH,METHCC,NCCTOT,NCCOCC,NCCFZC,NCCFZV,
     *                MXCCIT,MXRLEIT,NWRDCC,ICCCNV,ICCRST,IDSKCC
      COMMON /CXTHRM/ CXTHERM(11),CXZPE,METHCX,ICXBAS,ICXPCM,SECONDD
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IJK,IPK,IDAF,NAV,IODA(950)
      COMMON /MP2PAR/ OSPT,CODEMP,SCSPT,TOL,METHOD,NWDMP2,MEMPRI,MPPROP,
     *                NACORE,NBCORE,NOA,NOB,NORB,NBF,NOMIT,MOCPHF,MAXITC
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
C
      DATA BASN31,BASG3LX,CCSDT/8HN31     ,8HG3LX    ,8HCCSD(T) /
      DATA CG4M6X/'CG4M6X  '/
      DATA BASACT  /8HACCT    /
      DATA BASACQ  /8HACCQ    /
      DATA RHF     /8HRHF     /
      DATA BMK     /8HBMK     /
CSN   DATA ZAPT,RMP,UMP/8HZAPT    ,8HRMP     ,8HUMP     /
C
      DATA NCOR /2*0,
     *             2*1,                  6*1,
     *             2*5,                  6*5,
     *             2*9,          10*9,   6*14,
     *             2*18,         10*18,  6*23,
     *             2*27,  14*27, 10*34,  6*39,
     *             2*43,  14*43,    50/
C
C RHF SETUP (ROHF AND NAT=1 CORRECTIONS BELOW):
C$COMP
C iop=1, ihs=1, iene=2, icalc=2, ienref=6,
C cenhlc={input HLC value}, czpscl=0.9770,cheats=g4m6x,
C cxtrap=hfcbs,
C cdfttp(1)=bmk,
C icmplv(4)=2,
C icmplv(5)=2,
C ccctyp(7)=ccsd(t),
C icisph(2)=1,
C icisph(3)=1,
C cgbass(1)=n31,acxt,acxq,g3lx,g3lx,n31,n31,
C icngss(1)=6,0,0,0,0,6,6,
C icndfc(1)=2,
C icnffc(1)=1,
C icnpfc(1)=1
C icndfc(6)=1,
C icndfc(7)=1,
C$END
C
C     GOING TO SETUP ENERGY CALCULATIONS
C
      IF(NMET.GE.2) GOTO 10
C
      NCLR = 1
      CZPSCL = 1.0D+00
      CXETH  = 0.0D+00
      CXHTH  = 0.0D+00
      CXGTH  = 0.0D+00
      CCXZPE = 0.0D+00
      CALL CLRALL(NCLR,RMETHD,IOP,IHS,CDFTTP,
     * ICMPLV,CCCTYP,CCITYP,ICISPH,CGBASS,ICNGSS,ICNDFC,
     * ICNFFC,ICNPFC,CDFFSP,CDIFFS,CPOLAR,CEXTFL,ICNACR,
     * ICNBCR,ICNCOR,ICNDER,IENE,CETOT,CCMP2,CENMPN,
     * CENCCS,CENDFT,CENCCM,CENCIT,ICALC,ICENCA,ICENCB,
     * CZPSCL,CENHLC,CCORR,IENREF,IDOPCM,CXETH,CXHTH,
     * CXGTH,CCXZPE,CNUTRL,CHEATS,CSCALE,CXTRAP,IEXTRP,
     * CGASES,CESCF,CECOR,CCSCF)
C
      N  = 0
      NN = 0
      IOP  = 1
      IHS  = 1
      IENE = 6
C
      CDFTTP(1) = BMK
      ICMPLV(5) = 2
      ICMPLV(6) = 2
      CCCTYP(7) = CCSDT
CSN   ICISPH(1) = 1
      ICISPH(2) = 1
      ICISPH(3) = 1
      ICISPH(4) = 1
      ICISPH(5) = 1
CSN   ICISPH(6) = 1
CSN   ICISPH(7) = 1
      CGBASS(1) = BASN31
      CGBASS(2) = BASACT
      CGBASS(3) = BASACQ
      CGBASS(4) = BASG3LX
      CGBASS(5) = BASG3LX
      CGBASS(6) = BASN31
      CGBASS(7) = BASN31
      DO N = 1,NAT
       NUCZ = INT(ZAN(N))
       IF(NUCZ.GE.11 .AND. NUCZ.LE.12) NN = NN - 4
       IF(NUCZ.GE.13 .AND. NUCZ.LE.18) NN = NN
       IF(NUCZ.EQ.19 .AND. NUCZ.LE.20) NN = NN - 4
      END DO
      ICNACR(5) = NACORE + NN
      ICNBCR(5) = NBCORE + NN
      ICNACR(6) = NACORE + NN
      ICNBCR(6) = NBCORE + NN
      ICNCOR(7) = NCCFZC + NN
      ICNGSS(1) = 6
      ICNGSS(6) = 6
      ICNGSS(7) = 6
      ICNDFC(1) = 2
      ICNDFC(6) = 1
      ICNDFC(7) = 1
      ICNPFC(1) = 1
      ICNFFC(1) = 1
      CDFFSP(1) = .TRUE.
      IF(MUL.GT.1) CCSCF(7)=RHF
C
      GO TO 20
   10 CONTINUE
C
C     PRESENTING CALCULATIONS!!!
C
      ICHARG  = 0
      IZATM   = 0
      E0G4X   = ZERO
      E298G4X = ZERO
      HG4X    = ZERO
      GG4X    = ZERO
      DELMPX  = ZERO
      DELSDT  = ZERO
CSN   EREF    = ZERO
      ENREF   = ZERO
      ENDFT   = ZERO
      ENACT   = ZERO
      ENACQ   = ZERO
      ENHFX   = ZERO
      ENMPX   = ZERO
      ENMP6   = ZERO
      ENSDT   = ZERO
CSN   ENSCF   = ZERO
CSN   ENCOR   = ZERO
CSN   ENINF   = ZERO
      SOVAL   = ZERO
C
      WRITE(IW,9000)
      IF(MUL.NE.1) THEN
       WRITE(IW,9800)
       CALL ABRT
      END IF
C
      ENDFT  = CETOT(1)
      ENACT  = CETOT(2)
      ENACQ  = CETOT(3)
      ENHFX  = CETOT(4)
      ENMPX  = CETOT(5)
      ENMP6  = CETOT(6)
      ENSDT  = CETOT(7)
C
      ITHAT = 0
      NCORT = 0
      NVAL  = 0
      DO I=1,NAT
         ITHAT = INT(ZAN(I))
         NCORT = NCORT + NCOR(ITHAT)
      END DO
      NAVAL = NA - NCORT
      NBVAL = NB - NCORT
      NVAL  = NAVAL + NBVAL
C
C     ----- HIGH LEVEL CORRECTIONS -----
C
      IF(NAT.EQ.1) THEN
         FUDGE  = -HLCC*NBVAL - HLCD*(NAVAL-NBVAL)
         ICHARG = ICH
         IZATM = INT(ZAN(1))
         CALL G3SPNORB(IZATM,ICHARG,SOVAL)
         IF(NVAL.EQ.2) THEN
          IF(ITHAT.EQ.2 .OR. ICH.NE.0) THEN
           FUDGE  = -HLCC*NBVAL - HLCD*(NAVAL-NBVAL)
          ELSE
           FUDGE  = -HLCE*NBVAL
          END IF
         END IF
       ELSE IF(NAT.NE.1 .AND. MUL.GT.1) THEN
         FUDGE = -HLCAP*NBVAL - HLCB*(NAVAL-NBVAL)
         IF(NVAL.EQ.2) FUDGE = -HLCE*NBVAL
       ELSE IF(NAT.NE.1 .AND. MUL.EQ.1 .AND. NVAL.NE.2) THEN
         FUDGE = -HLCA*NBVAL
      END IF
CSN HOW IS A SINGLE ELECTRON PAIR DEFINED IN GAMESS?
C
C     ----- THERMAL ENERGIES -----
C
      IF(NAT.EQ.1) THEN
         ETH = (ONE5)*AVOGAD*BOLTZ*TEMP/TOKJ/TOKCAL
         HTH = TWO5*BOLTZ*TEMP*AVOGAD/TOKJ/TOKCAL
      ELSE
         ETH    = CXTHERM(9)/TOKCAL
         HTH    = CXTHERM(10)/TOKCAL
         GTH    = CXTHERM(11)/TOKCAL
         ZPESCL = CXZPE*SCLZPE1
         IF(CXETH.NE.ZERO) ETH=CXETH
         IF(CXHTH.NE.ZERO) HTH=CXHTH
         IF(CXGTH.NE.ZERO) GTH=CXGTH
         IF(CCXZPE.NE.ZERO) THEN
           IF(CZPSCL.NE.ZERO) THEN
            ZPESCL = CCXZPE*CZPSCL
            CXZPE  = ZPESCL/CZPSCL
           ELSE
            ZPESCL = CCXZPE
            CXZPE  = ZPESCL/SCLZPE1
           END IF
         ENDIF
      END IF
C
      WRITE(6,8000) ZPESCL,ETH,HTH,GTH
      WRITE(6,*)'$DATA'
      WRITE(6,*)
      WRITE(6,*)'C1'
       CALL PRATM(IW,1)
      WRITE(6,*)'$END'
C
      WRITE(IW,9010)
      WRITE(IW,9020)
      WRITE(IW,9030)
      WRITE(IW,9040)
      WRITE(IW,9050)
      WRITE(IW,9060)
      WRITE(IW,9070)
      WRITE(IW,9080)
      WRITE(IW,9090)
      WRITE(IW,9100)
      WRITE(IW,9110)
      WRITE(IW,9120)
C
C     --- COMPLETE BASIS SET EXTRAPOLATION ---
C
      EMPINF = (CETOT(3)-CETOT(2)*dble(EXP(-1.63)))/dble(1-EXP(-1.63))
C
C     --- SCALED CORRELATION ENERGIES ---
C     DE(SCS-MP2/G3MP2largeXP) = c3.E(MP2OS)' + c4.E(MP2SS)'
C     DE(S-CCSD/6-31G(d))      = c5.E(CCSD)-(c1.E(MP2OS) + c2.E(MP2SS))
C     DE(S-(T)/6-31G(d))       = c6.E((T))
C
      ENMOSP = CETOT(8)
      ENMSSP = CETOT(9)
      ENMOS  = CETOT(10)
      ENMSS  = CETOT(11)
      ENCCSD = ECCN
      ENT    = ENSDT - (CESCF(7) + ECCN)
      DELMPX = XTRA3*ENMOSP + XTRA4*ENMSSP
      DELSDT = XTRA5*ENCCSD - (XTRA1*ENMOS + XTRA2*ENMSS)
      DELT   = XTRA6*ENT
C
C-----ZPE INCLUDED IN THERMAL ENERGIES, SO MUST BE REMOVED -----
C
      ENREF  = EMPINF + DELMPX + DELSDT + DELT + FUDGE
      IF(NAT.EQ.1) THEN
C     ----- FOR ATOMS -----
       E0G4X  = ENREF       + SOVAL
       E298G4X= ENREF + ETH + SOVAL
       HG4X   = ENREF + HTH + SOVAL
       GG4X   = ENREF + GTH + SOVAL
      ELSE
C     ----- FOR MOLECULES -----
       E0G4X  = ENREF +            ZPESCL
       E298G4X= ENREF + ETH -CXZPE+ZPESCL
       HG4X   = ENREF + HTH -CXZPE+ZPESCL
       GG4X   = ENREF + GTH -CXZPE+ZPESCL
      END IF
C
      IF(MASWRK) THEN
       WRITE(IW,9600)
         WRITE(IW,9605)
         WRITE(IW,9609) XTRA1,XTRA2,XTRA3,XTRA4,XTRA5,XTRA6
         IF(NAT.EQ.1 .AND. NVAL.NE.2) THEN
            WRITE(IW,9610) HLCC,HLCD
         ELSE IF(NAT.NE.1 .AND. MUL.EQ.1 .AND. NVAL.NE.2) THEN
            WRITE(IW,9611) HLCA
         ELSE IF(NAT.NE.1 .AND. MUL.GT.1) THEN
            WRITE(IW,9612) HLCAP,HLCB
         ELSE IF(NVAL.EQ.2) THEN
            IF(ITHAT.EQ.2 .OR. ICH.NE.0) THEN
             WRITE(IW,9610) HLCC,HLCD
            ELSE
             WRITE(IW,9613) HLCE
            END IF
         END IF
         IF(NAT.EQ.1) WRITE(IW,9614) SOVAL
         WRITE(IW,9615) ENDFT,ENACT,EMPINF,ENACQ,ENMP6,ENSDT,
     *           ENHFX,ENMPX,ENMOS,ENMSS,ENMOSP,ENMSSP,ENCCSD,
     *           DELSDT,DELMPX,DELT,ZPESCL,SCLZPE1,
     *           FUDGE,GTH,ETH,HTH,E0G4X,E298G4X,HG4X,GG4X
      END IF
C
C CALCULATION OF HEATS OF FORMATION
C
C     LET:
      E0G = E0G4X
      HG3 = HG4X
C
      IF(NAT.GT.1) THEN
      CALL HEATS(CG4M6X,CNUTRL,E0G,HG3,HFOR0,HFOR298)
        WRITE(6,9900) HFOR0,HFOR298
      END IF
      CALL TIMIT(1)
C
   20 CONTINUE
C
      RETURN
C
 8000 FORMAT(2X,'CCXZPE= ',F13.9,
     *      /2X,'CXETH= ',F13.9,
     *      /2X,'CXHTH= ',F13.9,
     *      /2X,'CXGTH= ',F13.9)
 9000 FORMAT(/5X,50(1H=),/5X,5(1H-),5X,'G4MP2-6X CALCULATIONS',
     *       5X,10(1H-),
     *       /5X,5(1H-),5X,'SEAN A. NEDD, GORDON GROUP, ',
     *       6X,10(1H-),
     *       /5X,5(1H-),5X,'AMESLAB/IOWA STATE UNIVERSITY',
     *       5X,10(1H-),/5X,50(1H=))
 9010 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(1) BMK OPTIMIZATION',
     *      ' AND HESSIAN',/5X,50(1H-))
 9020 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(2) HF/ACCT',
     *      /5X,50(1H-))
 9030 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(3) HF/ACCQ',
     *      /5X,50(1H-))
 9040 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(4) HF/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9050 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(5) MP2/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9060 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(6) MP2/6-31G(D)',
     *      /5X,50(1H-))
 9070 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(7) CCSD(T)/6-31G(D)',
     *      /5X,50(1H-))
 9080 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(8) MP2(OS)/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9090 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(9) MP2(SS)/G3MP2LARGEXP',
     *      /5X,50(1H-))
 9100 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(10) MP2(OS)/6-31G(D)',
     *      /5X,50(1H-))
 9110 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(11) MP2(SS)/6-31G(D)',
     *      /5X,50(1H-))
 9120 FORMAT(/5X,50(1H-),/5X,5(1H-),5X,'(12) MBPT2/6-31G(D)',
     *      /5X,50(1H-))
 9600 FORMAT(/4X,64(1H-),/8X,'DETAILS OF G4(MP2)-6X CALCULATIONS')
 9605 FORMAT(4X,64(1H-),
     *       /4X,'E(G4(MP2)-6X)@0K   = E(INF) + DE(MP2X) + ',
     *       'DE(CCSD) + DE((T))',/24x,' + ZPE(SCALED) + HLC + E(SO)',
     */4X,'E(G4(MP2)-6X)@298K = E(G4(MP2)-6X)@0K +(E(THERMAL) -ZPE)',
     *       /4X,'H(G4(MP2)-6X)      = E(G4(MP2)-6X)@298K + KT',
     *       /4X,'G(G4(MP2)-6X)      = H(G4(MP2)-6X) - TDS',
     *      //6X,'E(INF)           = [E(Q)-E(T)*EXP(-1.63)]',
     *           '/[1-EXP(-1.63)]',
     *       /6X,'ENERGY VALUES BELOW ARE CORRELATION ENERGIES',
     *       /6X,'DE(MP2X)     = c3*E(SCSMP2OSP) + c4*E(SCSMP2SSP)',
     *       /6X,'DE(CCSD)     = c5*E(CCSD/6-31G(D)) - ',
     *           '(c1*E(SCSMP2OS) + c2*E(SCSMP2SS)',
     *       /6X,'DE((T))      = c6*E((T))',
     *       /6X,'GEOMETRY BMK/6-31+G(2DF,P) FROZEN CORE',
     *       /6X,'E(Q)      = E(HF/AUG-CC-PVQZ)',
     *       /6X,'E(T)      = E(HF/AUG-CC-PVTZ)',
     *       /6X,'SCSMP2OSP = SCS-MP2(OS)/G3MP2LARGEXP ',
     *       /6X,'SCSMP2SSP = SCS-MP2(SS)/G3MP2LARGEXP ',
     *       /6X,'SCSMP2OS  = SCS-MP2(OS)/6-31G(D) ',
     *       /6X,'SCSMP2SS  = SCS-MP2(SS)/6-31G(D) ',
     *       /6X,'E((T))    = PERTURBATIVE TRIPLES FROM ',
     *           'E(CCSD(T)/6-31G(D))')
 9609 FORMAT(6X,'G4MP2-6X SCALING PARAMETERS (c1 - c6):',
     *      /6X,'c1 = ',F8.6,'    c2 = ',F8.6,
     *      /6X,'c3 = ',F8.6,'    c4 = ',F8.6,
     *      /6X,'c5 = ',F8.6,'    c6 = ',F8.6)
 9610 FORMAT(6X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'BMK/6-31+G(2DF,P)',
     *       /6X,'HLC PARAMETERS USED ARE:  C = ',F8.6,
     *           '     D = ',F8.6)
 9611 FORMAT(6X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'BMK/6-31+G(2DF,P)',
     *       /6X,'HLC PARAMETER USED IS:  A = ',F8.6)
 9612 FORMAT(6X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'BMK/6-31G(2DF,P)',
     *       /6X,'HLC PARAMETERS USED ARE:  AP = ',F8.6,
     *           '    B = ',F8.6)
 9613 FORMAT(6X,'ZPE AND OTHER THERMAL CALCULATIONS AT ',
     *           'BMK/6-31G(2DF,P)',
     *       /6X,'HLC PARAMETER USED IS:  E = ',F8.6)
 9614 FORMAT(6X,'E(SO) = ATOMIC SPIN ORBIT ENERGY = ',F8.6)
 9615 FORMAT(/4X,64(1H-),/19X,'SUMMARY OF G4(MP2)-6X CALCULATIONS',
     *   /4X,64(1H-),
     */4X,'BMK/6-31+G(2DF,P) =',F13.6,3X,'HF/ACCT          =',F13.6,
     */4X,'HF/CBS            =',F13.6,3X,'HF/ACCQ          =',F13.6,
     */4X,'MP2/6-31G(D)      =',F13.6,3X,'CCSD(T)/6-31G(D) =',F13.6,
     */4X,'HF/G3MP2LARGEXP   =',F13.6,3X,'MP2/G3MP2LARGEXP =',F13.6,
     */4X,'SCSMP2OS/6-31G(D) =',F13.6,3X,'SCSMP2SS/6-31G(D)=',F13.6,
     */4X,'SCSMP2OS/G3ML-XP  =',F13.6,3X,'SCSMP2SS/G3ML-XP =',F13.6,
     */4X,'CCSD/6-31G(D)     =',F13.6,3X,'DE(S-CCSD)       =',F13.6,
     */4X,'DE(MP2)           =',F13.6,3X,'DE((T))          =',F13.6,
     */4X,'ZPE(BMK)          =',F13.6,3X,'ZPE SCALE FACTOR =',F13.6,
     */4X,'HLC               =',F13.6,3X,'FREE ENERGY      =',F13.6,
     */4X,'THERMAL ENERGY    =',F13.6,3X,'THERMAL ENTHALPY =',F13.6,
     */4X,64(1H-),
     */4X,'E(G4(MP2)6X)@0K   =',F13.6,3X,'E(G4(MP2)6X)@298K=',F13.6,
     */4X,'H(G4(MP2)6X)      =',F13.6,3X,'G(G4(MP2)6X)     =',F13.6,
     */4X,64(1H-))
 9800 FORMAT(/4X,64(1H-),/10X,'**THE MULTIPLICITY IS NOT A SINGLET**',
     *   /10X,'NO AVAILABLE OPEN-SHELL SCS-MP2 CODE',/)
 9900 FORMAT(/4X,64(1H-),
     *   /10X,'HEATS OF FORMATION   (0K): ',F10.2,' KCAL/MOL',
     *   /10X,'HEATS OF FORMATION (298K): ',F10.2,' KCAL/MOL',
     *   /4X,64(1H-),
     *   /10X,'HEATS OF FORMATIONS BASED ON NIST DATABASE FROM ',
     */10X,'COMPUTATIONAL CHEMISTRY COMPARISON AND BENCHMARK DATABASE',
     *   /4X,64(1H-),/)
C
      END

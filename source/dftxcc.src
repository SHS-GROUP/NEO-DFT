C 18 Oct 12 - JH  - add dlDF (dispersionless Density Functional)
C  7 Mar 12 - MWS - align DFTCAM common
C 19 dec 11 - RP  - M11, M11-L, SOGGA11, SOGGA11-X FUNCTIONALS
C 14 AUG 09 - SS  - M08-HX, M08-SO, SOGGA FUNCTIONALS
C  4 MAR 08 - SS  - NEW FILE FOR META-GGA FUNCTIONALS
C=======================================================================
C     THE FOLLOWING FUNCTIONAL CODES AND THEIR VARIANTS: M05, M06, VS98
C     WERE ORIGINALLY WRITTEN BY TRUHLAR THEORETICAL AND COMPUTATIONAL
C     CHEMISTRY GROUP AT THE UNIVERSITY OF MINNESOTA.
C
C     THEIR CODE WAS INTEGRATED INTO GAMESS WITH THEIR PERMISSION BY
C     SAROM SOK AT IOWA STATE UNIVERSITY.
C=======================================================================
C*MODULE DFTXCC *DECK M05CF
      SUBROUTINE M05CF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,ECF,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C     [A] ZHAO, Y.; SCHULTZ, N. E.; TRUHLAR, D. G. J. CHEM. PHYS. 2005,
C         123, 161103;
C     NOTE THAT IN THIS COMMUNICATION WE INTERCHANGED CCAB,I AND CCSS,I
C     IN TABLE 1.
C     [B] ZHAO, Y.; SCHULTZ, N. E.; TRUHLAR, D. G. J. CHEM. THEORY
C         COMPUT. 2006, IN PRESS.
      IMPLICIT NONE
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION ECF
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION F1, F2, F3, F4,COPP
      DATA COPP/0.0031D0/
      DATA F1/1.0D0/,F2/2.0D0/,F3/3.0D0/,F4/4.0D0/
C
C    CALL TO THE M05CSS SUBROUTINE
C
      DOUBLE PRECISION PA,GAA,TA,FA,FPA,FGA,FTA,EUA,CHIA,EUPA
      DOUBLE PRECISION CHIAP,CHIAG
      DOUBLE PRECISION PB,GBB,TB,FB,FPB,FGB,FTB,EUB,CHIB,EUPB
      DOUBLE PRECISION CHIBP,CHIBG
C
      DOUBLE PRECISION SOP, SOPP0, SOPP1,SOPP2, SOPP3, SOPP4
      DOUBLE PRECISION PI, PI34, F13
      DOUBLE PRECISION RS,RSP,ZETA,DZDA,DZDB,POTLC,DLDS,DLDZ,D2LDSS
      DOUBLE PRECISION D2LDSZ,D2LDZZ
      DOUBLE PRECISION P, EUEG, U, W
      DOUBLE PRECISION DUDCHIA,DUDCHIB,DUDPA,DUDPB,DUDGA,DUDGB
      DOUBLE PRECISION DWDU,DWDPA,DWDPB, DWDGA,DWDGB,EUEGPA,EUEGPB
C
C     SPIN-RESTRICTED
C
      SOP=1.0D0
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M05 CORRELATION
         SOPP0 =  1.00000D0
         SOPP1 =  3.78569D0
         SOPP2 =-14.15261D0
         SOPP3 = -7.46589D0
         SOPP4 = 17.94491D0
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M05-2X CORRELATION
         SOPP0 =  1.00000D0
         SOPP1 =  1.09297D0
         SOPP2 = -3.79171D0
         SOPP3 =  2.82810D0
         SOPP4 =-10.58909D0
      ENDIF
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
C
      IF (RHFGVB) THEN
C
C     GET THE DENSITY, GRADIENT, AND TAU FOR THE ALPHA SPIN FROM THE
C     TOTAL
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE M05CSS SUBROUTINE, WE USE 2*TA AS THE TAU, SO WE DO NOT
C     DIVIDE THE TAU BY 2 HERE
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL M05CSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG,IJZY)
        PB    = PA
        GBB   = GAA
        TB    = TA
        FB    = FA
        FPB   = FPA
        FGB   = FGA
        FTB   = FTA
        EUB   = EUA
        CHIB  = CHIA
        EUPB  = EUPA
        CHIBP = CHIAP
        CHIBG = CHIAG
C
        ECF = ECF + 2.0D+00*FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
      END IF
C
C     SPIN-UNRESTRICTED
C
      IF (UROHF) THEN
C
C     ALPHA
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE M05CSS SUBROUTINE, WE USE 2*TA AS THE TAU
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL M05CSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG,IJZY)
C
        ECF = ECF + FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D0*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D0*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D0*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
C
C     BETA
C
        PB = ROB
        GBB = GRDBB
C
C     IN THE M05CSS SUBROUTINE, WE USE 2*TA AS THE TAU
C
        TB = TAUXB + TAUYB + TAUZB
C
        CALL M05CSS(PB,GBB,TB,FB,FPB,FGB,FTB,EUB,
     >              CHIB,EUPB,CHIBP,CHIBG,IJZY)
C
        ECF = ECF + FB*FTOTWT
C
        VXCB1 = VXCB1 + FPB
C
        DUMBX = DUMBX + 2.0D0*(FGB*GRADXB)
        DUMBY = DUMBY + 2.0D0*(FGB*GRADYB)
        DUMBZ = DUMBZ + 2.0D0*(FGB*GRADZB)
C
        DMXCB = DMXCB + FTB
      ENDIF
C
      P = PA + PB
C
      RS   =(PI34/P) ** F13
      RSP  =-RS/(F3*P)
      ZETA =(PA-PB)/P
      DZDA =(F1-ZETA)/P
      DZDB =(-F1-ZETA)/P
C
      CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,
     >           D2LDZZ)
C
      EUEG = P*POTLC - EUA - EUB
      U    = COPP*(CHIA+CHIB)/(F1 + COPP*(CHIA+CHIB))
      W    = SOPP0+U*(SOPP1+U*(SOPP2+U*(SOPP3+U*SOPP4)))
C
      ECF = ECF + SOP*EUEG*W*FTOTWT
C
      DUDCHIA =COPP/(F1 + COPP*(CHIA+CHIB))**2
      DUDCHIB =COPP/(F1 + COPP*(CHIA+CHIB))**2
C
      DUDPA = DUDCHIA*CHIAP
      DUDPB = DUDCHIB*CHIBP
      DUDGA = DUDCHIA*CHIAG
      DUDGB = DUDCHIB*CHIBG
      DWDU  = SOPP1+U*(F2*SOPP2+U*(F3*SOPP3+U*F4*SOPP4))
      DWDPA = DWDU*DUDPA
      DWDPB = DWDU*DUDPB
      DWDGA = DWDU*DUDGA
      DWDGB = DWDU*DUDGB
C
      EUEGPA = POTLC + P*DLDS*RSP + P*DLDZ*DZDA - EUPA
      EUEGPB = POTLC + P*DLDS*RSP + P*DLDZ*DZDB - EUPB
C
        IF (RHFGVB) THEN
          VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
C
          DUMAX = DUMAX + 2.0D+00*SOP*(EUEG*DWDGA)*GRADXA
          DUMAY = DUMAY + 2.0D+00*SOP*(EUEG*DWDGA)*GRADYA
          DUMAZ = DUMAZ + 2.0D+00*SOP*(EUEG*DWDGA)*GRADZA
        ELSE
          VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
          VXCB1 = VXCB1 + SOP*(EUEGPB*W + EUEG*DWDPB)
C
          DUMAX = DUMAX + 2.0D+00*SOP*EUEG*DWDGA*GRADXA
          DUMAY = DUMAY + 2.0D+00*SOP*EUEG*DWDGA*GRADYA
          DUMAZ = DUMAZ + 2.0D+00*SOP*EUEG*DWDGA*GRADZA
C
          DUMBX = DUMBX + 2.0D+00*SOP*EUEG*DWDGB*GRADXB
          DUMBY = DUMBY + 2.0D+00*SOP*EUEG*DWDGB*GRADYB
          DUMBZ = DUMBZ + 2.0D+00*SOP*EUEG*DWDGB*GRADZB
        ENDIF
      END
C
C*MODULE DFTXCC *DECK M05CSS
      SUBROUTINE M05CSS(PX,GX,TX,F,FP,FG,FT,EUEG,CHI,EUEGP,
     >                  CHIP,CHIG,IJZY)
      IMPLICIT NONE
C
C     COMPUTE THE SAME-SPIN PART OF THE M05 CORRELATION FUNCTIONAL FOR
C     ONE GRID POINT AND ONE SPIN-CASE.
C
      INTEGER IJZY
      DOUBLE PRECISION PX, GX, TX, F, FP, FG, FT
      DOUBLE PRECISION EUEG, CHI, EUEGP, CHIP, CHIG
      DOUBLE PRECISION PT25, F1, F2, F3, F4, F8
      DOUBLE PRECISION SS, SSS0,SSS1, SSS2, SSS3, SSS4, CSS
      DOUBLE PRECISION PI, PI34, F13, F83
      DOUBLE PRECISION RS, D, FSCC, RSP, DFSCCP, DFSCCG
      DOUBLE PRECISION E, W, U, DFSCCT, DUDCHI, DWDU, DWDP, DWDG
      DOUBLE PRECISION D2LDSS,D2LDSZ,D2LDZZ,POTLC,DLDS,DLDZ
C
      DATA PT25/0.25D0/, F1/1.0D0/, F2/2.0D0/, F3/3.0D0/,
     >     F4/4.0D0/, F8/8.0D0/, CSS/0.06D0/
C
      SS = 1.0D+00
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M05 CORRELATION
         SSS0 =   1.00000D0
         SSS1 =   3.77344D0
         SSS2 = -26.04463D0
         SSS3 =  30.69913D0
         SSS4 =  -9.22695D0
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M05-2X CORRELATION
         SSS0 =   1.00000D0
         SSS1 =  -3.05430D0
         SSS2 =   7.61854D0
         SSS3 =   1.47665D0
         SSS4 = -11.92365D0
      ENDIF
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
      F83  = F8 / F3
C
C
      RS = (PI34/PX) ** F13
C
      CALL LSDAC(RS,F1,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ)
C
      EUEG = PX*POTLC
C
      D = TX - PT25*GX/PX
C
      CHI = GX/PX**F83
C
      U = CSS*CHI/(F1 + CSS*CHI)
      W = SSS0+U*(SSS1+U*(SSS2+U*(SSS3+U*SSS4)))
C
      FSCC = D/TX
C
      E = FSCC*W*EUEG
      F = E*SS
C
      RSP = -RS/(F3*PX)
C
      CHIG = F1/PX**F83
      CHIP = -F83*CHI/PX
C
      DFSCCP = PT25*GX/(TX*PX**2)
      DFSCCG =-PT25/(TX*PX)
      DFSCCT = PT25*GX/(PX*TX**2)
      DUDCHI = CSS/((F1+CSS*CHI)**2)
C
      DWDU = SSS1+U*(F2*SSS2+U*(F3*SSS3+U*F4*SSS4))
      DWDP = DWDU*DUDCHI*CHIP
      DWDG = DWDU*DUDCHI*CHIG
C
      EUEGP = POTLC + PX*DLDS*RSP
C
      FP = SS*(DFSCCP*W*EUEG
     >   + FSCC*DWDP*EUEG
     >   + FSCC*W*EUEGP)
C
      FG = SS*(DFSCCG*W*EUEG
     >   + FSCC*DWDG*EUEG)
C
      FT = SS*(DFSCCT*W*EUEG)
      RETURN
      END
C
C     PERDEW 91 LOCAL CORRELATION FUNCTIONAL AT ONE GRID POINT
C
C*MODULE DFTXCC *DECK LSDCA
      SUBROUTINE LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ)
      IMPLICIT NONE
C
C     EVALUATE THE PERDEW 91 LOCAL CORRELATION FUNCTIONAL AND ITS
C     DERIVATIVES AT ONE POINT.
C
      DOUBLE PRECISION RS
      DOUBLE PRECISION POTLC,DLDS, DLDZ
      DOUBLE PRECISION EPS0C(6), EPS1C(6), EPSC(6)
      DOUBLE PRECISION F1, F2, F3, F4, F6, F8, F9, F12
      DOUBLE PRECISION GAMMAI,ZETA,FZETA,DFZDZ,D2FZDZ
      DOUBLE PRECISION EU,DEUDRS,D2UDRS
      DOUBLE PRECISION EP,DEPDRS,D2PDRS
      DOUBLE PRECISION ALPHAM,DAMDRS,D2ADRS
      DOUBLE PRECISION GZ, HZ, DGZ, DHZ, D2GZ, D2HZ
C
      DOUBLE PRECISION PI,THIRD,Z2,Z3,Z4,D2LDSS,D2LDSZ,D2LDZZ,FZZI
C
      DATA EPS0C/0.03109070D0,0.21370D0, 7.5957D0,3.5876D0,1.6382D0,
     >           0.49294D0/
      DATA EPS1C/0.01554535D0,0.20548D0,14.1189D0,6.1977D0,3.3662D0,
     >           0.62517D0/
      DATA EPSC /0.01688690D0,0.11125D0,10.3570D0,3.6231D0,0.88026D0,
     >           0.49671D0/
      DATA F1/1.0D0/, F2/2.0D0/, F3/3.0D0/, F4/4.0D0/, F6/6.0D0/,
     >     F8/8.0D0/, F9/9.0D0/, F12/12.0D0/
C
      PI    = F4*ATAN(F1)
      THIRD = F1 / F3
C
      EPSC(1) = F1 / (F6*PI*PI)
      FZZI    = F9*(F2**THIRD-F1) / F4
      GAMMAI  = F1 / (F2*F2**THIRD-F2)
C
      CALL EVFZET(GAMMAI,ZETA,FZETA,DFZDZ,D2FZDZ)
C
      CALL EVPWLC(EPS0C(1),EPS0C(2),EPS0C(3),EPS0C(4),EPS0C(5),
     >            EPS0C(6), RS,EU,DEUDRS,D2UDRS)
C
      CALL EVPWLC(EPS1C(1),EPS1C(2),EPS1C(3),EPS1C(4),EPS1C(5),
     >            EPS1C(6),RS,EP,DEPDRS,D2PDRS)
C
      CALL EVPWLC(EPSC(1),EPSC(2),EPSC(3),EPSC(4),EPSC(5),
     >            EPSC(6),RS,ALPHAM,DAMDRS,D2ADRS)
C
      Z2 = ZETA*ZETA
      Z3 = ZETA*Z2
      Z4 = ZETA*Z3
      GZ = FZETA*Z4
      HZ = FZZI*(FZETA-GZ)
C
      POTLC = EU*(F1-GZ) + EP*GZ - ALPHAM*HZ
C
      DLDS = DEUDRS*(F1-GZ) + DEPDRS*GZ - DAMDRS*HZ
      DGZ  = DFZDZ*Z4 + F4*FZETA*Z3
      DHZ  = FZZI*(DFZDZ-DGZ)
      DLDZ = (EP-EU)*DGZ - ALPHAM*DHZ
      D2GZ = D2FZDZ*Z4 + F8*Z3*DFZDZ + F12*FZETA*Z2
      D2HZ = FZZI*(D2FZDZ-D2GZ)
C
      D2LDSS = D2UDRS*(F1-GZ) + D2PDRS*GZ - D2ADRS*HZ
      D2LDSZ = (DEPDRS-DEUDRS)*DGZ - DAMDRS*DHZ
      D2LDZZ = (EP-EU)*D2GZ - ALPHAM*D2HZ
      RETURN
      END
C
C     F(ZETA)
C
C*MODULE DFTXCC *DECK EVFZET
      SUBROUTINE EVFZET(S,ZETA,FZETA,DFZDZ,D2FZDZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     EVALUATE F(ZETA) AND ITS DERIVATIVES FOR LSDAC.
C
      DOUBLE PRECISION SMALL
      DOUBLE PRECISION S, ZETA, FZETA,DFZDZ,D2FZDZ
      DOUBLE PRECISION ZERO, ONE, TWO, THREE, FOUR, NINE
      DOUBLE PRECISION OMZ, OPZ, OMZ3, OPZ3
      DOUBLE PRECISION F13, F43, F49
      DATA ZERO/0.0D0/, ONE/1.0D0/, TWO/2.0D0/, THREE/3.0D0/,
     >     FOUR/4.0D0/, NINE/9.0D0/
C
      SMALL  = 1.0D-14
      FZETA  =-TWO
      DFZDZ  = ZERO
      D2FZDZ = ZERO
C
      OMZ  = ONE - ZETA
      OPZ  = ONE + ZETA
      F13  = ONE / THREE
      F43  = FOUR / THREE
      F49  = FOUR / NINE
C
      IF(OMZ.GT.SMALL) THEN
        OMZ3   = OMZ ** F13
        FZETA  = FZETA + OMZ*OMZ3
        DFZDZ  = DFZDZ - OMZ3
        D2FZDZ = D2FZDZ + OMZ3/OMZ
      ENDIF
C
      IF(OPZ.GT.SMALL) THEN
        OPZ3   = OPZ ** F13
        FZETA  = FZETA + OPZ*OPZ3
        DFZDZ  = DFZDZ + OPZ3
        D2FZDZ = D2FZDZ + OPZ3/OPZ
      ENDIF
C
      FZETA  = FZETA * S
      DFZDZ  = DFZDZ * F43 * S
      D2FZDZ = D2FZDZ * F49 * S
      RETURN
      END
C
C     PW91 LOCAL CORRELATION
C
C*MODULE DFTXCC *DECK EVPWLC
      SUBROUTINE EVPWLC(A,A1,B1,B2,B3,B4,RS,V,DVDRS,D2VDRS)
      IMPLICIT NONE
C
C     EVALUATE THE INTERPOLATION FUNCTION FOR PW91 LOCAL CORRELATION.
C
      DOUBLE PRECISION A,A1,B1,B2,B3,B4,RS,V,DVDRS,D2VDRS
      DOUBLE PRECISION F1,F2, F3, F4
      DOUBLE PRECISION Q0, RS12, RS32,Q1,Q2
      DOUBLE PRECISION DQ0DRS,DQ1DRS,DQ2DRS
      DOUBLE PRECISION D2Q1DS, D2Q2DS
      DATA F1/1.0D0/, F2/2.0D0/, F3/3.0D0/, F4/4.0D0/
C
      Q0   =-F2*A*(F1+A1*RS)
      RS12 = SQRT(RS)
      RS32 = RS*RS12
      Q1   = F2*A*(B1*RS12+B2*RS+B3*RS32+B4*RS*RS)
      Q2   = LOG(F1+F1/Q1)
      V    = Q0*Q2
C
      DQ0DRS =-F2*A*A1
      DQ1DRS = A*(B1/RS12+F2*B2+F3*B3*RS12+F4*B4*RS)
      DQ2DRS =-DQ1DRS/(Q1+Q1**2)
      DVDRS  = DQ0DRS*Q2 + Q0*DQ2DRS
C
      D2Q1DS = A*(F3*B3/(RS12*F2)-B1/(RS32*F2)+F4*B4)
      D2Q2DS = (F2*Q1+F1)*(DQ1DRS/(Q1+Q1**2))**2 - D2Q1DS/(Q1+Q1**2)
      D2VDRS = F2*DQ0DRS*DQ2DRS + Q0*D2Q2DS
      RETURN
      END
C*MODULE DFTXCC *DECK M05XF
      SUBROUTINE M05XF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,XGRD,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C     [A] ZHAO, Y.; SCHULTZ, N. E.; TRUHLAR, D. G. J. CHEM. PHYS. 2005,
C         123, 161103;
C     NOTE THAT IN THIS COMMUNICATION WE INTERCHANGED CCAB,I AND CCSS,I
C     IN TABLE 1.
C     [B] ZHAO, Y.; SCHULTZ, N. E.; TRUHLAR, D. G. J. CHEM. THEORY
C         COMPUT. 2006, IN PRESS.
C
      IMPLICIT NONE
C
      INTEGER IM05
      COMMON /CM05  / CM05XF, IM05
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION XGRD
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     SCALE FACTORS FOR LOCAL AND NON-LOCAL CONTRIBUTIONS.
C
      DOUBLE PRECISION CM05XF
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION PI
C
      DOUBLE PRECISION AT1, AT2, AT3, AT4, AT5, AT6, AT7, AT8, AT9
      DOUBLE PRECISION AT, AT10, AT11, C1, C2, FL, FNL
      DOUBLE PRECISION RRHO, RHO43, RHO13, RHOO, RHO53
      DOUBLE PRECISION GAMMA2, GAMMA
      DOUBLE PRECISION TAUUEG, TSIG, WSIG, W1, W2, W3, W4, W5, W6
      DOUBLE PRECISION W7, W8, W9, W10, W11, FSIG
C
      DOUBLE PRECISION TAUN,TAUU
      DOUBLE PRECISION F23, F53, F13
      DOUBLE PRECISION F4O3
      DOUBLE PRECISION ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT
      DOUBLE PRECISION NINE, F10, F11
      DOUBLE PRECISION CS, AX, P32, S, S2, EN, ED, E, DE, DEN, DED
C
C      FUNCTIONAL DERIVATIVES
C
      DOUBLE PRECISION DFDW, DWDT, DTDR, DTDTAU, DGGADR, DFDR
      DOUBLE PRECISION DFDTAU, DGGADG
C
      PARAMETER (PI = 3.1415926535897932384626433832795D0)
C
      PARAMETER (F13=1.D0/3.D0)
      PARAMETER (F4O3=4.D0/3.D0)
      PARAMETER (F23=2.0D0/3.D0, F53=5.D0/3.D0)
      PARAMETER (ONE=1.0D0, TWO=2.0D0, THREE=3.0D0, FOUR=4.0D0,
     >           FIVE=5.0D0,SIX=6.0D0, SEVEN=7.0D0,
     >           EIGHT=8.0D0, NINE=9.0D0,F10=10.D0, F11=11.D0)
C
      FL  = CM05XF
      FNL = CM05XF
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M05
        AT1 =  0.08151D0
        AT2 = -0.43956D0
        AT3 = -3.22422D0
        AT4 =  2.01819D0
        AT5 =  8.79431D0
        AT6 = -0.00295D0
        AT7 =  9.82029D0
        AT8 = -4.82351D0
        AT9 =-48.17574D0
        AT10=  3.64802D0
        AT11= 34.02248D0
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M05-2X
        AT1 = -0.56833D0
        AT2 = -1.30057D0
        AT3 =  5.50070D0
        AT4 =  9.06402D0
        AT5 =-32.21075D0
        AT6 =-23.73298D0
        AT7 = 70.22996D0
        AT8 = 29.88614D0
        AT9 =-60.25778D0
        AT10=-13.22205D0
        AT11= 15.23694D0
      ENDIF
C
      AT = 1.0D0
      C1 = 0.2195149727645171D0
      C2 = C1/0.804D0
C
      CS  = 0.5D0/(3.0D0*PI*PI)**F13
      P32 = (3.D0*PI**2)**F23
C
      AX = (-0.75D0)*(3.0D0/PI)**F13
C
      IF (RHFGVB) THEN
        RHOO  = ROA+ROB
        RHO43 = RHOO**F4O3
        RRHO  = 1D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN = TAUXA + TAUYA + TAUZA
C
        TAUU   = TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = 4.0D+00*GRDAA
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     =(DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   =(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TAUUEG/TAUU**2
        DGGADR = F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG =(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR
C
        DUMAX = DUMAX + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADZA)
C
        DMXCA = DMXCA + 0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
      END IF
C
      IF (UROHF) THEN
C
C     USE SPIN DENSITY FUNCTIONAL THEORY IE N-->2N
C     EX=(1/2)EX[2*ALPHA] + (1/2)EX[2*BETA]
C
C     ALPHA
C
        RHOO  = TWO*ROA
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXA + TAUYA + TAUZA)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDAA
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
C
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*0.5D0*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     =(DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + (DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR)*
     >                   0.5D0
C
        DUMAX = DUMAX + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADXA)
        DUMAY = DUMAY + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADYA)
        DUMAZ = DUMAZ + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADZA)
C
        DMXCA = DMXCA + 0.5D0*0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
C
C     BETA
C
        RHOO  = TWO*ROB
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXB + TAUYB + TAUZB)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDBB
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*0.5D0*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     = (DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU = -TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCB1 = VXCB1 + (DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR)*
     >                 0.5D0
C
        DUMBX = DUMBX + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADXB)
        DUMBY = DUMBY + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADYB)
        DUMBZ = DUMBZ + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADZB)
C
        DMXCB = DMXCB + 0.5D0*0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
C
      ENDIF
      RETURN
      END
C*MODULE DFTXCC *DECK VS98CF
      SUBROUTINE VS98CF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                  GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                  FTOTWT,ECF,
     >                  VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                  VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                  TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C
C     REFERENCE
C     [A] T. V. VOORHIS & G. E. SCUSERIA, J. CHEM. PHYS. 109, 400 (1998)
C     [B] Y. ZHAO & D. G. TRUHLAR, J. CHEM. PHYS. 125, 194101 (2006)
C
      IMPLICIT NONE
C
C     THRESHOLD PARAMETERS
C
      DOUBLE PRECISION F1, F3, F4, GAB
C
      DATA F1/1.0D+00/,F3/3.0D+00/,F4/4.0D+00/,GAB/0.00304966D+00/
C
C     CORRELATION ENERGY
C
      DOUBLE PRECISION ECF
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
      INTEGER IJZY
C
C     CALL TO THE VS98CSS SUBROUTINE
C
      DOUBLE PRECISION PA,GAA,TA,FA,FPA,FGA,FTA,EUA,CHIA,EUPA,
     >                 CHIAP,CHIAG,ZA,ZAP,ZAT
      DOUBLE PRECISION PB,GBB,TB,FB,FPB,FGB,FTB,EUB,CHIB,EUPB,
     >                 CHIBP,CHIBG,ZB,ZBP,ZBT
C
      DOUBLE PRECISION PI, F13, PI34, POTLC,RS,RSP,
     >                 ZETA,DZDA,DZDB,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ
C
      DOUBLE PRECISION P, EUEG, ZAB, XAB, KAB, XK, ZK
      DOUBLE PRECISION DGDX,DGDZ,DGDPA,DGDGA,DGDTA,DGDPB,DGDGB,DGDTB
      DOUBLE PRECISION EUEGPA,EUEGPB,GCAB
      DOUBLE PRECISION R7, R8, R9, R10, R11, R12
C
      LOGICAL RHFGVB,UROHF
C
C     PARAMETERS FOR VS98
      IF (IJZY.EQ.1) THEN
              R7  = 7.035010D-01
              R8  = 7.694574D-03
              R9  = 5.152765D-02
              R10 = 3.394308D-05
              R11 =-1.269420D-03
              R12 = 1.296118D-03
C     PARAMETERS FOR M06-L
      ELSEIF (IJZY.EQ.2) THEN
              R7  = 3.957626D-01
              R8  =-5.614546D-01
              R9  = 1.403963D-02
              R10 = 9.831442D-04
              R11 =-3.577176D-03
              R12 = 0.000000D+00
C     PARAMETERS FOR M06-HF
      ELSEIF (IJZY.EQ.3) THEN
              R7  =-6.746338D-01
              R8  =-1.534002D-01
              R9  =-9.021521D-02
              R10 =-1.292037D-03
              R11 =-2.352983D-04
              R12 = 0.000000D+00
C     PARAMETERS FOR M06
      ELSEIF (IJZY.EQ.4) THEN
              R7  =-2.741539D+00
              R8  =-6.720113D-01
              R9  =-7.932688D-02
              R10 = 1.918681D-03
              R11 =-2.032902D-03
              R12 = 0.000000D+00
C     PARAMETERS FOR M06-2X
      ELSEIF (IJZY.EQ.5) THEN
              R7  = 1.166404D-01
              R8  =-9.120847D-02
              R9  =-6.726189D-02
              R10 = 6.720580D-05
              R11 = 8.448011D-04
              R12 = 0.000000D+00
      ENDIF
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
C
      IF (RHFGVB) THEN
C
C     GET DENSITY, GRADIENT, AND TAU FOR THE ALPHA SPIN FROM THE TOTAL
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE BC95CSS SUBROUTINE, WE USE 2*TA AS THE TAU, SO WE DO NOT
C     DIVIDE THE TAU BY 2 HERE
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL VS98SS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,ZA,
     >              CHIA,EUPA,CHIAP,CHIAG,ZAP,ZAT,IJZY)
C
        PB    = PA
        GBB   = GAA
        TB    = TA
        FB    = FA
        FPB   = FPA
        FGB   = FGA
        FTB   = FTA
        EUB   = EUA
        ZB    = ZA
        CHIB  = CHIA
        EUPB  = EUPA
        CHIBP = CHIAP
        CHIBG = CHIAG
        ZBP   = ZAP
        ZBT   = ZAT
C
        ECF = ECF + 2.0D+00*FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
      END IF
C
      IF (UROHF) THEN
C
C     ALPHA
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE BC95CSS SUBROUTINE, WE USE 2*TA AS THE TAU
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL VS98SS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,ZA,
     >              CHIA,EUPA,CHIAP,CHIAG,ZAP,ZAT,IJZY)
C
        ECF = ECF + FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
C
C     BETA
C
        PB  = ROB
        GBB = GRDBB
C
C     IN THE VS98SS SUBROUTINE, WE USE 2*TA AS THE TAU,
C
        TB = TAUXB + TAUYB + TAUZB
C
        CALL VS98SS(PB,GBB,TB,FB,FPB,FGB,FTB,EUB,ZB,
     >              CHIB,EUPB,CHIBP,CHIBG,ZBP,ZBT,IJZY)
C
        ECF = ECF + FB*FTOTWT
C
        VXCB1 = VXCB1 + FPB
C
        DUMBX = DUMBX + 2.0D+00*(FGB*GRADXB)
        DUMBY = DUMBY + 2.0D+00*(FGB*GRADYB)
        DUMBZ = DUMBZ + 2.0D+00*(FGB*GRADZB)
C
        DMXCB = DMXCB + FTB
      ENDIF
C
      P = ROA + ROB
C
      RS   =(PI34/P) ** F13
      RSP  =-RS/(F3*P)
      ZETA =(PA-PB)/P
      DZDA =(F1-ZETA)/P
      DZDB =(-F1-ZETA)/P
C
      CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,
     >           D2LDZZ)
C
      EUEG = P*POTLC - EUA - EUB
      ZAB  = ZA + ZB
      XAB  = CHIA+CHIB
      KAB  = F1 + GAB*(XAB+ZAB)
      XK   = XAB/KAB
      ZK   = ZAB/KAB
C
      CALL GVT4(GCAB,DGDX,DGDZ,XK,ZK,KAB,GAB,GAB,R7,R8,R9,R10,R11,R12)
C
      ECF = ECF + GCAB*EUEG*FTOTWT
C
      DGDPA = DGDX*CHIAP + DGDZ*ZAP
      DGDGA = DGDX*CHIAG
      DGDTA = DGDZ*ZAT
      DGDPB = DGDX*CHIBP + DGDZ*ZBP
      DGDGB = DGDX*CHIBG
      DGDTB = DGDZ*ZBT
C
      EUEGPA = POTLC + P*DLDS*RSP + P*DLDZ*DZDA - EUPA
      EUEGPB = POTLC + P*DLDS*RSP + P*DLDZ*DZDB - EUPB
C
      IF (RHFGVB) THEN
        VXCA1 = VXCA1 + (EUEGPA*GCAB + EUEG*DGDPA)
C
        DUMAX = DUMAX + 2.0D+00*(EUEG*DGDGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(EUEG*DGDGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(EUEG*DGDGA*GRADZA)
C
        DMXCA = DMXCA + EUEG*DGDTA
      END IF
C
      IF (UROHF) THEN
        VXCA1 = VXCA1 + (EUEGPA*GCAB + EUEG*DGDPA)
        VXCB1 = VXCB1 + (EUEGPB*GCAB + EUEG*DGDPB)
C
        DUMAX = DUMAX + 2.0D+00*(EUEG*DGDGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(EUEG*DGDGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(EUEG*DGDGA*GRADZA)
C
        DUMBX = DUMBX + 2.0D+00*(EUEG*DGDGB*GRADXB)
        DUMBY = DUMBY + 2.0D+00*(EUEG*DGDGB*GRADYB)
        DUMBZ = DUMBZ + 2.0D+00*(EUEG*DGDGB*GRADZB)
C
        DMXCA = DMXCA + EUEG*DGDTA
        DMXCB = DMXCB + EUEG*DGDTB
      ENDIF
      END
C
C*MODULE DFTXCC *DECK VS98SS
      SUBROUTINE VS98SS(PX,GX,TX,F,FP,FG,FT,EUEG,Z,CHI,EUEGP,
     >                  CHIP,CHIG,ZP,ZT,IJZY)
      IMPLICIT NONE
C
C     COMPUTE THE SAME-SPIN PART OF THE VS98 CORRELATION FUNCTIONAL
C     FOR ONE GRID POINT AND ONE SPIN-CASE.
C
      INTEGER IJZY
      DOUBLE PRECISION R13, R14, R15, R16, R17, R18
      DOUBLE PRECISION PX, GX, TX, F, FP, FG, FT, Z, ZP, ZT
      DOUBLE PRECISION EUEG, CHI, EUEGP, CHIP, CHIG, CF, GCC
      DOUBLE PRECISION F1, F3, F4, F5, F8
      DOUBLE PRECISION PI, PI34, F13, F53, F83
      DOUBLE PRECISION RS, D, RSP, POTLC, DX, DZ, DGDP, DGDG, DGDT
      DOUBLE PRECISION E,DP, DG, DT, RHOO, RHO53, RHO83
      DOUBLE PRECISION KC, XK, ZK, GC, DGDX, DGDZ
      DOUBLE PRECISION D2LDSS, D2LDSZ, D2LDZZ, DLDS, DLDZ
C
      DATA F1/1.0D+00/, F3/3.0D+00/, F4/4.0D+00/, F5/5.0D+00/,
     >     F8/8.0D+00/, GCC/0.00515088D+00/, CF/9.115599720D+00/
C
C     PARAMETERS FOR VS98
      IF (IJZY.EQ.1) THEN
              R13=   3.270912D-01
              R14=  -3.228915D-02
              R15=  -2.942406D-02
              R16=   2.134222D-03
              R17=  -5.451559D-03
              R18=   1.577575D-02
C     PARAMETERS FOR M06-L
      ELSEIF (IJZY.EQ.2) THEN
              R13=   4.650534D-01
              R14=   1.617589D-01
              R15=   1.833657D-01
              R16=   4.692100D-04
              R17=  -4.990573D-03
              R18=   0.000000D+00
C     PARAMETERS FOR M06-HF
      ELSEIF (IJZY.EQ.3) THEN
              R13=   8.976746D-01
              R14=  -2.345830D-01
              R15=   2.368173D-01
              R16=  -9.913890D-04
              R17=  -1.146165D-02
              R18=   0.000000D+00
C     PARAMETERS FOR M06
      ELSEIF (IJZY.EQ.4) THEN
               R13=  4.905945D-01
               R14= -1.437348D-01
               R15=  2.357824D-01
               R16=  1.871015D-03
               R17= -3.788963D-03
               R18=  0.000000D+00
C     PARAMETERS FOR M06-2X
      ELSEIF (IJZY.EQ.5) THEN
              R13=  6.902145D-01
              R14=  9.847204D-02
              R15=  2.214797D-01
              R16= -1.968264D-03
              R17= -6.775479D-03
              R18=  0.000000D+00
      ENDIF
C
      PI    = F4*ATAN(F1)
      PI34  = F3 / (F4*PI)
      F13   = F1 / F3
      F53   = F5 / F3
      F83   = F8 / F3
      RHOO  = PX
      RHO53 = RHOO**F53
      RHO83 = RHO53*RHOO
C
      RS = (PI34/PX) ** F13
C
      CALL LSDAC(RS,F1,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ)
C
      EUEG = PX*POTLC
      CHI  = GX/RHO83
      Z    =(TX/RHO53) - CF
      KC   = F1 + GCC*(CHI + Z)
      XK   = CHI/KC
      ZK   = Z/KC
      D    = F1 - CHI/(F4*(Z + CF))
C
      CALL GVT4(GC,DGDX,DGDZ,XK,ZK,KC,GCC,GCC,R13,R14,R15,R16,R17,R18)
C
      E = D*EUEG*GC
      F = E
C
      RSP   =-RS/(F3*PX)
      CHIG  = F1/PX**F83
      CHIP  =-F83*CHI/PX
      ZP    =-F53 * TX/RHO83
      ZT    = F1/RHO53
      DZ    = CHI/(F4*(Z + CF)*(Z + CF))
      DX    =-F1/(F4*(Z + CF))
      DP    = DZ*ZP + DX*CHIP
      DG    = DX*CHIG
      DT    = DZ*ZT
      DGDP  = DGDX*CHIP + DGDZ*ZP
      DGDG  = DGDX*CHIG
      DGDT  = DGDZ*ZT
      EUEGP = POTLC + PX*DLDS*RSP
      FP    = DP*EUEG*GC + D*EUEGP*GC + D*EUEG*DGDP
      FG    = DG*EUEG*GC + D*EUEG*DGDG
      FT    = DT*EUEG*GC + D*EUEG*DGDT
      RETURN
      END
C
C*MODULE DFTXCC *DECK GVT4
      SUBROUTINE GVT4(G,DGDX,DGDZ,XK,ZK,K,C,CT,R1,R2,R3,R4,R5,R6)
      IMPLICIT NONE
C
C     EVALUATE THE GVT4 FORM IN THE VS98 FUNCTIONAL
C
C     SOME WORKING VARIABLES
C
      DOUBLE PRECISION G,DGDX,DGDZ,XK,ZK,K,C,CT,R1,R2,R3,R4,R5,R6
      DOUBLE PRECISION SXK,SZK,SK,SC,SCT,SR1,SR2,SR3,SR4,SR5,SR6,SK2
      DOUBLE PRECISION ONE, TWO, THREE
      DATA ONE/1.0D+00/, TWO/2.0D+00/, THREE/3.0D+00/
C
      SXK  = XK
      SZK  = ZK
      SK   = K
      SC   = C
      SCT  = CT
      SR1  = R1
      SR2  = R2
      SR3  = R3
      SR4  = R4
      SR5  = R5
      SR6  = R6
      SK2  = SK*SK
C
      G    =(SR1 + SR2*SXK + SR3*SZK
     >     + SR4*SXK*SXK
     >     + SR5*SZK*SXK
     >     + SR6*SZK*SZK)/SK
      DGDX =(-SR1*SC
     >     +  SR2*(ONE-TWO*SC*SXK)
     >     -  TWO*SR3*SZK*SC
     >     +  SR4*(TWO*SXK-THREE*SXK*SXK*SC)
     >     +  SR5*(SZK -THREE*SZK*SXK*SC)
     >     -  THREE*SR6*SZK*SZK*SC)/SK2
      DGDZ =(-SR1*SCT
     >     -  TWO*SR2*SXK*SCT
     >     +  SR3*(ONE-TWO*SZK*SCT)
     >     -  THREE*SR4*SXK*SXK*SCT
     >     +  SR5*(SXK-THREE*SXK*SZK*SCT)
     >     +  SR6*(TWO*SZK-THREE*SZK*SZK*SCT))/SK2
      RETURN
      END
C*MODULE DFTXCC *DECK VS98XF
      SUBROUTINE VS98XF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                  GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                  FTOTWT,XGRD,
     >                  VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                  VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                  TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C
C     REFERENCE
C     [A] T. V. VOORHIS & G. E. SCUSERIA, J. CHEM. PHYS. 109, 400 (1998)
C     [B] Y. ZHAO & D. G. TRUHLAR, J. CHEM. PHYS. 125, 194101 (2006)
C
      IMPLICIT NONE
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION XGRD
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION RRHO, RHO43, RHO13, RHOO, RHO53, RHO83
      DOUBLE PRECISION GAMMA
C
      DOUBLE PRECISION TAUN,TAUU
      DOUBLE PRECISION F43, F53, F83
      DOUBLE PRECISION GX, GG, X, Z, KX,XK,ZK
      DOUBLE PRECISION ONE, TWO
      DOUBLE PRECISION CF, AXLSDA, R1, R2, R3, R4, R5, R6
C
C     FUNCTIONAL DERIVATIVES
C
      DOUBLE PRECISION DXDR, DXDG, DZDR, DZDT, DGDX, DGDZ
C
      PARAMETER (CF  = 9.115599720D+00, AXLSDA = -0.9305257363491D+00)
      PARAMETER (GG  = 0.00186726D+00)
      PARAMETER (F43 = 4.0D+00/3.0D+00,F53=5.0D+00/3.0D+00)
      PARAMETER (F83 = 8.0D+00/3.0D+00)
      PARAMETER (ONE = 1.0D+00, TWO = 2.0D+00)
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR VS98
        R1 = -9.800683D-01
        R2 = -3.556788D-03
        R3 =  6.250326D-03
        R4 = -2.354518D-05
        R5 = -1.282732D-04
        R6 =  3.574822D-04
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M06-L
        R1 =  6.012244D-01*AXLSDA
        R2 =  4.748822D-03*AXLSDA
        R3 = -8.635108D-03*AXLSDA
        R4 = -9.308062D-06*AXLSDA
        R5 =  4.482811D-05*AXLSDA
        R6 =  0.000000D+00
      ELSEIF (IJZY.EQ.3) THEN
C     PARAMETERS FOR M06-HF
        R1 = -1.179732D-01*AXLSDA
        R2 = -2.500000D-03*AXLSDA
        R3 = -1.180065D-02*AXLSDA
        R4 =  0.000000D+00
        R5 =  0.000000D+00
        R6 =  0.000000D+00
      ELSEIF (IJZY.EQ.4) THEN
C     PARAMETERS FOR M06
        R1 =  1.422057D-01*AXLSDA
        R2 =  7.370319D-04*AXLSDA
        R3 = -1.601373D-02*AXLSDA
        R4 =  0.000000D+00
        R5 =  0.000000D+00
        R6 =  0.000000D+00
      ENDIF
C
      IF (RHFGVB) THEN
        RHOO  = ROA
        RHO43 = RHOO**F43
        RRHO  = 1.0D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
        RHO83 = RHO53*RHOO
C
        TAUN = TAUXA + TAUYA + TAUZA
        TAUU = TAUN
C
        GAMMA = GRDAA
        X     = GAMMA/RHO83
        DXDR  =-F83*X*RRHO
        DXDG  = ONE/RHO83
        Z     = TAUU/RHO53 - CF
        DZDR  =-F53 * TAUU/RHO83
        DZDT  = ONE/RHO53
C
        KX = ONE + GG*X + GG*Z
        XK = X/KX
        ZK = Z/KX
C
        CALL GVT4(GX,DGDX,DGDZ,XK,ZK,KX,GG,GG,R1,R2,R3,R4,R5,R6)
C
        XGRD = XGRD + TWO*RHO43*GX*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        VXCA1 = VXCA1 + F43*RHO13*GX + RHO43*(DGDX*DXDR + DGDZ*DZDR)
C
        DUMAX = DUMAX + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADZA)
C
        DMXCA = DMXCA + RHO43*(DGDZ*DZDT)
      END IF
C
      IF (UROHF) THEN
C
C     ALPHA
C
        RHOO  = ROA
        RHO43 = RHOO**F43
        RRHO  = 1.0D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
        RHO83 = RHO53*RHOO
C
        TAUN =(TAUXA + TAUYA + TAUZA)*(ONE/TWO)
        TAUU = TAUN*TWO
C
        GAMMA = GRDAA
C
        X    = GAMMA/RHO83
        DXDR = -F83*X*RRHO
        DXDG = ONE/RHO83
        Z    = TAUU/RHO53 - CF
        DZDR = -F53 * TAUU/RHO83
        DZDT = ONE/RHO53
C
        KX = ONE + GG*X + GG*Z
        XK = X/KX
        ZK = Z/KX
C
        CALL GVT4(GX,DGDX,DGDZ,XK,ZK,KX,GG,GG,R1,R2,R3,R4,R5,R6)
C
        XGRD = XGRD + RHO43*GX*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        VXCA1 = VXCA1 + F43*RHO13*GX +
     >                  RHO43*(DGDX*DXDR + DGDZ*DZDR)
C
        DUMAX = DUMAX + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADZA)
C
        DMXCA = DMXCA + RHO43*(DGDZ*DZDT)
C
C     BETA
C
        RHOO  = ROB
        RHO43 = RHOO**F43
        RRHO  = 1.0D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
        RHO83 = RHO53*RHOO
C
        TAUN =(TAUXB + TAUYB + TAUZB)*(ONE/TWO)
        TAUU = TWO*TAUN
C
        GAMMA = GRDBB
C
        X    = GAMMA/RHO83
        DXDR = -F83*X*RRHO
        DXDG = ONE/RHO83
        Z    = TAUU/RHO53 - CF
        DZDR = -F53 * TAUU/RHO83
        DZDT = ONE/RHO53
C
        KX = ONE + GG*X + GG*Z
        XK = X/KX
        ZK = Z/KX
C
        CALL GVT4(GX,DGDX,DGDZ,XK,ZK,KX,GG,GG,R1,R2,R3,R4,R5,R6)
C
        XGRD = XGRD + RHO43*GX*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        VXCB1 = VXCB1 + F43*RHO13*GX +
     >                  RHO43*(DGDX*DXDR + DGDZ*DZDR)
C
        DUMBX = DUMBX + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADXB)
        DUMBY = DUMBY + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADYB)
        DUMBZ = DUMBZ + 2.0D+00*(RHO43*(DGDX*DXDG)*GRADZB)
C
        DMXCB = DMXCB + RHO43*(DGDZ*DZDT)
      ENDIF
      RETURN
      END
C*MODULE DFTXCC *DECK M06CF
      SUBROUTINE M06CF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,ECF,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C
C     REFERENCES:
C     [A] ZHAO, Y. & TRUHLAR, D. G. J. CHEM. PHYS. 2006, 125, 194101;
C     [B] ZHAO, Y. & TRUHLAR, D. G. J. PHYS. CHEM. A (2006),110(49),
C         13126-13130.
C
      IMPLICIT NONE
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION ECF
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION F1, F2, F3, F4,COPP
      DATA F1/1.0D+00/,F2/2.0D+00/,F3/3.0D+00/,F4/4.0D+00/,
     >     COPP/0.0031D+00/
C
C     CALL TO THE M05CSS SUBROUTINE
C
      DOUBLE PRECISION PA,GAA,TA,FA,FPA,FGA,FTA,EUA,CHIA,EUPA,
     >                 CHIAP,CHIAG
      DOUBLE PRECISION PB,GBB,TB,FB,FPB,FGB,FTB,EUB,CHIB,EUPB,
     >                 CHIBP,CHIBG
C
      DOUBLE PRECISION  SOP, SOPP0, SOPP1,SOPP2, SOPP3, SOPP4
      DOUBLE PRECISION PI, PI34, F13,RS,RSP,ZETA,
     >                 DZDA,DZDB,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ
      DOUBLE PRECISION P, EUEG, U, W
      DOUBLE PRECISION DUDCHIA,DUDCHIB,DUDPA,DUDPB,DUDGA,DUDGB,
     >                 DWDU,DWDPA,DWDPB, DWDGA,DWDGB,EUEGPA,EUEGPB
C
      SOP=1.0D0
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M06-L CORRELATION
         SOPP0 =  6.042374D-01
         SOPP1 =  1.776783D+02
         SOPP2 = -2.513252D+02
         SOPP3 =  7.635173D+01
         SOPP4 = -1.255699D+01
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M06-HF CORRELATION
         SOPP0 =  1.674634D+00
         SOPP1 =  5.732017D+01
         SOPP2 =  5.955416D+01
         SOPP3 = -2.311007D+02
         SOPP4 =  1.255199D+02
      ELSEIF (IJZY.EQ.3) THEN
C     PARAMETERS FOR M06 CORRELATION
         SOPP0 =  3.741539D+00
         SOPP1 =  2.187098D+02
         SOPP2 = -4.531252D+02
         SOPP3 =  2.936479D+02
         SOPP4 = -6.287470D+01
      ELSEIF (IJZY.EQ.4) THEN
C     PARAMETERS FOR M06-2X CORRELATION
         SOPP0 =  8.833596D-01
         SOPP1 =  3.357972D+01
         SOPP2 = -7.043548D+01
         SOPP3 =  4.978271D+01
         SOPP4 = -1.852891D+01
      ENDIF
C
      CALL VS98CF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >            GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >            FTOTWT,ECF,
     >            VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >            VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >            TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY+1)
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
C
      IF (RHFGVB) THEN
C
C     GET DENSITY, GRADIENT, & TAU FOR THE ALPHA SPIN FROM THE TOTAL
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE M05CSS SUBROUTINE, WE USE 2*TA AS THE TAU, SO WE DO NOT
C     DIVIDE THE TAU BY 2 HERE
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL M06CSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG,IJZY)
C
        PB    = PA
        GBB   = GAA
        TB    = TA
        FB    = FA
        FPB   = FPA
        FGB   = FGA
        FTB   = FTA
        EUB   = EUA
        CHIB  = CHIA
        EUPB  = EUPA
        CHIBP = CHIAP
        CHIBG = CHIAG
C
        ECF = ECF + 2.0D+00*FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
      END IF
      IF (UROHF) THEN
C
C       ALPHA
C
        PA  = ROA
        GAA = GRDAA
C
C  IN THE M05CSS SUBROUTINE, WE USE 2*TA AS THE TAU
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL M06CSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG,IJZY)
C
        ECF = ECF + FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
C
C       BETA
C
        PB  = ROB
        GBB = GRDBB
C
C     IN THE M05CSS SUBROUTINE, WE USE 2*TB AS THE TAU,
C
        TB = TAUXB + TAUYB + TAUZB
C
        CALL M06CSS(PB,GBB,TB,FB,FPB,FGB,FTB,EUB,
     >               CHIB,EUPB,CHIBP,CHIBG,IJZY)
C
        ECF = ECF + FB*FTOTWT
C
        VXCB1 = VXCB1 + FPB
C
        DUMBX = DUMBX + 2.0D+00*(FGB*GRADXB)
        DUMBY = DUMBY + 2.0D+00*(FGB*GRADYB)
        DUMBZ = DUMBZ + 2.0D+00*(FGB*GRADZB)
C
        DMXCB = DMXCB + FTB
      ENDIF
C
      P    = PA + PB
      RS   =(PI34/P) ** F13
      RSP  =-RS/(F3*P)
      ZETA =(PA-PB)/P
      DZDA =(F1-ZETA)/P
      DZDB =(-F1-ZETA)/P
C
      CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,
     >           D2LDZZ)
C
      EUEG = P*POTLC - EUA - EUB
      U    = COPP*(CHIA+CHIB)/(F1 + COPP*(CHIA+CHIB))
      W    = SOPP0+U*(SOPP1+U*(SOPP2+U*(SOPP3+U*SOPP4)))
C
      ECF = ECF + SOP*EUEG*W*FTOTWT
C
      DUDCHIA = COPP/(F1 + COPP*(CHIA+CHIB))**2
      DUDCHIB = COPP/(F1 + COPP*(CHIA+CHIB))**2
C
      DUDPA = DUDCHIA*CHIAP
      DUDPB = DUDCHIB*CHIBP
      DUDGA = DUDCHIA*CHIAG
      DUDGB = DUDCHIB*CHIBG
      DWDU  = SOPP1+U*(F2*SOPP2+U*(F3*SOPP3+U*F4*SOPP4))
      DWDPA = DWDU*DUDPA
      DWDPB = DWDU*DUDPB
      DWDGA = DWDU*DUDGA
      DWDGB = DWDU*DUDGB
C
      EUEGPA = POTLC + P*DLDS*RSP + P*DLDZ*DZDA - EUPA
      EUEGPB = POTLC + P*DLDS*RSP + P*DLDZ*DZDB - EUPB
C
      IF (RHFGVB) THEN
        VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
C
        DUMAX = DUMAX + 2.0D+00*SOP*EUEG*DWDGA*GRADXA
        DUMAY = DUMAY + 2.0D+00*SOP*EUEG*DWDGA*GRADYA
        DUMAZ = DUMAZ + 2.0D+00*SOP*EUEG*DWDGA*GRADZA
      END IF
C
      IF (UROHF) THEN
        VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
C
        VXCB1 = VXCB1 + SOP*(EUEGPB*W + EUEG*DWDPB)
C
        DUMAX = DUMAX + 2.0D+00*SOP*EUEG*DWDGA*GRADXA
        DUMAY = DUMAY + 2.0D+00*SOP*EUEG*DWDGA*GRADYA
        DUMAZ = DUMAZ + 2.0D+00*SOP*EUEG*DWDGA*GRADZA
C
        DUMBX = DUMBX + 2.0D+00*SOP*EUEG*DWDGB*GRADXB
        DUMBY = DUMBY + 2.0D+00*SOP*EUEG*DWDGB*GRADYB
        DUMBZ = DUMBZ + 2.0D+00*SOP*EUEG*DWDGB*GRADZB
      ENDIF
      RETURN
      END
C
C*MODULE DFTXCC *DECK M06CSS
      SUBROUTINE M06CSS(PX,GX,TX,F,FP,FG,FT,EUEG,CHI,EUEGP,
     >                  CHIP,CHIG,IJZY)
      IMPLICIT NONE
C
C     COMPUTE THE SAME-SPIN PART OF THE M05 CORRELATION FUNCTIONAL
C     FOR ONE GRID POINT AND ONE SPIN-CASE.
C
      INTEGER IJZY
      DOUBLE PRECISION PX, GX, TX, F, FP, FG, FT
      DOUBLE PRECISION EUEG, CHI, EUEGP, CHIP, CHIG
      DOUBLE PRECISION PT25, F1, F2, F3, F4, F8
      DOUBLE PRECISION SS, SSS0,SSS1, SSS2, SSS3, SSS4, CSS
      DOUBLE PRECISION PI, PI34, F13, F83
      DOUBLE PRECISION RS, D, FSCC, RSP, DFSCCP, DFSCCG
      DOUBLE PRECISION E, W, U, DFSCCT, DUDCHI, DWDU, DWDP, DWDG
      DOUBLE PRECISION D2LDSS,D2LDSZ,D2LDZZ,POTLC,DLDS,DLDZ
C
      DATA PT25/0.25D+00/, F1/1.0D+00/, F2/2.0D+00/, F3/3.0D+00/,
     >     CSS/0.06D+00/ , F4/4.0D+00/, F8/8.0D+00/
C
      SS=1.0D+00
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M06-L CORRELATION
         SSS0 =  5.349466D-01
         SSS1 =  5.396620D-01
         SSS2 = -3.161217D+01
         SSS3 =  5.149592D+01
         SSS4 = -2.919613D+01
      ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M06-HF CORRELATION
         SSS0 =  1.023254D-01
         SSS1 = -2.453783D+00
         SSS2 =  2.913180D+01
         SSS3 = -3.494358D+01
         SSS4 =  2.315955D+01
      ELSEIF (IJZY.EQ.3) THEN
C     PARAMETERS FOR M06 CORRELATION
         SSS0 =  5.094055D-01
         SSS1 = -1.491085D+00
         SSS2 =  1.723922D+01
         SSS3 = -3.859018D+01
         SSS4 =  2.845044D+01
      ELSEIF (IJZY.EQ.4) THEN
C     PARAMETERS FOR M06-2X CORRELATION
         SSS0 =  3.097855D-01
         SSS1 = -5.528642D+00
         SSS2 =  1.347420D+01
         SSS3 = -3.213623D+01
         SSS4 =  2.846742D+01
      ENDIF
C
      PI    = F4*ATAN(F1)
      PI34  = F3 / (F4*PI)
      F13   = F1 / F3
      F83   = F8 / F3
      RS    =(PI34/PX) ** F13
C
      CALL LSDAC(RS,F1,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ)
C
      EUEG = PX*POTLC
      D    = TX - PT25*GX/PX
C
      CHI  = GX/PX**F83
      U    = CSS*CHI/(F1 + CSS*CHI)
      W    = SSS0+U*(SSS1+U*(SSS2+U*(SSS3+U*SSS4)))
      FSCC = D/TX
      E    = FSCC*W*EUEG
      F    = E*SS
      RSP  =-RS/(F3*PX)
      CHIG = F1/PX**F83
      CHIP =-F83*CHI/PX
C
      DFSCCP = PT25*GX/(TX*PX**2)
      DFSCCG =-PT25/(TX*PX)
      DFSCCT = PT25*GX/(PX*TX**2)
      DUDCHI = CSS/((F1+CSS*CHI)**2)
      DWDU   = SSS1+U*(F2*SSS2+U*(F3*SSS3+U*F4*SSS4))
      DWDP   = DWDU*DUDCHI*CHIP
      DWDG   = DWDU*DUDCHI*CHIG
C
      EUEGP = POTLC + PX*DLDS*RSP
C
      FP = SS*(DFSCCP*W*EUEG
     >   + FSCC*DWDP*EUEG
     >   + FSCC*W*EUEGP)
      FG = SS*(DFSCCG*W*EUEG
     >   + FSCC*DWDG*EUEG)
      FT = SS*(DFSCCT*W*EUEG)
      RETURN
      END
C*MODULE DFTXCC *DECK M06XF
      SUBROUTINE M06XF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,XGRD,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C
C     REFERENCES:
C     [A] ZHAO, Y. & TRUHLAR, D. G. J. CHEM. PHYS. 2006, 125, 194101;
C     [B] ZHAO, Y. & TRUHLAR, D. G. J. PHYS. CHEM. A (2006),110(49),
C         13126-13130.
C
      IMPLICIT NONE
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION XGRD
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION AT1, AT2, AT3, AT4, AT5, AT6, AT7, AT8, AT9
      DOUBLE PRECISION AT, AT10, AT11, AT0, C1, C2, FL, FNL
      DOUBLE PRECISION RRHO, RHO43, RHO13, RHOO, RHO53
      DOUBLE PRECISION GAMMA2, GAMMA
      DOUBLE PRECISION TAUUEG, TSIG, WSIG, W1, W2, W3, W4, W5, W6
      DOUBLE PRECISION W7, W8, W9, W10, W11, FSIG, PI
C
      DOUBLE PRECISION TAUN,TAUU
      DOUBLE PRECISION F23, F53, F13
      DOUBLE PRECISION F4O3
      DOUBLE PRECISION ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT
      DOUBLE PRECISION NINE, F10, F11
      DOUBLE PRECISION CS, AX, P32, S, S2, EN, ED, E, DE, DEN, DED
C
C     FUNCTIONAL DERIVATIVES
C
      DOUBLE PRECISION DFDW, DWDT, DTDR, DTDTAU, DGGADR, DFDR
      DOUBLE PRECISION DFDTAU, DGGADG
C
      PARAMETER(PI=3.1415926535897932384626433832795D+00)
C
      PARAMETER(F13=1.0D+00/3.0D+00,F4O3=4.0D+00/3.0D+00)
      PARAMETER(F23=2.0D+00/3.0D+00, F53=5.0D+00/3.0D+00)
C
      PARAMETER( ONE=1.0D+00, TWO=2.0D+00, THREE=3.0D+00,  FOUR=4.0D+00,
     >          FIVE=5.0D+00, SIX=6.0D+00, SEVEN=7.0D+00, EIGHT=8.0D+00,
     >          NINE=9.0D+00, F10=10.D+00,   F11=11.D+00)
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M06-L
        AT0  =  3.987756D-01
        AT1  =  2.548219D-01
        AT2  =  3.923994D-01
        AT3  = -2.103655D+00
        AT4  = -6.302147D+00
        AT5  =  1.097615D+01
        AT6  =  3.097273D+01
        AT7  = -2.318489D+01
        AT8  = -5.673480D+01
        AT9  =  2.160364D+01
        AT10 =  3.421814D+01
        AT11 = -9.049762D+00
       ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M06-HF
        AT0  =  1.179732D-01
        AT1  = -1.066708D+00
        AT2  = -1.462405D-01
        AT3  =  7.481848D+00
        AT4  =  3.776679D+00
        AT5  = -4.436118D+01
        AT6  = -1.830962D+01
        AT7  =  1.003903D+02
        AT8  =  3.864360D+01
        AT9  = -9.806018D+01
        AT10 = -2.557716D+01
        AT11 =  3.590404D+01
       ELSEIF (IJZY.EQ.3) THEN
C     PARAMETERS FOR M06
        AT0  =  5.877943D-01
        AT1  = -1.371776D-01
        AT2  =  2.682367D-01
        AT3  = -2.515898D+00
        AT4  = -2.978892D+00
        AT5  =  8.710679D+00
        AT6  =  1.688195D+01
        AT7  = -4.489724D+00
        AT8  = -3.299983D+01
        AT9  = -1.449050D+01
        AT10 =  2.043747D+01
        AT11 =  1.256504D+01
       ELSEIF (IJZY.EQ.4) THEN
C     PARAMETERS FOR M06-2X
        AT0  =  4.600000D-01
        AT1  = -2.206052D-01
        AT2  = -9.431788D-02
        AT3  =  2.164494D+00
        AT4  = -2.556466D+00
        AT5  = -1.422133D+01
        AT6  =  1.555044D+01
        AT7  =  3.598078D+01
        AT8  = -2.722754D+01
        AT9  = -3.924093D+01
        AT10 =  1.522808D+01
        AT11 =  1.522227D+01
      ENDIF
C
      AT = 1.0D+00
      IF (IJZY.LT.4) CALL VS98XF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                    GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                    FTOTWT,XGRD,
     >                    VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                    VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                    TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY+1)
C
      C1 = 0.2195149727645171D+00
      C2 = C1/0.804D+00
C
C     SCALE FACTORS FOR LOCAL AND NON-LOCAL CONTRIBUTIONS.
C
      FL  = 1.0D+00
      FNL = 1.0D+00
      CS  = 0.5D+00/(3.0D+00*PI*PI)**F13
      P32 =(3.D+00*PI**2)**F23
      AX  =(-0.75D+00)*(3.0D+00/PI)**F13
C
      IF (RHFGVB)THEN
        RHOO  = TWO*ROA
        RHO43 = RHOO**F4O3
        RRHO  = 1D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = TAUXA + TAUYA + TAUZA
        TAUU   = TAUN
        TAUUEG = 0.3D+00*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT0 + AT1*W1 + AT2*W2 + AT3*W3
     >                   + AT4*W4 + AT5*W5 + AT6*W6   + AT7*W7
     >                   + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = 4.0D+00*GRDAA
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*FSIG*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     = (DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = (0.5D+00*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TAUUEG/TAUU**2
        DGGADR = F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG =(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + DGGADR*FSIG+(FL+FNL*E)*AX*RHO43*DFDR
C
        DUMAX = DUMAX + 2.0D+00*TWO*DGGADG*AX*RHO43*FSIG*GRADXA
        DUMAY = DUMAY + 2.0D+00*TWO*DGGADG*AX*RHO43*FSIG*GRADYA
        DUMAZ = DUMAZ + 2.0D+00*TWO*DGGADG*AX*RHO43*FSIG*GRADZA
C
        DMXCA = DMXCA + 0.5D+00*RHO43*AX*(FL+FNL*E)*DFDTAU
      END IF
C
      IF (UROHF) THEN
C
C  USE SPIN DENSITY FUNCTIONAL THEORY IE N-->2N
C                               EX=(1/2)EX[2*ALPHA] + (1/2)EX[2*BETA]
C
C     ALPHA
C
        RHOO  = TWO*ROA
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXA + TAUYA + TAUZA)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D+00*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
C
        FSIG = AT*(AT0    + AT1*W1 + AT2*W2   + AT3*W3
     >       +     AT4*W4 + AT5*W5 + AT6*W6   + AT7*W7
     >       +     AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDAA
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
C
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*FSIG*0.5D+00*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN   = TWO*C1*S
        DED   = TWO*C2*S
        DE    =(DEN*ED-EN*DED)/(ED*ED)
C
        DFDW = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >       +     FOUR*AT4*W3      + FIVE*AT5*W4
     >       +     SIX*AT6*W5       + SEVEN*AT7*W6
     >       +     EIGHT*AT8*W7     + NINE*AT9*W8
     >       +     F10*AT10*W9      + F11*AT11*W10)
C
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D+00*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + (DGGADR*FSIG+(FL+FNL*E)*AX*RHO43*DFDR)*0.5D+00
C
        DUMAX = DUMAX + 2.0D+00*DGGADG*AX*RHO43*FSIG*0.5D+00*GRADXA
        DUMAY = DUMAY + 2.0D+00*DGGADG*AX*RHO43*FSIG*0.5D+00*GRADYA
        DUMAZ = DUMAZ + 2.0D+00*DGGADG*AX*RHO43*FSIG*0.5D+00*GRADZA
C
        DMXCA = DMXCA + 0.5D+00*0.5D+00*RHO43*AX*(FL+FNL*E)*DFDTAU
C
C     BETA
C
        RHOO  = TWO*ROB
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D+00/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXB + TAUYB + TAUZB)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D+00*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
C
        FSIG =AT*(AT0    + AT1*W1 + AT2*W2   + AT3*W3
     >       +    AT4*W4 + AT5*W5 + AT6*W6   + AT7*W7
     >       +    AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDBB
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*FSIG*0.5D+00*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN   = TWO*C1*S
        DED   = TWO*C2*S
        DE    =(DEN*ED-EN*DED)/(ED*ED)
C
        DFDW = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >       +     FOUR*AT4*W3      + FIVE*AT5*W4
     >       +     SIX*AT6*W5       + SEVEN*AT7*W6
     >       +     EIGHT*AT8*W7     + NINE*AT9*W8
     >       +     F10*AT10*W9      + F11*AT11*W10)
C
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D+00*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCB1 = VXCB1 + (DGGADR*FSIG + (FL+FNL*E)*AX*RHO43*DFDR)*0.5D+00
C
        DUMBX = DUMBX + 2.0D+00* DGGADG*AX*RHO43*FSIG*0.5D+00*GRADXB
        DUMBY = DUMBY + 2.0D+00* DGGADG*AX*RHO43*FSIG*0.5D+00*GRADYB
        DUMBZ = DUMBZ + 2.0D+00* DGGADG*AX*RHO43*FSIG*0.5D+00*GRADZB
C
        DMXCB = DMXCB + 0.5D+00*0.5D+00*RHO43*AX*(FL+FNL*E)*DFDTAU
      ENDIF
      RETURN
      END
C*MODULE DFTXCC *DECK M08CF
      SUBROUTINE M08CF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,GRDAB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,ECF,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C***********************************************************************
C                                                                      *
C  M08c evaluates the correlation part of the M08 and M11 suite of     *
C  functionals on the grid.                                            *
C  !!! Second derivatives are not available yet.                       *
C                                                                      *
C  Ref: (a) Zhao, Y.  and Truhlar, D. G. JCTC, 2008, 4 , 1849          *
C       (b) Peverati, R. and Truhlar, D. G. J.P.C.Lett. 2011, 2, 2810  *
C       (c) Peverati, R. and Truhlar, D. G. J.P.C.Lett. 2011, 3, 117   *
C                                                                      *
C       ijzy - 1 M08-HX (a)                                            *
C       ijzy - 2 M08-SO (a)                                            *
C       ijzy - 3 M11 (b)                                               *
C       ijzy - 3 M11-L (c)                                             *
C                                                                      *
C    *  OUTPUT:                                                        *
C    *     F      - Functional values                                  *
C    *     D1F    - First derivatives with respect to RA, RB, GA, GB   *
C    *              TA, TB                                             *
C    *                                                                 *
C    *  INPUT:                                                         *
C    *     RA,B   - Spin densities                                     *
C    *     D1RA,B - Spin density gradients                             *
C    *     TA,B   - Spin kinetic energy densities                      *
C    *     NGrid  - number of grids                                    *
C                                                                      *
C YZ (12/08)                                                           *
C RP (11/11)                                                           *
C                                                                      *
C***********************************************************************
C       CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,DUMMY,DUMMY,DUMMY)
C       CALL LSDACSOKCF(RS,ZETA,POTLC,DLDS,DLDZ)
C       CALL H0SOK(RHO,GRHO,RS,ZETA,POTLC,H,DHDR,DHDG,DHDRS,DHDZ)
C       CALL H0SOKSLIM(RHO,GRHO,RS,ZETA,POTLC,H,DHDR,DHDG,DHDRS,DHDZ)
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION ECF
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB, GRDAB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION DUMMY
      DOUBLE PRECISION LSDA
C     INTEGER NGRID
C     DOUBLE PRECISION  F(NGRID),D1F(NGRID,7),RA(NGRID),RB(NGRID),
C    $        D1RA(NGRID,3),D1RB(NGRID,3),TA(NGRID),TB(NGRID)
C     INTEGER DRA, DRB, DTA, DTB, DGA, DGB, DGC
C
      DOUBLE PRECISION ZERO, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10,F11
      DATA ZERO/0.0D0/, F1/1.0D0/,  F2/2.0D0/,  F3/3.0D0/,
     >       F4/4.0D0/, F5/5.0D0/,  F6/6.0D0/,  F7/7.0D0/,
     >       F8/8.0D0/, F9/9.0D0/,F10/10.0D0/, F11/11.0D0/
      PARAMETER( PI = 3.1415926535897932384626433832795D0 )
C     F4O3 = F4 / F3
      F1O3 = F1 / F3
      F5O3 = F5 / F3
      F2O3 = F2 / F3
      TINY = 1.0D-8
      PI34 = F3/(F4*PI)
C
      DUMMY = ZERO
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M08-HX
        AT0 =    1.0000000D+00
        AT1 =   -4.0661387D-01
        AT2 =   -3.3232530D+00
        AT3 =    1.5540980D+00
        AT4 =    4.4248033D+01
        AT5 =   -8.4351930D+01
        AT6 =   -1.1955581D+02
        AT7 =    3.9147081D+02
        AT8 =    1.8363851D+02
        AT9 =   -6.3268223D+02
        AT10=   -1.1297403D+02
        AT11=    3.3629312D+02
C
        BT0 =    1.3812334D+00
        BT1 =   -2.4683806D+00
        BT2 =   -1.1901501D+01
        BT3 =   -5.4112667D+01
        BT4 =    1.0055846D+01
        BT5 =    1.4800687D+02
        BT6 =    1.1561420D+02
        BT7 =    2.5591815D+02
        BT8 =    2.1320772D+02
        BT9 =   -4.8412067D+02
        BT10=   -4.3430813D+02
        BT11=    5.6627964D+01
       ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M08-SO
        AT0 =    1.0000000D+00
        AT1 =    0.0000000D+00
        AT2 =   -3.9980886D+00
        AT3 =    1.2982340D+01
        AT4 =    1.0117507D+02
        AT5 =   -8.9541984D+01
        AT6 =   -3.5640242D+02
        AT7 =    2.0698803D+02
        AT8 =    4.6037780D+02
        AT9 =   -2.4510559D+02
        AT10=   -1.9638425D+02
        AT11=    1.1881459D+02
C
        BT0 =    1.0000000D+00
        BT1 =   -4.4117403D+00
        BT2 =   -6.4128622D+00
        BT3 =    4.7583635D+01
        BT4 =    1.8630053D+02
        BT5 =   -1.2800784D+02
        BT6 =   -5.5385258D+02
        BT7 =    1.3873727D+02
        BT8 =    4.1646537D+02
        BT9 =   -2.6626577D+02
        BT10=    5.6676300D+01
        BT11=    3.1673746D+02
c
       ELSEIF (IJZY.EQ.3) THEN
C     PARAMETERS FOR M11
        AT0 =    1.0000000D+00
        AT1 =    0.0000000D+00
        AT2 =   -3.8933250D+00
        AT3 =   -2.1688455D+00
        AT4 =    9.3497200D+00
        AT5 =   -1.9845140D+01
        AT6 =    2.3455253D+00
        AT7 =    7.9246513D+01
        AT8 =    9.6042757D+00
        AT9 =   -6.7856719D+01
        AT10=   -9.1841067D+00
        AT11=    0.0000000D+00
C
        BT0 =    7.2239798D-01
        BT1 =    4.3730564D-01
        BT2 =   -1.6088809D+01
        BT3 =   -6.5542437D+01
        BT4 =    3.2057230D+01
        BT5 =    1.8617888D+02
        BT6 =    2.0483468D+01
        BT7 =   -7.0853739D+01
        BT8 =    4.4483915D+01
        BT9 =   -9.4484747D+01
        BT10=   -1.1459868D+02
        BT11=    0.0000000D+00
       ELSEIF (IJZY.EQ.4) THEN
C     PARAMETERS FOR M11-L
        AT0 =    1.000000D+00
        AT1 =    0.000000D+00
        AT2 =    2.750880D+00
        AT3 =   -1.562287D+01
        AT4 =    9.363381D+00
        AT5 =    2.141024D+01
        AT6 =   -1.424975D+01
        AT7 =   -1.134712D+01
        AT8 =    1.022365D+01
        AT9 =    0.000000D+00
        AT10=    0.000000D+00
        AT11=    0.000000D+00
C
        BT0 =    1.000000D+00
        BT1 =   -9.082060D+00
        BT2 =    6.134682D+00
        BT3 =   -1.333216D+01
        BT4 =   -1.464115D+01
        BT5 =    1.713143D+01
        BT6 =    2.480738D+00
        BT7 =   -1.007036D+01
        BT8 =   -1.117521D-01
        BT9 =    0.000000D+00
        BT10=    0.000000D+00
        BT11=    0.000000D+00
C
      ENDIF
C
      IF (RHFGVB) THEN
       RHOA = ROA
       RHOB = RHOA
       TAUA =(TAUXA + TAUYA + TAUZA)/F2
       TAUB = TAUA
       Y    = GRDAA * 4.0D+00
       RHO  = RHOA  + RHOB
       TAU  = TAUA  + TAUB
      END IF
C
      IF (UROHF) THEN
       RHOA = ROA
       RHOB = ROB
       TAUA =(TAUXA + TAUYA + TAUZA)/F2
       TAUB =(TAUXB + TAUYB + TAUZB)/F2
       Y    = GRDAA + GRDBB + 2.00D+00*GRDAB
       RHO  = RHOA + RHOB
       TAU  = TAUA + TAUB
      END IF
C
      IF((RHO.GT.TINY).AND.(TAU.GT.TINY)) THEN
        RS     =(PI34/RHO)**F1O3
        ZETA   =(RHOA-RHOB)/RHO
        TAUUEG = F3*(F3*PI*PI)**F2O3*RHO**F5O3/F10
        TSIG   = TAUUEG/TAU
        WSIG   =(TSIG - F1)/(TSIG + F1)
        FSIG1  =(AT0 + WSIG*(AT1 + WSIG*(AT2 + WSIG*(AT3 + WSIG*(
     >           AT4 + WSIG*(AT5 + WSIG*(AT6 + WSIG*(AT7 + WSIG*(
     >           AT8 + WSIG*(AT9 + WSIG*(AT10+ WSIG*AT11)))))))))))
C
        FSIG2  =(BT0 + WSIG*(BT1 + WSIG*(BT2 + WSIG*(BT3 + WSIG*(
     >           BT4 + WSIG*(BT5 + WSIG*(BT6 + WSIG*(BT7 + WSIG*(
     >           BT8 + WSIG*(BT9 + WSIG*(BT10+WSIG*BT11)))))))))))
C
        GRHO   = SQRT(Y)
C
C      LSDAC IS A ROUTINE TO EVALUATE THE PERDEW-WANG-91 CORRELATION
C      FUNCTIONAL LOCAL SPIN DENSITY APPROXIMATION (LSDA) TO THE
C      CORRELATION ENERGY OF A UNIFORM ELECTRON GAS.
C            (PHYS. REV. B 45, 13244 (1992)).
C      USERS SHOULD PROVIDE THEIR OWN FOR LSDA CORRELATION FUNCTIONAL
C      OR THEY MAY FIND THIS ROUTINE ON KIERON BURKE'S WEB SITE.
C
C       CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,DUMMY,DUMMY,DUMMY)
C
        CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,DUMMY,DUMMY,DUMMY)
C       CALL LSDACSOKCF(RS,ZETA,POTLC,DLDS,DLDZ)
C
        LSDA = RHO*POTLC
C
C      PBEH0 IS A SUBROUTINE TO EVALUATE THE H0 TERM IN THE PBE
C      CORRELATION FUNCTIONAL (PHYS. REV. LETT. 77, 3865 - 3868 (1996))
C      USERS SHOULD PROVIDE THEIR OWN H0 SUBROUTINE OR THEY MAY FIND
C      THIS ROUTINE ON KIERON BURKE'S WEB SITE.
C
C       CALL PBEH0(RHO,GRHO,RS,ZETA,H,DHDR,DHDG,DHDZ)
C
        CALL H0SOKFULL(RHO,GRHO,ZETA,H,DHDR,DHDG,DHDRS,DHDZ)
C
        GGA  = RHO*H
        E1   = LSDA*FSIG1
        E2   = GGA*FSIG2
C
C     FUNCTIONAL DERIVATIVES
C
        RSP   =-RS/(F3*RHO)
        DZDA  =( F1-ZETA)/RHO
        DZDB  =(-F1-ZETA)/RHO
        DLDRA = DLDS*RSP + DLDZ*DZDA
        DLDRB = DLDS*RSP + DLDZ*DZDB
C
        DF1DW =( AT1 + WSIG*( F2*AT2  + WSIG*(F3*AT3 +
     >                 WSIG*( F4*AT4  + WSIG*(F5*AT5 +
     >                 WSIG*( F6*AT6  + WSIG*(F7*AT7 +
     >                 WSIG*( F8*AT8  + WSIG*(F9*AT9 +
     >                 WSIG*(F10*AT10 + WSIG*F11*AT11))))))))))
C
        DF2DW =( BT1 + WSIG*( F2*BT2  + WSIG*(F3*BT3 +
     >                 WSIG*( F4*BT4  + WSIG*(F5*BT5 +
     >                 WSIG*( F6*BT6  + WSIG*(F7*BT7 +
     >                 WSIG*( F8*BT8  + WSIG*(F9*BT9 +
     >                 WSIG*(F10*BT10 + WSIG*F11*BT11))))))))))
C
        DWDT    = F2/((F1 + TSIG)**2)
        DTDR    = TSIG*F5/(F3*RHO)
        DTDTAU  =-TSIG/TAU
        DF1DR   = DF1DW*DWDT*DTDR
        DF1DTAU = DF1DW*DWDT*DTDTAU
        DF2DR   = DF2DW*DWDT*DTDR
        DF2DTAU = DF2DW*DWDT*DTDTAU
        DLDDRA  = POTLC + RHO*DLDRA
        DLDDRB  = POTLC + RHO*DLDRB
        DHDRA   = DHDR  + DHDZ*DZDA
        DHDRB   = DHDR  + DHDZ*DZDB
        DGRHODY = F1/(F2*GRHO)
        DHDY    = DHDG*DGRHODY
        DHDGA   = DHDY
C       DHDGB   = DHDY
        DHDGC   = DHDY*F2
        DGGADRA = H + RHO*DHDRA
        DGGADRB = H + RHO*DHDRB
        DGGADGA = RHO*DHDGA
        DGGADGB = DGGADGA
        DGGADGC = RHO*DHDGC
C
        DE1DRA = DLDDRA*FSIG1 + LSDA*DF1DR
        DE1DRB = DLDDRB*FSIG1 + LSDA*DF1DR
        DE1DKA = LSDA*DF1DTAU
        DE1DKB = DE1DKA
C
        DE2DRA = DGGADRA*FSIG2 + GGA*DF2DR
        DE2DRB = DGGADRB*FSIG2 + GGA*DF2DR
        DE2DKA = GGA*DF2DTAU
C       DE2DKB = DE2DKA
        DE2DGA = DGGADGA*FSIG2
        DE2DGB = DGGADGB*FSIG2
        DE2DGC = DGGADGC*FSIG2
C
        IF (RHFGVB) THEN
C
          ECF  = ECF + (E1 + E2)*FTOTWT
C
          VXCA1 = VXCA1 +  DE1DRA + DE2DRA
C
          DMXCA = DMXCA + (DE1DKA + DE2DKA)/F2
C
          DUMAX = DUMAX + 4.0D+00*DE2DGA*GRADXA
          DUMAY = DUMAY + 4.0D+00*DE2DGA*GRADYA
          DUMAZ = DUMAZ + 4.0D+00*DE2DGA*GRADZA
C
C     THE FACTOR OF FOUR HERE IS CORRECT.
C
        END IF
C
        IF (UROHF) THEN
C
          ECF  = ECF + (E1 + E2)*FTOTWT
C
          VXCA1 = VXCA1 + DE1DRA + DE2DRA
C
          DMXCA = DMXCA + (DE1DKA + DE2DKA)/F2
C
          VXCB1 = VXCB1 + DE1DRB + DE2DRB
C
          DMXCB = DMXCB + (DE1DKB + DE2DKA)/F2
C
          DUMAX = DUMAX + 2.0D+00*DE2DGA*GRADXA + DE2DGC*GRADXB
          DUMAY = DUMAY + 2.0D+00*DE2DGA*GRADYA + DE2DGC*GRADYB
          DUMAZ = DUMAZ + 2.0D+00*DE2DGA*GRADZA + DE2DGC*GRADZB
C
          DUMBX = DUMBX + 2.0D+00*DE2DGB*GRADXB + DE2DGC*GRADXA
          DUMBY = DUMBY + 2.0D+00*DE2DGB*GRADYB + DE2DGC*GRADYA
          DUMBZ = DUMBZ + 2.0D+00*DE2DGB*GRADZB + DE2DGC*GRADZA
        ENDIF
      END IF
      RETURN
      END
C
C*MODULE DFTXCC *DECK M08XF
      SUBROUTINE M08XF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,XGRD,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                 TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB,IJZY)
C
C***********************************************************************
C                                                                      *
C  M08x evaluates the exchange part of the M08 and M11 suite of        *
C  functionals on the grid.                                            *
C  !!! Second derivatives are not available yet.                       *
C                                                                      *
C  Ref: (a) Zhao, Y.  and Truhlar, D. G. JCTC, 2008, 4 , 1849          *
C       (b) Peverati, R. and Truhlar, D. G. J.P.C.Lett. 2011, 2, 2810  *
C       (c) Peverati, R. and Truhlar, D. G. J.P.C.Lett. 2011, 3, 117   *
C                                                                      *
C       ijzy - 1 M08-HX (a)                                            *
C       ijzy - 2 M08-SO (a)                                            *
C       ijzy - 3 M11 (b)                                               *
C       ijzy - 4 M11-L (c)                                             *
C                                                                      *
C     *  OUTPUT:                                                       *
C     *     F      - FUNCTIONAL VALUES                                 *
C     *     D1F    - FIRST DERIVATIVES WITH RESPECT TO RA, RB, GA, GB  *
C     *              TA, TB                                            *
C     *                                                                *
C     *  INPUT:                                                        *
C     *     RA,B   - SPIN DENSITIES                                    *
C     *     D1RA,B - SPIN DENSITY GRADIENTS                            *
C     *     TA,B   - SPIN KINETIC ENERGY DENSITIES                     *
C     *     NGRID  - NUMBER OF GRIDS                                   *
C                                                                      *
C  YZ (12/08)                                                          *
C  RP (11/11)                                                          *
C                                                                      *
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF,CAMFLAG
      Logical UseLC
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION XGRD
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     PARAMETER CONTROL
C
      INTEGER IJZY
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION PI
      DOUBLE PRECISION KAPA, MU,MUS, KAPAS
C     INTEGER DRA, DRB, DTA, DTB, DGA, DGB, DGC
      DOUBLE PRECISION F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11
C
      DATA F0/0.0D+00/, F1/1.0D+00/, F2/2.0D+00/, F3/3.0D+00/,
     >     F4/4.0D+00/, F5/5.0D+00/, F6/6.0D+00/, F7/7.0D+00/,
     >     F8/8.0D+00/, F9/9.0D+00/, F10/10.0D+00/, F11/11.0D+00/
C
      COMMON /DFTCAM/ ALPHAC,BETAC,CAMMU,CAMVWN,CAMLYP,CAMFLAG
C
      PARAMETER( PI = 3.1415926535897932384626433832795D+00 )
C
      DTOL = 1.0D-8
      F1o3  =  F1 / F3
      F4o3 =  F4 / F3
      F2O3 = F2/F3
      F3O5 = F3/F5
      F5O3 = F5/F3
      F81  = 81.0D+00
      F48  = 48.0D+00
      AX   =-(F3/F2) * (F4o3*PI)**(-F1o3)
C
C     SOGGA FUNCTIONAL'S PARAMETERS.
C
      MUS = F10/F81
      KAPAS = 0.552D+00
C
C     PBE PARAMETERS
      MU = 0.21951D+00
      KAPA = 0.804D+00
C
        ct00= 0D+00
        ct01= 0D+00
        ct02= 0D+00
        ct03= 0D+00
        ct04= 0D+00
        ct05= 0D+00
        ct06= 0D+00
        ct07= 0D+00
        ct08= 0D+00
        ct09= 0D+00
        ct10= 0D+00
        ct11= 0D+00
C
        dt00= 0D+00
        dt01= 0D+00
        dt02= 0D+00
        dt03= 0D+00
        dt04= 0D+00
        dt05= 0D+00
        dt06= 0D+00
        dt07= 0D+00
        dt08= 0D+00
        dt09= 0D+00
        dt10= 0D+00
        dt11= 0D+00
C
      IF (IJZY.EQ.1) THEN
C     PARAMETERS FOR M08-HX
        at00= 1.3340172D+00
        at01=-9.4751087D+00
        at02=-1.2541893D+01
        at03= 9.1369974D+00
        at04= 3.4717204D+01
        at05= 5.8831807D+01
        at06= 7.1369574D+01
        at07= 2.3312961D+01
        at08= 4.8314679D+00
        at09=-6.5044167D+00
        at10=-1.4058265D+01
        at11= 1.2880570D+01
C
        bt00=-8.5631823D-01
        bt01= 9.2810354D+00
        bt02= 1.2260749D+01
        bt03=-5.5189665D+00
        bt04=-3.5534989D+01
        bt05=-8.2049996D+01
        bt06=-6.8586558D+01
        bt07= 3.6085694D+01
        bt08=-9.3740983D+00
        bt09=-5.9731688D+01
        bt10= 1.6587868D+01
        bt11= 1.3993203D+01
c
        UseLC=.False.
c
       ELSEIF (IJZY.EQ.2) THEN
C     PARAMETERS FOR M08-SO
        at00=-3.4888428D-01
        at01=-5.8157416D+00
        at02= 3.7550810D+01
        at03= 6.3727406D+01
        at04=-5.3742313D+01
        at05=-9.8595529D+01
        at06= 1.6282216D+01
        at07= 1.7513468D+01
        at08=-6.7627553D+00
        at09= 1.1106658D+01
        at10= 1.5663545D+00
        at11= 8.7603470D+00
C
        bt00= 7.8098428D-01
        bt01= 5.4538178D+00
        bt02=-3.7853348D+01
        bt03=-6.2295080D+01
        bt04= 4.6713254D+01
        bt05= 8.7321376D+01
        bt06= 1.6053446D+01
        bt07= 2.0126920D+01
        bt08=-4.0343695D+01
        bt09=-5.8577565D+01
        bt10= 2.0890272D+01
        bt11= 1.0946903D+01
c
        UseLC=.False.
c
      elseif (ijzy.eq.3) then
C     Parameters for M11
        at00=-0.18399900D+00
        at01=-1.39046703D+01
        at02= 1.18206837D+01
        at03= 3.10098465D+01
        at04=-5.19625696D+01
        at05= 1.55750312D+01
        at06=-6.94775730D+00
        at07=-1.58465014D+02
        at08=-1.48447565D+00
        at09= 5.51042124D+01
        at10=-1.34714184D+01
        at11= 0.00000000D+00
C
        bt00= 0.75599900D+00
        bt01= 1.37137944D+01
        bt02=-1.27998304D+01
        bt03=-2.93428814D+01
        bt04= 5.91075674D+01
        bt05=-2.27604866D+01
        bt06=-1.02769340D+01
        bt07= 1.64752731D+02
        bt08= 1.85349258D+01
        bt09=-5.56825639D+01
        bt10= 7.47980859D+00
        bt11= 0.00000000D+00
c
        UseLC=.True.
c
      elseif (ijzy.eq.4) then
C     Parameters for M11-L
        at00=  8.121131D-01
        at01=  1.738124D+01
        at02=  1.154007D+00
        at03=  6.869556D+01
        at04=  1.016864D+02
        at05= -5.887467D+00
        at06=  4.517409D+01
        at07= -2.773149D+00
        at08= -2.617211D+01
        at09=  0.000000D+00
        at10=  0.000000D+00
        at11=  0.000000D+00
C
        bt00=  1.878869D-01
        bt01= -1.653877D+01
        bt02=  6.755753D-01
        bt03= -7.567572D+01
        bt04= -1.040272D+02
        bt05=  1.831853D+01
        bt06= -5.573352D+01
        bt07= -3.520210D+00
        bt08=  3.724276D+01
        bt09=  0.000000D+00
        bt10=  0.000000D+00
        bt11=  0.000000D+00
C
        ct00= -4.386615D-01
        ct01= -1.214016D+02
        ct02= -1.393573D+02
        ct03= -2.046649D+00
        ct04=  2.804098D+01
        ct05= -1.312258D+01
        ct06= -6.361819D+00
        ct07= -8.055758D-01
        ct08=  3.736551D+00
        ct09=  0.000000D+00
        ct10=  0.000000D+00
        ct11=  0.000000D+00
C
        dt00=  1.438662D+00
        dt01=  1.209465D+02
        dt02=  1.328252D+02
        dt03=  1.296355D+01
        dt04=  5.854866D+00
        dt05= -3.378162D+00
        dt06= -4.423393D+01
        dt07=  6.844475D+00
        dt08=  1.949541D+01
        dt09=  0.000000D+00
        dt10=  0.000000D+00
        dt11=  0.000000D+00
c
        CAMMU = 0.25D+00
        UseLC= .True.
C
       ENDIF
C
      IF (RHFGVB)THEN
C
C
         RHOO = ROA
         TAUN = TAUXA + TAUYA + TAUZA
         GAM  = GRDAA
C
        IF ((RHOO.GT.DTOL).AND.(TAUN.GT.DTOL)) THEN
C
            RHO43 = RHOO**F4o3
            RHO13 = RHO43/RHOO
            RHO53 = RHOO**F5O3
C
C           TAUU = TAUN
            TAUUEG=F3O5*((F6*PI*PI)**F2O3)*RHO53
            TSIG =TAUUEG/TAUN
          Wsig =(Tsig - F1)/(Tsig + F1)
          W1=Wsig
          W2=Wsig*W1
          W3=Wsig*W2
          W4=Wsig*W3
          W5=Wsig*W4
          W6=Wsig*W5
          W7=Wsig*W6
          W8=Wsig*W7
          W9=Wsig*W8
          W10=Wsig*W9
          W11=Wsig*W10
C
          Fsig1 =(At00+At01*W1+ At02*W2 + At03*W3
     $          + At04*W4 + At05*W5 + At06*W6 + At07*W7
     $          + At08*W8 + At09*W9 + At10*W10 + At11*W11)
          Fsig2 =(Bt00 + Bt01*W1+ Bt02*W2 + Bt03*W3
     $          + Bt04*W4 + Bt05*W5 + Bt06*W6 + Bt07*W7
     $          + Bt08*W8 + Bt09*W9 + Bt10*W10 + Bt11*W11)
          Fsig3 =(Ct00+Ct01*W1+ Ct02*W2 + Ct03*W3
     $          + Ct04*W4 + Ct05*W5 + Ct06*W6 + Ct07*W7
     $          + Ct08*W8 + Ct09*W9 + Ct10*W10 + Ct11*W11)
          Fsig4 =(Dt00 + Dt01*W1+ Dt02*W2 + Dt03*W3
     $          + Dt04*W4 + Dt05*W5 + Dt06*W6 + Dt07*W7
     $          + Dt08*W8 + Dt09*W9 + Dt10*W10 + Dt11*W11)
C
         GAM12 = SQRT(GAM)
         X = GAM12/RHO43
         S = X/(F48*PI*PI)**F1o3
         Y = S*S
         Deno = (F1 + Mu*y/kapa)
         fx1=F1+kapa*(F1-F1/Deno)
         fx2=F1+kapas*(F1-Exp(-Mus*y/kapas))
C
         If(UseLC) then
           CALL LRCLSDA(RHOO,XALFA,PDUMA)
           elsr=xalfa
           ElLR = Ax*Rho43-ElSR
         else
           ElSR = Ax*Rho43
           ElLR = F0
         endIf
          GGA1 = ElSR*fx1
          GGA2 = ElSR*fx2
          GGA3 = ElLR*fx1
          GGA4 = ElLR*fx2
C
         XGRD = XGRD + (GGA1*Fsig1+GGA2*Fsig2
     $                 +GGA3*Fsig3+GGA4*Fsig4)*FTOTWT*2.00D+00
C
C     FUNCTIONAL DERIVATIVES
C
            DYDRHO = -(F8/F3) * Y/RHOO
            DYDG = Y/GAM
C
            dfx1dy = Mu*(F1/(Deno*Deno))
            dfx1dRho = dfx1dy*dydRho
            dfx1dG = dfx1dy*dydG
C
            dfx2dy = Mus*Exp(-Mus*y/kapas)
            dfx2dRho = dfx2dy*dydRho
            dfx2dG = dfx2dy*dydG
C
            dF1dW = (At01 + F2*At02*W1 + F3*At03*W2
     $              + F4*At04*W3 + F5*At05*W4
     $              + F6*At06*W5 + F7*At07*W6
     $              + F8*At08*W7 + F9*At09*W8
     $              + F10*At10*W9 + F11*At11*W10)
            dF2dW = (Bt01 + F2*Bt02*W1 + F3*Bt03*W2
     $              + F4*Bt04*W3 + F5*Bt05*W4
     $              + F6*Bt06*W5 + F7*Bt07*W6
     $              + F8*Bt08*W7 + F9*Bt09*W8
     $              + F10*Bt10*W9 + F11*Bt11*W10)
            dF3dW = (Ct01 + F2*Ct02*W1 + F3*Ct03*W2
     $              + F4*Ct04*W3 + F5*Ct05*W4
     $              + F6*Ct06*W5 + F7*Ct07*W6
     $              + F8*Ct08*W7 + F9*Ct09*W8
     $              + F10*Ct10*W9 + F11*Ct11*W10)
            dF4dW = (Dt01 + F2*Dt02*W1 + F3*Dt03*W2
     $              + F4*Dt04*W3 + F5*Dt05*W4
     $              + F6*Dt06*W5 + F7*Dt07*W6
     $              + F8*Dt08*W7 + F9*Dt09*W8
     $              + F10*Dt10*W9 + F11*Dt11*W10)
C
            DWDT = F2/((F1 + TSIG)**2)
            DTDR = ((F6*PI*PI)**F2O3)*(RHOO**F2O3)/TAUN
            DTDTAU = -TAUUEG/TAUN**2
           If(UseLC) then
             dElSRdR = PDUMA
             dElLRdR = Ax*F4o3*Rho13-dElSRdR
           else
             dElSRdR = Ax*F4o3*Rho13
             dElLRdR = F0
           endIf
            dGGA1dR = dElSRdR*fx1 + ElSR*dfx1dRho
            dGGA2dR = dElSRdR*fx2 + ElSR*dfx2dRho
            dGGA3dR = dElLRdR*fx1 + ElLR*dfx1dRho
            dGGA4dR = dElLRdR*fx2 + ElLR*dfx2dRho
            dF1dR = dF1dW*dWdT*dTdR
            dF1dTau=dF1dW*dWdT*dTdTau
            dF2dR = dF2dW*dWdT*dTdR
            dF2dTau=dF2dW*dWdT*dTdTau
            dF3dR = dF3dW*dWdT*dTdR
            dF3dTau=dF3dW*dWdT*dTdTau
            dF4dR = dF4dW*dWdT*dTdR
            dF4dTau=dF4dW*dWdT*dTdTau
c
            dGGA1dG = ElSR*dfx1dG
            dGGA2dG = ElSR*dfx2dG
            dGGA3dG = ElLR*dfx1dG
            dGGA4dG = ElLR*dfx2dG
C
C        DF/DRHOA
C
            VXCA1 = VXCA1 +dGGA1dR*Fsig1 + GGA1*dF1dR
     $                    +dGGA2dR*Fsig2 + GGA2*dF2dR
     $                    +dGGA3dR*Fsig3 + GGA3*dF3dR
     $                    +dGGA4dR*Fsig4 + GGA4*dF4dR
C
C        DF/DGAMMAAA
C
            DUMAX = DUMAX + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADXA
            DUMAY = DUMAY + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADYA
            DUMAZ = DUMAZ + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADZA
C
C        DF/DTAUA
C
            DMXCA = DMXCA + GGA1*dF1dTau + GGA2*dF2dTau
     $                    + GGA3*dF3dTau + GGA4*dF4dTau
C
      END IF
      END IF
C
      IF (UROHF) THEN
C
         RHOO = ROA
         TAUN = TAUXA + TAUYA + TAUZA
         GAM  = GRDAA
C
        IF ((RHOO.GT.DTOL).AND.(TAUN.GT.DTOL)) THEN
C
            RHO43 = RHOO**F4o3
            RHO13 = RHO43/RHOO
            RHO53 = RHOO**F5O3
C
C           TAUU = TAUN
            TAUUEG=F3O5*((F6*PI*PI)**F2O3)*RHO53
            TSIG =TAUUEG/TAUN
          Wsig =(Tsig - F1)/(Tsig + F1)
          W1=Wsig
          W2=Wsig*W1
          W3=Wsig*W2
          W4=Wsig*W3
          W5=Wsig*W4
          W6=Wsig*W5
          W7=Wsig*W6
          W8=Wsig*W7
          W9=Wsig*W8
          W10=Wsig*W9
          W11=Wsig*W10
C
          Fsig1 =(At00+At01*W1+ At02*W2 + At03*W3
     $          + At04*W4 + At05*W5 + At06*W6 + At07*W7
     $          + At08*W8 + At09*W9 + At10*W10 + At11*W11)
          Fsig2 =(Bt00 + Bt01*W1+ Bt02*W2 + Bt03*W3
     $          + Bt04*W4 + Bt05*W5 + Bt06*W6 + Bt07*W7
     $          + Bt08*W8 + Bt09*W9 + Bt10*W10 + Bt11*W11)
          Fsig3 =(Ct00+Ct01*W1+ Ct02*W2 + Ct03*W3
     $          + Ct04*W4 + Ct05*W5 + Ct06*W6 + Ct07*W7
     $          + Ct08*W8 + Ct09*W9 + Ct10*W10 + Ct11*W11)
          Fsig4 =(Dt00 + Dt01*W1+ Dt02*W2 + Dt03*W3
     $          + Dt04*W4 + Dt05*W5 + Dt06*W6 + Dt07*W7
     $          + Dt08*W8 + Dt09*W9 + Dt10*W10 + Dt11*W11)
C
         GAM12 = SQRT(GAM)
         X = GAM12/RHO43
         S = X/(F48*PI*PI)**F1o3
         Y = S*S
         Deno = (F1 + Mu*y/kapa)
         fx1=F1+kapa*(F1-F1/Deno)
         fx2=F1+kapas*(F1-Exp(-Mus*y/kapas))
C
         If(UseLC) then
           CALL LRCLSDA(RHOO,XALFA,PDUMA)
           elsr=xalfa
           ElLR = Ax*Rho43-ElSR
         else
           ElSR = Ax*Rho43
           ElLR = F0
         endIf
          GGA1 = ElSR*fx1
          GGA2 = ElSR*fx2
          GGA3 = ElLR*fx1
          GGA4 = ElLR*fx2
C
         XGRD = XGRD + (GGA1*Fsig1+GGA2*Fsig2
     $                 +GGA3*Fsig3+GGA4*Fsig4)*FTOTWT
C
C
C     FUNCTIONAL DERIVATIVES
C
            DYDRHO = -(F8/F3) * Y/RHOO
            DYDG = Y/GAM
C
            dfx1dy = Mu*(F1/(Deno*Deno))
            dfx1dRho = dfx1dy*dydRho
            dfx1dG = dfx1dy*dydG
C
            dfx2dy = Mus*Exp(-Mus*y/kapas)
            dfx2dRho = dfx2dy*dydRho
            dfx2dG = dfx2dy*dydG
C
            dF1dW = (At01 + F2*At02*W1 + F3*At03*W2
     $              + F4*At04*W3 + F5*At05*W4
     $              + F6*At06*W5 + F7*At07*W6
     $              + F8*At08*W7 + F9*At09*W8
     $              + F10*At10*W9 + F11*At11*W10)
            dF2dW = (Bt01 + F2*Bt02*W1 + F3*Bt03*W2
     $              + F4*Bt04*W3 + F5*Bt05*W4
     $              + F6*Bt06*W5 + F7*Bt07*W6
     $              + F8*Bt08*W7 + F9*Bt09*W8
     $              + F10*Bt10*W9 + F11*Bt11*W10)
            dF3dW = (Ct01 + F2*Ct02*W1 + F3*Ct03*W2
     $              + F4*Ct04*W3 + F5*Ct05*W4
     $              + F6*Ct06*W5 + F7*Ct07*W6
     $              + F8*Ct08*W7 + F9*Ct09*W8
     $              + F10*Ct10*W9 + F11*Ct11*W10)
            dF4dW = (Dt01 + F2*Dt02*W1 + F3*Dt03*W2
     $              + F4*Dt04*W3 + F5*Dt05*W4
     $              + F6*Dt06*W5 + F7*Dt07*W6
     $              + F8*Dt08*W7 + F9*Dt09*W8
     $              + F10*Dt10*W9 + F11*Dt11*W10)
C
            DWDT = F2/((F1 + TSIG)**2)
            DTDR = ((F6*PI*PI)**F2O3)*(RHOO**F2O3)/TAUN
            DTDTAU = -TAUUEG/TAUN**2
           If(UseLC) then
             dElSRdR = PDUMA
             dElLRdR = Ax*F4o3*Rho13-dElSRdR
           else
             dElSRdR = Ax*F4o3*Rho13
             dElLRdR = F0
           endIf
            dGGA1dR = dElSRdR*fx1 + ElSR*dfx1dRho
            dGGA2dR = dElSRdR*fx2 + ElSR*dfx2dRho
            dGGA3dR = dElLRdR*fx1 + ElLR*dfx1dRho
            dGGA4dR = dElLRdR*fx2 + ElLR*dfx2dRho
            dF1dR = dF1dW*dWdT*dTdR
            dF1dTau=dF1dW*dWdT*dTdTau
            dF2dR = dF2dW*dWdT*dTdR
            dF2dTau=dF2dW*dWdT*dTdTau
            dF3dR = dF3dW*dWdT*dTdR
            dF3dTau=dF3dW*dWdT*dTdTau
            dF4dR = dF4dW*dWdT*dTdR
            dF4dTau=dF4dW*dWdT*dTdTau
c
            dGGA1dG = ElSR*dfx1dG
            dGGA2dG = ElSR*dfx2dG
            dGGA3dG = ElLR*dfx1dG
            dGGA4dG = ElLR*dfx2dG
C
C        DF/DRHOA
C
            VXCA1 = VXCA1 +dGGA1dR*Fsig1 + GGA1*dF1dR
     $                    +dGGA2dR*Fsig2 + GGA2*dF2dR
     $                    +dGGA3dR*Fsig3 + GGA3*dF3dR
     $                    +dGGA4dR*Fsig4 + GGA4*dF4dR
C
C        DF/DGAMMAAA
C
            DUMAX = DUMAX + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADXA
            DUMAY = DUMAY + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADYA
            DUMAZ = DUMAZ + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADZA
C
C        DF/DTAUA
C
            DMXCA = DMXCA + GGA1*dF1dTau + GGA2*dF2dTau
     $                    + GGA3*dF3dTau + GGA4*dF4dTau
      END IF
C
C BETA COMPONENT
C
         RHOO = ROB
         TAUN = TAUXB + TAUYB + TAUZB
         GAM  = GRDBB
C
        IF ((RHOO.GT.DTOL).AND.(TAUN.GT.DTOL)) THEN
C
            RHO43 = RHOO**F4o3
            RHO13 = RHO43/RHOO
            RHO53 = RHOO**F5O3
C
C           TAUU = TAUN
            TAUUEG=F3O5*((F6*PI*PI)**F2O3)*RHO53
            TSIG =TAUUEG/TAUN
          Wsig =(Tsig - F1)/(Tsig + F1)
          W1=Wsig
          W2=Wsig*W1
          W3=Wsig*W2
          W4=Wsig*W3
          W5=Wsig*W4
          W6=Wsig*W5
          W7=Wsig*W6
          W8=Wsig*W7
          W9=Wsig*W8
          W10=Wsig*W9
          W11=Wsig*W10
C
          Fsig1 =(At00+At01*W1+ At02*W2 + At03*W3
     $          + At04*W4 + At05*W5 + At06*W6 + At07*W7
     $          + At08*W8 + At09*W9 + At10*W10 + At11*W11)
          Fsig2 =(Bt00 + Bt01*W1+ Bt02*W2 + Bt03*W3
     $          + Bt04*W4 + Bt05*W5 + Bt06*W6 + Bt07*W7
     $          + Bt08*W8 + Bt09*W9 + Bt10*W10 + Bt11*W11)
          Fsig3 =(Ct00+Ct01*W1+ Ct02*W2 + Ct03*W3
     $          + Ct04*W4 + Ct05*W5 + Ct06*W6 + Ct07*W7
     $          + Ct08*W8 + Ct09*W9 + Ct10*W10 + Ct11*W11)
          Fsig4 =(Dt00 + Dt01*W1+ Dt02*W2 + Dt03*W3
     $          + Dt04*W4 + Dt05*W5 + Dt06*W6 + Dt07*W7
     $          + Dt08*W8 + Dt09*W9 + Dt10*W10 + Dt11*W11)
C
         GAM12 = SQRT(GAM)
         X = GAM12/RHO43
         S = X/(F48*PI*PI)**F1o3
         Y = S*S
         Deno = (F1 + Mu*y/kapa)
         fx1=F1+kapa*(F1-F1/Deno)
         fx2=F1+kapas*(F1-Exp(-Mus*y/kapas))
C
         If(UseLC) then
           CALL LRCLSDA(RHOO,XALFB,PDUMB)
           elsr=xalfb
           ElLR = Ax*Rho43-ElSR
         else
           ElSR = Ax*Rho43
           ElLR = F0
         endIf
          GGA1 = ElSR*fx1
          GGA2 = ElSR*fx2
          GGA3 = ElLR*fx1
          GGA4 = ElLR*fx2
C
         XGRD = XGRD + (GGA1*Fsig1+GGA2*Fsig2
     $                 +GGA3*Fsig3+GGA4*Fsig4)*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
            DYDRHO = -(F8/F3) * Y/RHOO
            DYDG = Y/GAM
C
            dfx1dy = Mu*(F1/(Deno*Deno))
            dfx1dRho = dfx1dy*dydRho
            dfx1dG = dfx1dy*dydG
C
            dfx2dy = Mus*Exp(-Mus*y/kapas)
            dfx2dRho = dfx2dy*dydRho
            dfx2dG = dfx2dy*dydG
C
            dF1dW = (At01 + F2*At02*W1 + F3*At03*W2
     $              + F4*At04*W3 + F5*At05*W4
     $              + F6*At06*W5 + F7*At07*W6
     $              + F8*At08*W7 + F9*At09*W8
     $              + F10*At10*W9 + F11*At11*W10)
            dF2dW = (Bt01 + F2*Bt02*W1 + F3*Bt03*W2
     $              + F4*Bt04*W3 + F5*Bt05*W4
     $              + F6*Bt06*W5 + F7*Bt07*W6
     $              + F8*Bt08*W7 + F9*Bt09*W8
     $              + F10*Bt10*W9 + F11*Bt11*W10)
            dF3dW = (Ct01 + F2*Ct02*W1 + F3*Ct03*W2
     $              + F4*Ct04*W3 + F5*Ct05*W4
     $              + F6*Ct06*W5 + F7*Ct07*W6
     $              + F8*Ct08*W7 + F9*Ct09*W8
     $              + F10*Ct10*W9 + F11*Ct11*W10)
            dF4dW = (Dt01 + F2*Dt02*W1 + F3*Dt03*W2
     $              + F4*Dt04*W3 + F5*Dt05*W4
     $              + F6*Dt06*W5 + F7*Dt07*W6
     $              + F8*Dt08*W7 + F9*Dt09*W8
     $              + F10*Dt10*W9 + F11*Dt11*W10)
C
            DWDT = F2/((F1 + TSIG)**2)
            DTDR = ((F6*PI*PI)**F2O3)*(RHOO**F2O3)/TAUN
            DTDTAU = -TAUUEG/TAUN**2
           If(UseLC) then
             dElSRdR = PDUMB
             dElLRdR = Ax*F4o3*Rho13-dElSRdR
           else
             dElSRdR = Ax*F4o3*Rho13
             dElLRdR = F0
           endIf
            dGGA1dR = dElSRdR*fx1 + ElSR*dfx1dRho
            dGGA2dR = dElSRdR*fx2 + ElSR*dfx2dRho
            dGGA3dR = dElLRdR*fx1 + ElLR*dfx1dRho
            dGGA4dR = dElLRdR*fx2 + ElLR*dfx2dRho
            dF1dR = dF1dW*dWdT*dTdR
            dF1dTau=dF1dW*dWdT*dTdTau
            dF2dR = dF2dW*dWdT*dTdR
            dF2dTau=dF2dW*dWdT*dTdTau
            dF3dR = dF3dW*dWdT*dTdR
            dF3dTau=dF3dW*dWdT*dTdTau
            dF4dR = dF4dW*dWdT*dTdR
            dF4dTau=dF4dW*dWdT*dTdTau
c
            dGGA1dG = ElSR*dfx1dG
            dGGA2dG = ElSR*dfx2dG
            dGGA3dG = ElLR*dfx1dG
            dGGA4dG = ElLR*dfx2dG
C
C        DF/DRHOA
C
            VXCB1 = VXCB1 +dGGA1dR*Fsig1 + GGA1*dF1dR
     $                    +dGGA2dR*Fsig2 + GGA2*dF2dR
     $                    +dGGA3dR*Fsig3 + GGA3*dF3dR
     $                    +dGGA4dR*Fsig4 + GGA4*dF4dR
C
C        DF/DGAMMAAA
C
            DUMBX = DUMBX + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADXB
            DUMBY = DUMBY + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADYB
            DUMBZ = DUMBZ + 2.0D+00*(dGGA1dG*Fsig1+dGGA2dG*Fsig2
     $                              +dGGA3dG*Fsig3+dGGA4dG*Fsig4)*GRADZB
C
C        DF/DTAUA
C
            DMXCB = DMXCB + GGA1*dF1dTau + GGA2*dF2dTau
     $                    + GGA3*dF3dTau + GGA4*dF4dTau
C
      END IF
      ENDIF
      RETURN
      END
C
C
C
C
C
C
C*MODULE DFTXCC *DECK SOGGACF
      SUBROUTINE SOGGACF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,GRDAB,
     >                 GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                 FTOTWT,ECF,
     >                 VXCA1,DUMAX,DUMAY,DUMAZ,
     >                 VXCB1,DUMBX,DUMBY,DUMBZ,IJZY)
C
************************************************************************
*                                                                      *
*  SOGGA11CFevaluates the correlation part of the SOGGA11 and SOGGA11-X*
*  functionals on the grid.                                            *
*                                                                      *
c     *  OUTPUT:                                                       *
c     *     F      - Functional values                                 *
c     *     D1F    - First derivatives with respect to RA, RB, GA, GB  *
c     *                                                                *
c     *  INPUT:                                                        *
c     *     ijzy = 1 - not implemented because SOGGA uses PBEcor       *
c     *     ijzy = 2 - SOGGA11 functional                              *
c     *     ijzy = 3 - SOGGA11-X functional                            *
c     *     RA,B     - Spin densities                                  *
c     *     D1RA,B   - Spin density gradients                          *
c     *     NGrid    - number of grid points                           *
*                                                                      *
*  RP (11/11)                                                          *
*                                                                      *
************************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL RHFGVB,UROHF
C
      Save F0,F1,F2,F3,F4,F5,F6,F7
      Data F0/0.0d0/,F1/1.0d0/,F2/2.0d0/,F3/3.0d0/,F4/4.0d0/,F5/5.0d0/,
     $     F6/6.0d0/,F7/7.0d0/
      PARAMETER( PI = 3.1415926535897932384626433832795D0 )
c
      if (ijzy.eq.2) then
       CcA0 =  0.50000D+00
       CcA1 = -4.62334D+00
       CcA2 =  8.00410D+00
       CcA3 = -130.226D+00
       CcA4 =  38.2685D+00
       CcA5 =  69.5599D+00
       CcB0 =  0.50000D+00
       CcB1 =  3.62334D+00
       CcB2 =  9.36393D+00
       CcB3 =  34.5114D+00
       CcB4 = -18.5684D+00
       CcB5 = -0.16519D+00
      elseif (ijzy.eq.3) then
       CcA0 =  5.00000d-01
       CcA1 =  7.82439d+01
       CcA2 =  2.57211d+01
       CcA3 = -1.38830d+01
       CcA4 = -9.87375d+00
       CcA5 = -1.41357d+01
       CcB0 =  5.00000d-01
       CcB1 = -7.92439d+01
       CcB2 =  1.63725d+01
       CcB3 =  2.08129d+00
       CcB4 =  7.50769d+00
       CcB5 = -1.01861d+01
      endif
C
      Pi34 = F3/(F4*Pi)
C--   F1o2 = F1/F2
      F1o3 = F1/F3
      F1o6 = F1/F6
C--   F2o3 = F2/F3
C--   F3o5 = F3/F5
C--   F5o3 = F5/F3
      F7o6 = F7/F6
      XNu = 15.75592D0
      CC0 = 0.004235D0
      beta= XNu*CC0
      DUMMY = F0
C
      IF (RHFGVB) THEN
       RHOA = ROA
       RHOB = RHOA
       Y    = GRDAA * 4.0D+00
       RHO  = RHOA  + RHOB
      END IF
C
      IF (UROHF) THEN
       RHOA = ROA
       RHOB = ROB
       Y    = GRDAA + GRDBB + 2.00D+00*GRDAB
       RHO  = RHOA + RHOB
      END IF
C
C     IF((RHO.GT.TINY).AND.(TAU.GT.TINY)) THEN
        rS = (Pi34/Rho)**F1o3
        Zeta = (RhoA-RhoB)/Rho
        GRHO   = SQRT(Y)
C
C      LSDAC IS A ROUTINE TO EVALUATE THE PERDEW-WANG-91 CORRELATION
C      FUNCTIONAL LOCAL SPIN DENSITY APPROXIMATION (LSDA) TO THE
C      CORRELATION ENERGY OF A UNIFORM ELECTRON GAS.
C            (PHYS. REV. B 45, 13244 (1992)).
C      USERS SHOULD PROVIDE THEIR OWN FOR LSDA CORRELATION FUNCTIONAL
C      OR THEY MAY FIND THIS ROUTINE ON KIERON BURKE'S WEB SITE.
C
C       CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,DUMMY,DUMMY,DUMMY)
C
        CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,DUMMY,DUMMY,DUMMY)
        Call GZeta(Zeta,G,dGdZ,DUMMY,DUMMY)
C
          Eloc = Rho*PotLC
          FKFac = (F3*Pi*Pi)**F1o3
          SKFac = Sqrt(FKFac/Pi)*F2
          Rho16 = Rho**F1o6
          Rho76 = Rho*Rho16
          T  = GRho/(F2*SKFac*Rho76*G)
          T2 = T*T
          G2 = G*G
          G3 = G*G2
          PON = (G3*beta*T2)/PotLC
          Ffrac = F1-F1/(F1-PON)
          Fexp  = F1-exp(PON)
          fa0 = CcA0
          fa1 = CcA1 *Ffrac
          fa2 = CcA2 *Ffrac**F2
          fa3 = CcA3 *Ffrac**F3
          fa4 = CcA4 *Ffrac**F4
          fa5 = CcA5 *Ffrac**F5
          fb0 = CcB0
          fb1 = CcB1 *Fexp
          fb2 = CcB2 *Fexp**F2
          fb3 = CcB3 *Fexp**F3
          fb4 = CcB4 *Fexp**F4
          fb5 = CcB5 *Fexp**F5
          FggaC = fa0+fa1+fa2+fa3+fa4+fa5+
     $            fb0+fb1+fb2+fb3+fb4+fb5
C
C     FUNCTIONAL DERIVATIVES
C
C
          dSdR  = -(F1o3*rS/Rho)
          dZdA = (F1-Zeta)/Rho
          dZdB = (-F1-Zeta)/Rho
          dLdA = dLdS*dSdR + dLdz*dZdA
          dLdB = dLdS*dSdR + dLdz*dZdB
          dElocdA = PotLC + Rho*dLdA
          dElocdB = PotLC + Rho*dLdB
          dT2dR = -F2*F7o6*T2/Rho
          dT2dG =  F2*T2/GRho
          dT2dZ = -F2*dGdZ*T2/G
          dPONdR = -(dLdS*dSdR*PON/PotLC)+dT2dR*PON/T2
          dPONdG = dT2dG*PON/T2
          dPONdZ = F3*dGdZ*PON/G-dLdZ*PON/PotLC+dT2dZ*PON/T2
          dFfracdPON = -F1/((F1-PON)**F2)
          dFexpdPON  = -exp(PON)
          dfa1dR = CcA1                 *dFfracdPON*dPONdR
          dfa2dR = CcA2 *(F2 *Ffrac)    *dFfracdPON*dPONdR
          dfa3dR = CcA3 *(F3 *Ffrac**F2)*dFfracdPON*dPONdR
          dfa4dR = CcA4 *(F4 *Ffrac**F3)*dFfracdPON*dPONdR
          dfa5dR = CcA5 *(F5 *Ffrac**F4)*dFfracdPON*dPONdR
          dfa1dG = CcA1                 *dFfracdPON*dPONdG
          dfa2dG = CcA2 *(F2 *Ffrac)    *dFfracdPON*dPONdG
          dfa3dG = CcA3 *(F3 *Ffrac**F2)*dFfracdPON*dPONdG
          dfa4dG = CcA4 *(F4 *Ffrac**F3)*dFfracdPON*dPONdG
          dfa5dG = CcA5 *(F5 *Ffrac**F4)*dFfracdPON*dPONdG
          dfa1dZ = CcA1                 *dFfracdPON*dPONdZ
          dfa2dZ = CcA2 *(F2 *Ffrac)    *dFfracdPON*dPONdZ
          dfa3dZ = CcA3 *(F3 *Ffrac**F2)*dFfracdPON*dPONdZ
          dfa4dZ = CcA4 *(F4 *Ffrac**F3)*dFfracdPON*dPONdZ
          dfa5dZ = CcA5 *(F5 *Ffrac**F4)*dFfracdPON*dPONdZ
          dfb1dR = CcB1                *dFexpdPON*dPONdR
          dfb2dR = CcB2 *(F2 *Fexp)    *dFexpdPON*dPONdR
          dfb3dR = CcB3 *(F3 *Fexp**F2)*dFexpdPON*dPONdR
          dfb4dR = CcB4 *(F4 *Fexp**F3)*dFexpdPON*dPONdR
          dfb5dR = CcB5 *(F5 *Fexp**F4)*dFexpdPON*dPONdR
          dfb1dG = CcB1                *dFexpdPON*dPONdG
          dfb2dG = CcB2 *(F2 *Fexp)    *dFexpdPON*dPONdG
          dfb3dG = CcB3 *(F3 *Fexp**F2)*dFexpdPON*dPONdG
          dfb4dG = CcB4 *(F4 *Fexp**F3)*dFexpdPON*dPONdG
          dfb5dG = CcB5 *(F5 *Fexp**F4)*dFexpdPON*dPONdG
          dfb1dZ = CcB1                *dFexpdPON*dPONdZ
          dfb2dZ = CcB2 *(F2 *Fexp)    *dFexpdPON*dPONdZ
          dfb3dZ = CcB3 *(F3 *Fexp**F2)*dFexpdPON*dPONdZ
          dfb4dZ = CcB4 *(F4 *Fexp**F3)*dFexpdPON*dPONdZ
          dfb5dZ = CcB5 *(F5 *Fexp**F4)*dFexpdPON*dPONdZ
c
          dFggaCdR = dfa1dR+dfa2dR+dfa3dR+dfa4dR+dfa5dR +
     $               dfb1dR+dfb2dR+dfb3dR+dfb4dR+dfb5dR
          dFggaCdG = dfa1dG+dfa2dG+dfa3dG+dfa4dG+dfa5dG +
     $               dfb1dG+dfb2dG+dfb3dG+dfb4dG+dfb5dG
          dFggaCdZ = dfa1dZ+dfa2dZ+dfa3dZ+dfa4dZ+dfa5dZ +
     $               dfb1dZ+dfb2dZ+dfb3dZ+dfb4dZ+dfb5dZ
c
          dFggaCdA = dFggaCdR + dFggaCdZ*dZdA
          dFggaCdB = dFggaCdR + dFggaCdZ*dZdB
          dGdGx = F1 / (F2*GRho)
          dFggaCdGx = dFggaCdG*dGdGx
C
        IF (RHFGVB) THEN
C
          ECF  = ECF + (Eloc*FggaC)*FTOTWT
C
          VXCA1 = VXCA1 +  (dElocdA*FggaC +
     $                     Eloc*dFggaCdA)
C
          DUMAX = DUMAX + 4.0D+00*Eloc*dFggaCdGx*GRADXA
          DUMAY = DUMAY + 4.0D+00*Eloc*dFggaCdGx*GRADYA
          DUMAZ = DUMAZ + 4.0D+00*Eloc*dFggaCdGx*GRADZA
C
C     THE FACTOR OF FOUR HERE IS CORRECT.
C
        END IF
C
        IF (UROHF) THEN
C
          ECF  = ECF + (Eloc*FggaC)*FTOTWT
C
          VXCA1 = VXCA1 + dElocdA*FggaC +
     $               Eloc*dFggaCdA
C
          VXCB1 = VXCB1 + dElocdB*FggaC +
     $               Eloc*dFggaCdB
C
          DUMAX = DUMAX + F2*Eloc*dFggaCdGx*GRADXA
     $                  + F2*Eloc*dFggaCdGx*GRADXB
          DUMAY = DUMAY + F2*Eloc*dFggaCdGx*GRADYA
     $                  + F2*Eloc*dFggaCdGx*GRADYB
          DUMAZ = DUMAZ + F2*Eloc*dFggaCdGx*GRADZA
     $                  + F2*Eloc*dFggaCdGx*GRADZB
C
          DUMBX = DUMBX + F2*Eloc*dFggaCdGx*GRADXB
     $                  + F2*Eloc*dFggaCdGx*GRADXA
          DUMBY = DUMBY + F2*Eloc*dFggaCdGx*GRADYB
     $                  + F2*Eloc*dFggaCdGx*GRADYA
          DUMBZ = DUMBZ + F2*Eloc*dFggaCdGx*GRADZB
     $                  + F2*Eloc*dFggaCdGx*GRADZA
        ENDIF
C     END IF
      RETURN
      END
C
C*MODULE DFTXCC *DECK SOGGAXF
      SUBROUTINE SOGGAXF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                   GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                   FTOTWT,XGRD,
     >                   VXCA1,DUMAX,DUMAY,DUMAZ,
     >                   VXCB1,DUMBX,DUMBY,DUMBZ,ijzy)
C
C***********************************************************************
C                                                                      *
C  SOGGA EVALUATES THE EXCHANGE PART OF THE SOGGA FUNCTIONAL           *
C  ON THE GRID.                                                        *
C        ZHAO AND TRUHLAR, JCP, 128, 184109 (2008)                     *
C     *  OUTPUT:                                                       *
C     *     F      - FUNCTIONAL VALUES                                 *
C     *     D1F    - FIRST DERIVATIVES WITH RESPECT TO RA, RB, GA, GB  *
C     *              TA, TB                                            *
C     *                                                                *
C     *  INPUT:                                                        *
c     *     ijzy = 1 - SOGGA functional                                *
c     *     ijzy = 2 - SOGGA11 functional                              *
c     *     ijzy = 3 - SOGGA11-X functional                            *
C     *     RA,B   - SPIN DENSITIES                                    *
C     *     D1RA,B - SPIN DENSITY GRADIENTS                            *
C     *     TA,B   - SPIN KINETIC ENERGY DENSITIES                     *
C     *     NGRID  - NUMBER OF GRIDS                                   *
C                                                                      *
C  RP (11/11)                                                          *
C                                                                      *
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      LOGICAL RHFGVB, UROHF
C
      REAL*8 mu
      Save F1,F2,F3,F4,F5,F8,F48
      Data F1/1.0d0/,F2/2.0d0/,F3/3.0d0/,F4/4.0d0/,F5/5.0d0/,
     $     F8/8.0d0/,
     $     F48/48.0d0/
c
      if (ijzy.eq.1) then
c SOGGA
       CxA0 =  0.5d+00
       CxA1 =  0.276d+00
       CxA2 =  0.0d+00
       CxA3 =  0.0d+00
       CxA4 =  0.0d+00
       CxA5 =  0.0d+00
       CxB0 =  0.5d+00
       CxB1 =  0.276d+00
       CxB2 =  0.0d+00
       CxB3 =  0.0d+00
       CxB4 =  0.0d+00
       CxB5 =  0.0d+00
      elseif (ijzy.eq.2) then
c SOGGA11
       CxA0 =  0.50000d0
       CxA1 = -2.95535d0
       CxA2 =  15.7974d0
       CxA3 = -91.1804d0
       CxA4 =  96.2030d0
       CxA5 =  0.18683d0
       CxB0 =  0.50000d0
       CxB1 =  3.50743d0
       CxB2 = -12.9523d0
       CxB3 =  49.7870d0
       CxB4 = -33.2545d0
       CxB5 = -11.1396d0
      elseif (ijzy.eq.3) then
c SOGGA11-X
       CxA0 =  2.99250d-01
       CxA1 =  3.21638d+00
       CxA2 = -3.55605d+00
       CxA3 =  7.65852d+00
       CxA4 = -1.12830d+01
       CxA5 =  5.25813d+00
       CxB0 =  2.99250d-01
       CxB1 = -2.88595d+00
       CxB2 =  3.23617d+00
       CxB3 = -2.45393d+00
       CxB4 = -3.75495d+00
       CxB5 =  3.96613d+00
      endif
c
      F1o3 = F1/F3
C--   F2o3 = F2/F3
C--   F3o5 = F3/F5
      F4o3 = F4/F3
C--   F5o3 = F5/F3
      Pi   = ACos(-F1)
      AsO  = (F48*PI*PI)**F1o3
      As   = F1/AsO
      Ax   = -(F3/F2) * (F4o3*Pi)**(-F1o3)
      mu = 0.2236536053d0
C
      IF(RHFGVB) THEN
C
C     ALPHA CONTRIBUTION...
C
          RHO    = ROA
          GAM    = GRDAA
          Rho43 = Rho**F4o3
          Gam12 = Sqrt(Gam)
c
          Eloc = Ax*Rho43
          x = Gam12/Rho43
          s = As*x
          y = s*s
          PON = mu*y
          Ffrac = F1-F1/(F1+PON)
          Fexp  = F1-exp(-PON)
          fa0 = CxA0
          fa1 = CxA1 *Ffrac
          fa2 = CxA2 *Ffrac**F2
          fa3 = CxA3 *Ffrac**F3
          fa4 = CxA4 *Ffrac**F4
          fa5 = CxA5 *Ffrac**F5
          fb0 = CxB0
          fb1 = CxB1 *Fexp
          fb2 = CxB2 *Fexp**F2
          fb3 = CxB3 *Fexp**F3
          fb4 = CxB4 *Fexp**F4
          fb5 = CxB5 *Fexp**F5
c
          Fggax = fa0+fa1+fa2+fa3+fa4+fa5 +
     $            fb0+fb1+fb2+fb3+fb4+fb5
C
C
          XGRD = XGRD + (Eloc*Fggax)*FTOTWT*2.0d0
C
C     FUNCTIONAL DERIVATIVES
C
            Rho13  = Rho**F1o3
            dElocdR=Ax*F4o3*Rho13
            dydR = -(F8/F3)*y/Rho
            dydG   = y/Gam
            dFfracdPON = F1/((F1+PON)**F2)
            dFexpdPON  = exp(-PON)
            dfa1dy = CxA1 *mu*dFfracdPON
            dfa2dy = CxA2 *mu*F2*Ffrac*dFfracdPON
            dfa3dy = CxA3 *mu*(F3 *Ffrac**F2)*dFfracdPON
            dfa4dy = CxA4 *mu*(F4 *Ffrac**F3)*dFfracdPON
            dfa5dy = CxA5 *mu*(F5 *Ffrac**F4)*dFfracdPON
            dfa1dR = dfa1dy *dydR
            dfa2dR = dfa2dy *dydR
            dfa3dR = dfa3dy *dydR
            dfa4dR = dfa4dy *dydR
            dfa5dR = dfa5dy *dydR
            dfa1dG = dfa1dy *dydG
            dfa2dG = dfa2dy *dydG
            dfa3dG = dfa3dy *dydG
            dfa4dG = dfa4dy *dydG
            dfa5dG = dfa5dy *dydG
            dfb1dy = CxB1 *mu*dFexpdPON
            dfb2dy = CxB2 *mu*F2*Fexp*dFexpdPON
            dfb3dy = CxB3 *mu*(F3 *Fexp**F2)*dFexpdPON
            dfb4dy = CxB4 *mu*(F4 *Fexp**F3)*dFexpdPON
            dfb5dy = CxB5 *mu*(F5 *Fexp**F4)*dFexpdPON
            dfb1dR = dfb1dy *dydR
            dfb2dR = dfb2dy *dydR
            dfb3dR = dfb3dy *dydR
            dfb4dR = dfb4dy *dydR
            dfb5dR = dfb5dy *dydR
            dfb1dG = dfb1dy *dydG
            dfb2dG = dfb2dy *dydG
            dfb3dG = dfb3dy *dydG
            dfb4dG = dfb4dy *dydG
            dfb5dG = dfb5dy *dydG
c
            dFggaxdR = dfa1dR+dfa2dR+dfa3dR+dfa4dR+dfa5dR +
     $                 dfb1dR+dfb2dR+dfb3dR+dfb4dR+dfb5dR
c
            dFggaxdG = dfa1dG+dfa2dG+dfa3dG+dfa4dG+dfa5dG +
     $                 dfb1dG+dfb2dG+dfb3dG+dfb4dG+dfb5dG
c
          VXCA1 = VXCA1 + (dElocdR*Fggax + Eloc*dFggaxdR)
C
          DUMAX = DUMAX + ((Eloc*dFggaxdG)*GRADXA)*2.0d0
          DUMAY = DUMAY + ((Eloc*dFggaxdG)*GRADYA)*2.0d0
          DUMAZ = DUMAZ + ((Eloc*dFggaxdG)*GRADZA)*2.0d0
C
      END IF
C
      IF(UROHF) THEN
C
C     ALPHA CONTRIBUTION...
C
          RHO    = ROA
          GAM    = GRDAA
          Rho43 = Rho**F4o3
          Gam12 = Sqrt(Gam)
c
          Eloc = Ax*Rho43
          x = Gam12/Rho43
          s = As*x
          y = s*s
          PON = mu*y
          Ffrac = F1-F1/(F1+PON)
          Fexp  = F1-exp(-PON)
          fa0 = CxA0
          fa1 = CxA1 *Ffrac
          fa2 = CxA2 *Ffrac**F2
          fa3 = CxA3 *Ffrac**F3
          fa4 = CxA4 *Ffrac**F4
          fa5 = CxA5 *Ffrac**F5
          fb0 = CxB0
          fb1 = CxB1 *Fexp
          fb2 = CxB2 *Fexp**F2
          fb3 = CxB3 *Fexp**F3
          fb4 = CxB4 *Fexp**F4
          fb5 = CxB5 *Fexp**F5
c
          Fggax = fa0+fa1+fa2+fa3+fa4+fa5 +
     $            fb0+fb1+fb2+fb3+fb4+fb5
C
C
          XGRD = XGRD + (Eloc*Fggax)*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
            Rho13  = Rho**F1o3
            dElocdR=Ax*F4o3*Rho13
            dydR = -(F8/F3)*y/Rho
            dydG   = y/Gam
            dFfracdPON = F1/((F1+PON)**F2)
            dFexpdPON  = exp(-PON)
            dfa1dy = CxA1 *mu*dFfracdPON
            dfa2dy = CxA2 *mu*F2*Ffrac*dFfracdPON
            dfa3dy = CxA3 *mu*(F3 *Ffrac**F2)*dFfracdPON
            dfa4dy = CxA4 *mu*(F4 *Ffrac**F3)*dFfracdPON
            dfa5dy = CxA5 *mu*(F5 *Ffrac**F4)*dFfracdPON
            dfa1dR = dfa1dy *dydR
            dfa2dR = dfa2dy *dydR
            dfa3dR = dfa3dy *dydR
            dfa4dR = dfa4dy *dydR
            dfa5dR = dfa5dy *dydR
            dfa1dG = dfa1dy *dydG
            dfa2dG = dfa2dy *dydG
            dfa3dG = dfa3dy *dydG
            dfa4dG = dfa4dy *dydG
            dfa5dG = dfa5dy *dydG
            dfb1dy = CxB1 *mu*dFexpdPON
            dfb2dy = CxB2 *mu*F2*Fexp*dFexpdPON
            dfb3dy = CxB3 *mu*(F3 *Fexp**F2)*dFexpdPON
            dfb4dy = CxB4 *mu*(F4 *Fexp**F3)*dFexpdPON
            dfb5dy = CxB5 *mu*(F5 *Fexp**F4)*dFexpdPON
            dfb1dR = dfb1dy *dydR
            dfb2dR = dfb2dy *dydR
            dfb3dR = dfb3dy *dydR
            dfb4dR = dfb4dy *dydR
            dfb5dR = dfb5dy *dydR
            dfb1dG = dfb1dy *dydG
            dfb2dG = dfb2dy *dydG
            dfb3dG = dfb3dy *dydG
            dfb4dG = dfb4dy *dydG
            dfb5dG = dfb5dy *dydG
c
            dFggaxdR = dfa1dR+dfa2dR+dfa3dR+dfa4dR+dfa5dR +
     $                 dfb1dR+dfb2dR+dfb3dR+dfb4dR+dfb5dR
c
            dFggaxdG = dfa1dG+dfa2dG+dfa3dG+dfa4dG+dfa5dG +
     $                 dfb1dG+dfb2dG+dfb3dG+dfb4dG+dfb5dG
c
          VXCA1 = VXCA1 + (dElocdR*Fggax + Eloc*dFggaxdR)
C
          DUMAX = DUMAX + ((Eloc*dFggaxdG)*GRADXA)*2.0d0
          DUMAY = DUMAY + ((Eloc*dFggaxdG)*GRADYA)*2.0d0
          DUMAZ = DUMAZ + ((Eloc*dFggaxdG)*GRADZA)*2.0d0
C
C     BETA CONTRIBUTION...
C
          RHO    = ROB
          GAM    = GRDBB
          Rho43 = Rho**F4o3
          Gam12 = Sqrt(Gam)
c
          Eloc = Ax*Rho43
          x = Gam12/Rho43
          s = As*x
          y = s*s
          PON = mu*y
          Ffrac = F1-F1/(F1+PON)
          Fexp  = F1-exp(-PON)
          fa0 = CxA0
          fa1 = CxA1 *Ffrac
          fa2 = CxA2 *Ffrac**F2
          fa3 = CxA3 *Ffrac**F3
          fa4 = CxA4 *Ffrac**F4
          fa5 = CxA5 *Ffrac**F5
          fb0 = CxB0
          fb1 = CxB1 *Fexp
          fb2 = CxB2 *Fexp**F2
          fb3 = CxB3 *Fexp**F3
          fb4 = CxB4 *Fexp**F4
          fb5 = CxB5 *Fexp**F5
c
          Fggax = fa0+fa1+fa2+fa3+fa4+fa5 +
     $            fb0+fb1+fb2+fb3+fb4+fb5
C
C
          XGRD = XGRD + (Eloc*Fggax)*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
C
            Rho13  = Rho**F1o3
            dElocdR=Ax*F4o3*Rho13
            dydR = -(F8/F3)*y/Rho
            dydG   = y/Gam
            dFfracdPON = F1/((F1+PON)**F2)
            dFexpdPON  = exp(-PON)
            dfa1dy = CxA1 *mu*dFfracdPON
            dfa2dy = CxA2 *mu*F2*Ffrac*dFfracdPON
            dfa3dy = CxA3 *mu*(F3 *Ffrac**F2)*dFfracdPON
            dfa4dy = CxA4 *mu*(F4 *Ffrac**F3)*dFfracdPON
            dfa5dy = CxA5 *mu*(F5 *Ffrac**F4)*dFfracdPON
            dfa1dR = dfa1dy *dydR
            dfa2dR = dfa2dy *dydR
            dfa3dR = dfa3dy *dydR
            dfa4dR = dfa4dy *dydR
            dfa5dR = dfa5dy *dydR
            dfa1dG = dfa1dy *dydG
            dfa2dG = dfa2dy *dydG
            dfa3dG = dfa3dy *dydG
            dfa4dG = dfa4dy *dydG
            dfa5dG = dfa5dy *dydG
            dfb1dy = CxB1 *mu*dFexpdPON
            dfb2dy = CxB2 *mu*F2*Fexp*dFexpdPON
            dfb3dy = CxB3 *mu*(F3 *Fexp**F2)*dFexpdPON
            dfb4dy = CxB4 *mu*(F4 *Fexp**F3)*dFexpdPON
            dfb5dy = CxB5 *mu*(F5 *Fexp**F4)*dFexpdPON
            dfb1dR = dfb1dy *dydR
            dfb2dR = dfb2dy *dydR
            dfb3dR = dfb3dy *dydR
            dfb4dR = dfb4dy *dydR
            dfb5dR = dfb5dy *dydR
            dfb1dG = dfb1dy *dydG
            dfb2dG = dfb2dy *dydG
            dfb3dG = dfb3dy *dydG
            dfb4dG = dfb4dy *dydG
            dfb5dG = dfb5dy *dydG
c
            dFggaxdR = dfa1dR+dfa2dR+dfa3dR+dfa4dR+dfa5dR +
     $                 dfb1dR+dfb2dR+dfb3dR+dfb4dR+dfb5dR
c
            dFggaxdG = dfa1dG+dfa2dG+dfa3dG+dfa4dG+dfa5dG +
     $                 dfb1dG+dfb2dG+dfb3dG+dfb4dG+dfb5dG
c
          VXCB1 = VXCB1 + (dElocdR*Fggax + Eloc*dFggaxdR)
C
          DUMBX = DUMBX + ((Eloc*dFggaxdG)*GRADXB)*2.0d0
          DUMBY = DUMBY + ((Eloc*dFggaxdG)*GRADYB)*2.0d0
          DUMBZ = DUMBZ + ((Eloc*dFggaxdG)*GRADZB)*2.0d0
      END IF
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  AUTOMATICALLY GENERATED CODE IMPLEMENTING LSDACSOK FUNCTIONAL AND
C  ITS DERIVATIVES. IT IS GENERATED BY FUNC-CODEGEN.PL BEING A PART OF
C  A "AUTOMATIC CODE GENERATION FRAMEWORK FOR ANALYTICAL FUNCTIONAL
C  DERIVATIVE EVALUATION", PAWEL SALEK, 2005
C
C  THIS FUNCTIONAL HAS BEEN GENERATED FROM A MAXIMA FILE.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     CPW91LDA:1.709920933;
C     TA:0.0310907;
C     TB:0.01554535;
C     TC:0.0168869;
C     UA:0.21370;
C     UB:0.20548;
C     UC:0.11125;
C     VA:7.5957;
C     VB:14.1189;
C     VC:10.357;
C     WA:3.5876;
C     WB:6.1977;
C     WC:3.6231;
C     XA:1.6382;
C     XB:3.3662;
C     XC:0.88026;
C     YA:0.49294;
C     YB:0.62517;
C     YC:0.49671;
C
C     OMEGA(Z):=((1+Z)^(4/3)+(1-Z)^(4/3)-2)/(2^(4/3)-2);
C     ENA(R,T,U,V,W,X,Y):=-2*T*(1+U*R)*LOG(1+1/(2*T*(V*SQRT(R)
C                         +W*R+X*R^(3/2)+Y*R^2)));
C     ENB(R,T,U,V,W,X,Y):=-2*T*(1+U*R)*LOG(1+1/(2*T*(V*SQRT(R)
C                         +W*R+X*R^(3/2)+Y*R^2)));
C     ENC(R,T,U,V,W,X,Y):=2*T*(1+U*R)*LOG(1+1/(2*T*(V*SQRT(R)
C                        +W*R+X*R^(3/2)+Y*R^2)));
C     EPS(RS,Z):=ENA(RS,TA,UA,VA,WA,XA,YA)+ENC(RS,TC,UC,VC,WC,XC,YC)*
C                OMEGA(Z)/CPW91LDA*(1-Z^4)+(ENB(RS,TB,UB,VB,WB,XB,YB)
C               -ENA(RS,TA,UA,VA,WA,XA,YA))*OMEGA(Z)*Z^4;
C
C     BETA:0.06672455060314922;
C     GAMMA:(1-LOG(2))/PI^2;
C     KF(P):=(3*PI^2*(P))^(1/3);
C     KS(P):=(4*KF(P)/PI)^(1/2);
C     G(Z):=((1+Z)^(2/3)+(1-Z)^(2/3))/2;
C     T(P,GP,Z):=GP/(2*G(Z)*KS(P)*P);
C     A(RS,Z):=BETA/GAMMA*(1/(EXP(-EPS(RS,Z)/((G(Z))^3*GAMMA))-1));
C     H(P,GP,RS,Z):=(G(Z))^3*GAMMA
C                  *LOG(1+BETA*T(P,GP,Z)^2*(1+A(RS,Z)*T(P,GP,Z)^2)
C             /(GAMMA*(1+A(RS,Z)*T(P,GP,Z)^2+(A(RS,Z))^2*T(P,GP,Z)^4)));
C     K(P,GP,RS,Z):=(EPS(RS,Z));
C
C*MODULE DFTXCC *DECK LSDACSOKCF
C---      SUBROUTINE LSDACSOKCF(RS,Z,ENERGY,DHDRS,DHDZ)
C---      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C---C
C---C     FUNCTIONAL ENERGY
C---C
C---      T1 = 0.2137D+0*RS+1.0D+0
C---      T2 = SQRT(RS)
C---      T3 = T2**3.0D+0
C---      T4 = RS**2.0D+0
C---      T5 = LOG(16.08197949869254D+0/
C---     >      (0.49294D+0*T4+1.6382D+0*T3+3.5876D+0*RS+
C---     >      7.5957D+0*T2)+1.0D+0)
C---      T6 = 1.923661050931536D+0
C---      T7 = Z**4.0D+0
C---      T8 = (Z+1.0D+0)**(4.0D+0/3.0D+0)
C---     >      +(1.0D+0-1.0D+0*Z)**(4.0D+0/3.0D+0)-2.0D+0
C---C
C---CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C---C
C---      ENERGY = .01975167351202899D+0*
C---     >      LOG(29.60874997779344D+0/(0.49671D+0*T4+
C---     >      0.88026D+0*T3+3.6231D+0*RS+10.357D+0*T2)
C---     >      +1.0D+0)*T6*(1.0D+0-1.0D+0*T7)*T8*(0.11125D+0*RS+
C---     >      1.0D+0)+T6*T7*T8*(0.0621814D+0*T1*T5-0.0310907D+0*
C---     >      LOG(32.16395899738507D+0/(0.62517D+0*T4+
C---     >      3.3662D+0*T3+6.1977D+0*RS+14.1189D+0*T2)
C---     >      +1.0D+0)*(0.20548D+0*RS+1.0D+0))-0.0621814D+0*
C---     >      T1*T5
C---C
C---C     FIRST FUNCTIONAL DERIVATIVE
C---C
C---      T1 = 0.2137D+0*RS+1.0D+0
C---      T2 = SQRT(RS)
C---      T3 = 1.0D+0/T2
C---      T4 = 0.98588D+0*RS+2.4573D+0*T2+
C---     >      3.79785D+0*T3+3.5876D+0
C---      T5 = T2**3.0D+0
C---      T6 = RS**2.0D+0
C---      T7 = 0.49294D+0*T6+1.6382D+0*T5+
C---     >      3.5876D+0*RS+7.5957D+0*T2
C---      T8 = 1.0D+0/T7**2.0D+0
C---      T9 = 16.08197949869254D+0/T7+1.0D+0
C---      T10 = 1.0D+0/T9
C---      T11 = LOG(T9)
C---      T12 = 1.923661050931536D+0
C---      T13 = 0.11125D+0*RS+1.0D+0
C---      T14 = 0.49671D+0*T6+0.88026D+0*
C---     >      T5+3.6231D+0*RS+10.357D+0*T2
C---      T15 = 29.60874997779344D+0/T14+
C---     >      1.0D+0
C---      T16 = Z**4.0D+0
C---      T17 = 1.0D+0-1.0D+0*T16
C---      T18 = 1.0D+0-1.0D+0*Z
C---      T19 = Z+1.0D+0
C---      T20 = T19**(4.0D+0/3.0D+0)+T18**
C---     >      (4.0D+0/3.0D+0)-2.0D+0
C---      T21 = LOG(T15)
C---      T22 = 0.20548D+0*RS+1.0D+0
C---      T23 = 0.62517D+0*T6+3.3662D+0*
C---     >      T5+6.1977D+0*RS+14.1189D+0*T2
C---      T24 = 32.16395899738507D+0/T23+
C---     >      1.0D+0
C---      T25 = LOG(T24)
C---      T26 = 1.333333333333333D+0*T19**
C---     >      (1.0D+0/3.0D+0)-1.333333333333333D+0*T18**
C---     >      (1.0D+0/3.0D+0)
C---      T27 = 0.0621814D+0*T1*T11-0.0310907D+0*
C---     >      T22*T25
C---      T28 = Z**3.0D+0
C---C
C---CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C---C
C---      DHDRS = T12*T16*T20*(1.0D+0*T22*
C---     >      (1.25034D+0*RS+5.0493D+0*T2+7.05945D+0*
C---     >      T3+6.1977D+0)/(T23**2.0D+0*T24)-0.006388517036D+0*
C---     >      T25+0.01328816518D+0*T11-1.0D+0*T1*T4*
C---     >      T8*T10)-.5848223626606717D+0*T12*T13*T17*
C---     >      T20*(0.99342D+0*RS+1.32039D+0*T2+5.1785D+0*
C---     >      T3+3.6231D+0)/(T14**2.0D+0*T15)+.002197373678213225D+0*
C---     >      T12*T21*T17*T20-0.01328816518D+0*T11+1.0D+0*
C---     >      T1*T4*T8*T10
C---      DHDZ = 4.0D+0*T12*T20*T27*T28+
C---     >      .01975167351202899D+0*T12*T13*T21*T17*
C---     >      T26+T12*T27*T16*T26-.07900669404811597D+0*
C---     >      T12*T13*T21*T28*T20
C---C
C---C     END OF CODE GENERATION
C---C
C---      RETURN
C---      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  AUTOMATICALLY GENERATED CODE IMPLEMENTING H0SOK-FULL FUNCTIONAL AND
C  ITS DERIVATIVES. IT IS GENERATED BY FUNC-CODEGEN.PL BEING A PART OF
C  A "AUTOMATIC CODE GENERATION FRAMEWORK FOR ANALYTICAL FUNCTIONAL
C  DERIVATIVE EVALUATION", PAWEL SALEK, 2005
C
C  THIS FUNCTIONAL HAS BEEN GENERATED FROM A MAXIMA FILE.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     CPW91LDA:1.709920933;
C     TA:0.0310907;
C     TB:0.01554535;
C     TC:0.0168869;
C     UA:0.21370;
C     UB:0.20548;
C     UC:0.11125;
C     VA:7.5957;
C     VB:14.1189;
C     VC:10.357;
C     WA:3.5876;
C     WB:6.1977;
C     WC:3.6231;
C     XA:1.6382;
C     XB:3.3662;
C     XC:0.88026;
C     YA:0.49294;
C     YB:0.62517;
C     YC:0.49671;
C     R(P):=(3/(4*PI*(P)))^(1/3);
C     OMEGA(Z):=((1+Z)^(4/3)+(1-Z)^(4/3)-2)/(2^(4/3)-2);
C     ENA(R,T,U,V,W,X,Y):=-2*T*(1+U*R)*LOG(1+1/(2*T*(V*R^(1/2)
C                        +W*R+X*R^(3/2)+Y*R^2)));
C     ENB(R,T,U,V,W,X,Y):=-2*T*(1+U*R)*LOG(1+1/(2*T*(V*R^(1/2)
C                        +W*R+X*R^(3/2)+Y*R^2)));
C     ENC(R,T,U,V,W,X,Y):=2*T*(1+U*R)*LOG(1+1/(2*T*(V*R^(1/2)
C                        +W*R+X*R^(3/2)+Y*R^2)));
C     EPS(P,Z):=ENA(R(P),TA,UA,VA,WA,XA,YA)
C              +ENC(R(P),TC,UC,VC,WC,XC,YC)*OMEGA(Z)/CPW91LDA*(1-Z^4)
C             +(ENB(R(P),TB,UB,VB,WB,XB,YB)-ENA(R(P),TA,UA,VA,WA,XA,YA))
C              *OMEGA(Z)*Z^4;
C
C     BETA:0.06672455060314922;
C     GAMMA:(1-LOG(2))/PI^2;
C     KF(P):=(3*PI^2*(P))^(1/3);
C     KS(P):=(4*KF(P)/PI)^(1/2);
C     G(Z):=((1+Z)^(2/3)+(1-Z)^(2/3))/2;
C     T(P,GP,Z):=GP/(2*G(Z)*KS(P)*P);
C     A(P,Z):=BETA/GAMMA*(1/(EXP(-EPS(P,Z)/((G(Z))^3*GAMMA))-1));
C     H(P,GP,RS,Z):=(G(Z))^3*GAMMA*LOG(1+BETA*T(P,GP,Z)^2*
C                   (1+A(P,Z)*T(P,GP,Z)^2)/
C                (GAMMA*(1+A(P,Z)*T(P,GP,Z)^2+(A(P,Z))^2*T(P,GP,Z)^4)));
C     K(P,GP,RS,Z):=H(P,GP,RS,Z);
C
C*MODULE DFTXCC *DECK H0SOKFULL
      SUBROUTINE H0SOKFULL(P,GP,Z,ENERGY,DHDP,DHDG,DHDRS,DHDZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DATA PI  /3.1415926535897932384626433832795D+0/
C
C     FUNCTIONAL ENERGY
C
      T1 = .3068528194400547D+0
      T2 = 1.0D+0-1.0D+0*Z
      T3 = Z+1.0D+0
      T4 = T3**(2.0D+0/3.0D+0)+T2**(
     >      2.0D+0/3.0D+0)
      T5 = T4**3.0D+0
      T6 = PI**2.0D+0
      T7 = 1.442249570307408D+0
      T8 = 1.0D+0/T7
      T9 = 1.0D+0/T1
      T10 = GP**2.0D+0
      T11 = 1.0D+0/P**(7.0D+0/3.0D+0)
      T12 = 1.0D+0/T4**2.0D+0
      T13 = PI**(7.0D+0/3.0D+0)
      T14 = 1.259921049894873D+0
      T15 = 1.0D+0/(2.0D+0*T14-2.0D+0)
      T16 = Z**4.0D+0
      T17 = T3**(4.0D+0/3.0D+0)+T2**
     >      (4.0D+0/3.0D+0)-2.0D+0
      T18 = 1.732050807568877D+0
      T19 = P**(1.0D+0/3.0D+0)
      T20 = PI**(1.0D+0/3.0D+0)
      T21 = SQRT(T19*T20)
      T22 = 1.0D+0/T21**3.0D+0
      T23 = 1.0D+0/T14
      T24 = 1.200936955176003D+0
      T25 = 1.0D+0/T21
      T26 = 2.080083823051904D+0
      T27 = 0.39685026299205D+0
      T28 = 1.0D+0/P**(2.0D+0/3.0D+0)
      T29 = 1.0D+0/PI**(2.0D+0/3.0D+0)
      T30 = .6299605249474366D+0
      T31 = 1.0D+0/T19
      T32 = 1.0D+0/T20
      T33 = 0.0621814D+0*(0.2137D+0*
     >      T7*T30*T31*T32+1.0D+0)*LOG(16.08197949869254D+0/
     >      (3.5876D+0*T7*T30*T31*T32+0.49294D+0*T26*
     >      T27*T28*T29+7.5957D+0*T23*T24*T25+0.8191D+0*
     >      T18*T22)+1.0D+0)
      T34 = 2.718281828459045D+0**(8.0D+0*
     >      T9*(-T15*T16*T17*(T33-0.0310907D+0*LOG(
     >      32.16395899738507D+0/(6.1977D+0*T7*T30*
     >      T31*T32+0.62517D+0*T26*T27*T28*T29+14.1189D+0*
     >      T23*T24*T25+1.6831D+0*T18*T22)+1)*(0.20548D+0*
     >      T7*T30*T31*T32+1))+T33-.01975167351202899D+0*
     >      T15*(1.0D+0-T16)*T17*LOG(29.60874997779344D+0/
     >      (3.6231D+0*T7*T30*T31*T32+0.49671D+0*T26*
     >      T27*T28*T29+10.357D+0*T23*T24*T25+0.44013D+0*
     >      T18*T22)+1)*(0.11125D+0*T7*T30*T31*T32+
     >      1))*T6/T5)-1.0D+0
      T35 = 0.0166811376507873D+0*T10*
     >      T11*T12*T13*T8*T9/T34
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      ENERGY = 0.125D+0*T1*T5*LOG(0.0166811376507873D+0*
     >      T10*T11*T12*T13*(T35+1.0D+0)*T8*T9/(2.782603533245138D-4*
     >      GP**4.0D+0*PI**(14.0D+0/3.0D+0)/(T1**2.0D+0*
     >      T26*T34**2.0D+0*T4**4.0D+0*P**(14.0D+0/
     >      3.0D+0))+T35+1.0D+0)+1.0D+0)/T6
C
C     FIRST FUNCTIONAL DERIVATIVE
C
      T1 = .3068528194400547D+0
      T2 = 1.0D+0-1.0D+0*Z
      T3 = Z+1.0D+0
      T4 = T3**(2.0D+0/3.0D+0)+T2**(
     >      2.0D+0/3.0D+0)
      T5 = T4**3.0D+0
      T6 = PI**2.0D+0
      T7 = 1.0D+0/T6
      T8 = 1.442249570307408D+0
      T9 = 1.0D+0/T8
      T10 = 1.0D+0/T1
      T11 = GP**2.0D+0
      T12 = 1.0D+0/P**(7.0D+0/3.0D+0)
      T13 = T4**2.0D+0
      T14 = 1.0D+0/T13
      T15 = PI**(7.0D+0/3.0D+0)
      T16 = 1.0D+0/T5
      T17 = 1.259921049894873D+0
      T18 = 1.0D+0/(2.0D+0*T17-2.0D+0)
      T19 = Z**4.0D+0
      T20 = 1.0D+0-1.0D+0*T19
      T21 = T3**(4.0D+0/3.0D+0)+T2**
     >      (4.0D+0/3.0D+0)-2.0D+0
      T22 = 1.732050807568877D+0
      T23 = P**(1.0D+0/3.0D+0)
      T24 = PI**(1.0D+0/3.0D+0)
      T25 = SQRT(T23*T24)
      T26 = 1.0D+0/T25**3.0D+0
      T27 = 1.0D+0/T17
      T28 = 1.200936955176003D+0
      T29 = 1.0D+0/T25
      T30 = 2.080083823051904D+0
      T31 = 0.39685026299205D+0
      T32 = 1.0D+0/P**(2.0D+0/3.0D+0)
      T33 = 1.0D+0/PI**(2.0D+0/3.0D+0)
      T34 = .6299605249474366D+0
      T35 = 1.0D+0/T23
      T36 = 1.0D+0/T24
      T37 = 3.6231D+0*T8*T34*T35*T36+
     >      0.49671D+0*T30*T31*T32*T33+10.357D+0*T27*
     >      T28*T29+0.44013D+0*T22*T26
      T38 = 29.60874997779344D+0/T37+
     >      1.0D+0
      T39 = LOG(T38)
      T40 = 0.11125D+0*T8*T34*T35*T36+
     >      1.0D+0
      T41 = 3.5876D+0*T8*T34*T35*T36+
     >      0.49294D+0*T30*T31*T32*T33+7.5957D+0*T27*
     >      T28*T29+0.8191D+0*T22*T26
      T42 = 16.08197949869254D+0/T41+
     >      1.0D+0
      T43 = LOG(T42)
      T44 = 0.2137D+0*T8*T34*T35*T36+
     >      1.0D+0
      T45 = 0.0621814D+0*T43*T44
      T46 = 6.1977D+0*T8*T34*T35*T36+
     >      0.62517D+0*T30*T31*T32*T33+14.1189D+0*
     >      T27*T28*T29+1.6831D+0*T22*T26
      T47 = 32.16395899738507D+0/T46+
     >      1.0D+0
      T48 = LOG(T47)
      T49 = 0.20548D+0*T8*T34*T35*T36+
     >      1.0D+0
      T50 = T45-0.0310907D+0*T48*T49
      T51 = -
     >      1.0D+0*T18*T19*T21*T50+T45-.01975167351202899D+0*
     >      T18*T20*T21*T39*T40
      T52 = 2.718281828459045D+0**(8.0D+0*
     >      T10*T16*T51*T6)
      T53 = T52-1.0D+0
      T54 = 1.0D+0/T53
      T55 = 0.0166811376507873D+0*T9*
     >      T10*T11*T12*T14*T15*T54
      T56 = T55+1.0D+0
      T57 = 1.0D+0/T30
      T58 = 1.0D+0/T1**2.0D+0
      T59 = GP**4.0D+0
      T60 = 1.0D+0/P**(14.0D+0/3.0D+0)
      T61 = 1.0D+0/T4**4.0D+0
      T62 = PI**(14.0D+0/3.0D+0)
      T63 = 1.0D+0/T53**2.0D+0
      T64 = 2.782603533245138D-4*T57*
     >      T58*T59*T60*T61*T62*T63+T55+1.0D+0
      T65 = 1.0D+0/T64
      T66 = 0.0166811376507873D+0*T9*
     >      T10*T11*T12*T14*T15*T56*T65+1.0D+0
      T67 = 1.0D+0/T66
      T68 = 1.0D+0/P**(10.0D+0/3.0D+0)
      T69 = -.03892265451850371D+0*T9*T10*T11*T68*T14*
     >      T15*T54
      T70 = 1.0D+0/T4**5.0D+0
      T71 = 1.0D+0/P**(4.0D+0/3.0D+0)
      T72 = -.004429388393333333D+0*T8*T34*T71*T43*
     >      T36
      T73 = 1.0D+0/P**(5.0D+0/3.0D+0)
      T74 = 1.0D+0/T25**5.0D+0
      T75 = -1.0D+0*(-1.26595D+0*T27*
     >      T28*T32*T26*T24-0.40955D+0*T22*T32*T74*
     >      T24-1.195866666666667D+0*T8*T34*T71*T36-
     >      .3286266666666666D+0*T30*T31*T73*T33)*
     >      T44/(T41**2.0D+0*T42)
      T76 = -1.0D+0*T18*T19*T21*(T75+
     >      T72+1.0D+0*(-2.35315D+0*T27*T28*T32*T26*
     >      T24-0.84155D+0*T22*T32*T74*T24-2.0659D+0*
     >      T8*T34*T71*T36-0.41678D+0*T30*T31*T73*
     >      T33)*T49/(T46**2.0D+0*T47)+.002129505678666666D+0*
     >      T8*T34*T71*T48*T36)+T75+T72+.5848223626606717D+0*
     >      T18*T20*T21*(-1.726166666666666D+0*T27*
     >      T28*T32*T26*T24-0.220065D+0*T22*T32*T74*
     >      T24-1.2077D+0*T8*T34*T71*T36-0.33114D+0*
     >      T30*T31*T73*T33)*T40/(T37**2.0D+0*T38)
     >      +7.324578927377418D-4*T18*T8*T34*T71*T20*
     >      T21*T39*T36
      T77 = -.1334491012062984D+0*T9*
     >      T58*T11*T12*T70*T76*PI**(13.0D+0/3.0D+0)*
     >      T63*T52
      T78 = 1.0D+0/T64**2.0D+0
      T79 = 1.0D+0/T53**3.0D+0
      T80 = GP**3.0D+0
      T81 = T2**(1.0D+0/3.0D+0)
      T82 = T3**(1.0D+0/3.0D+0)
      T83 = .6666666666666666D+0/T82-
     >      .6666666666666666D+0/T81
      T84 = -.03336227530157461D+0*T9*
     >      T10*T11*T12*T83*T16*T15*T54
      T85 = 1.333333333333333D+0*T82-
     >      1.333333333333333D+0*T81
      T86 = Z**3.0D+0
      T87 = 8.0D+0*T10*T16*T6*(-4.0D+0*
     >      T18*T21*T50*T86-1.0D+0*T18*T19*T50*T85-
     >      .01975167351202899D+0*T18*T20*T85*T39*
     >      T40+.07900669404811597D+0*T18*T86*T21*
     >      T39*T40)-24.0D+0*T10*T51*T6*T61*T83
      T88 = -0.0166811376507873D+0*T9*
     >      T10*T11*T12*T14*T15*T87*T63*T52
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      DHDP = 0.125D+0*T1*T5*T67*T7*(-
     >      0.0166811376507873D+0*T10*T11*T12*T14*
     >      T15*T56*T78*T9*(-.004452165653192221D+0*
     >      T52*T57*T59*T60*T76*T79*PI**(20.0D+0/3.0D+0)/
     >      (T1**3.0D+0*T4**7.0D+0)-.001298548315514398D+0*
     >      T57*T58*T59*T61*T62*T63/P**(17.0D+0/3.0D+0)
     >      +T77+T69)+0.0166811376507873D+0*T9*T10*
     >      T11*T12*T14*T15*T65*(T77+T69)-.03892265451850371D+0*
     >      T9*T10*T11*T68*T14*T15*T56*T65)
      DHDRS = 0.0D+00
      DHDG = 0.125D+0*T1*T5*(5.565207066490276D-4*
     >      T57*T58*T80*T60*T61*T62*T65*T54+.03336227530157461D+0*
     >      T9*T10*GP*T12*T14*T15*T56*T65-0.0166811376507873D+0*
     >      T9*T10*T11*T12*T14*T15*(.03336227530157461D+0*
     >      T9*T10*GP*T12*T14*T15*T54+.001113041413298055D+0*
     >      T57*T58*T80*T60*T61*T62*T63)*T56*T78)*
     >      T67*T7
      DHDZ = 0.125D+0*T1*T5*T67*T7*(-
     >      0.0166811376507873D+0*T9*T10*T11*T12*T14*
     >      T15*T56*T78*(T88-5.565207066490276D-4*
     >      T57*T58*T59*T60*T61*T62*T87*T79*T52+T84-
     >      .001113041413298055D+0*T57*T58*T59*T60*
     >      T83*T70*T62*T63)+0.0166811376507873D+0*
     >      T9*T10*T11*T12*T14*T15*T65*(T88+T84)-.03336227530157461D+0*
     >      T9*T10*T11*T12*T83*T16*T15*T56*T65)+0.375D+0*
     >      T1*T13*LOG(T66)*T7*T83
C
C     END OF CODE GENERATION
C
      RETURN
      END
C*MODULE DFTXCC *DECK GZETA
      Subroutine GZeta(Zeta,GZet,dGZdz,d2GZdz,d3GZdz)
      Implicit Real*8(A-H,O-Z)
C
C     Evaluate G(Zeta) and its derivatives for DFT.
C
      Save F0,F1,F2,F3,F4,F9,F27
      Data F0/0.0d0/,F1/1.0d0/,F2/2.0d0/,F3/3.0d0/,F4/4.0d0/,
     $     F9/9.0d0/,F27/27.0D0/
C
      F1o3 = F1/F3
      F1o9 = F1/F9
      F4o27= F4/F27
c
      GZet   = F0
      dGZdz  = F0
      d2GZdz = F0
      d3GZdz = F0
c
      OMZ = F1-Zeta
      OPZ = F1+Zeta
      OMZ2 = OMZ**2
      OPZ2 = OPZ**2
      OMZ3 = OMZ**(-F1o3)
      GZet = GZet+OMZ*OMZ3
      dGZdz = dGZdz-OMZ3
      d2GZdz = d2GZdz-OMZ3/OMZ
      d3GZdz = d3GZdz-OMZ3/OMZ2
      OPZ3 = OPZ**(-F1o3)
      GZet = GZet+OPZ*OPZ3
      dGZdz = dGZdz+OPZ3
      d2GZdz = d2GZdz-OPZ3/OPZ
      d3GZdz = d3GZdz+OPZ3/OPZ2
c
      GZet   = GZet/F2
      dGZdz  = dGZdz*F1o3
      d2GZdz = d2GZdz*F1o9
      d3GZdz = d3GZdz*F4o27
      Return
      End
C
C*MODULE DFTXCC  *DECK DLDFCF
C> @brief   correlation part of dispersionless Density Functional (dlDF)
C>
C> @details this is a variant of M05-2X with fewer parameters,
C>          which are optimized to remove dispersion energy
C>          from the DFT functional.
C>            K.Pernal, R.Podeszwa, K.Patkowski, K.Szalewicz
C>            Phys.Rev.Lett. 103, 263201/1-4(2009)
C>          This routine only provides the functional itself:
C>          no +D type dispersion is added back in.
C>          The routine is based on the M05 code from U.Minnesota.
C>
C> @param   they appear to be similar to all other functionals.
C>
C> @author  Johannes Hoja (Graz) 10/2012
C
      SUBROUTINE DLDFCF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                  GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                  FTOTWT,ECF,
     >                  VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                  VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                  TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB)
C
      IMPLICIT NONE
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION ECF
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION F1, F2, F3, F4,COPP
      DATA COPP/0.0031D0/
      DATA F1/1.0D0/,F2/2.0D0/,F3/3.0D0/,F4/4.0D0/
C
C    CALL TO THE DLDFCSS ROUTINE
C
      DOUBLE PRECISION PA,GAA,TA,FA,FPA,FGA,FTA,EUA,CHIA,EUPA
      DOUBLE PRECISION CHIAP,CHIAG
      DOUBLE PRECISION PB,GBB,TB,FB,FPB,FGB,FTB,EUB,CHIB,EUPB
      DOUBLE PRECISION CHIBP,CHIBG
C
      DOUBLE PRECISION SOP, SOPP0, SOPP1,SOPP2, SOPP3, SOPP4
      DOUBLE PRECISION PI, PI34, F13
      DOUBLE PRECISION RS,RSP,ZETA,DZDA,DZDB,POTLC,DLDS,DLDZ,D2LDSS
      DOUBLE PRECISION D2LDSZ,D2LDZZ
      DOUBLE PRECISION P, EUEG, U, W
      DOUBLE PRECISION DUDCHIA,DUDCHIB,DUDPA,DUDPB,DUDGA,DUDGB
      DOUBLE PRECISION DWDU,DWDPA,DWDPB, DWDGA,DWDGB,EUEGPA,EUEGPB
C
C     SPIN-RESTRICTED
C
      SOP=1.0D0
C
C     PARAMETERS FOR DLDF CORRELATION
         SOPP0 =   1.0000000D0
         SOPP1 =   5.9515308D0
         SOPP2 = -11.1602877D0
         SOPP3 =   0.0000000D0
         SOPP4 =   0.0000000D0
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
C
      IF (RHFGVB) THEN
C
C     GET THE DENSITY, GRADIENT, AND TAU FOR THE ALPHA SPIN FROM THE
C     TOTAL
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE DLDFCSS ROUTINE, WE USE 2*TA AS THE TAU, SO WE DO NOT
C     DIVIDE THE TAU BY 2 HERE
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL DLDFCSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG)
        PB    = PA
        GBB   = GAA
        TB    = TA
        FB    = FA
        FPB   = FPA
        FGB   = FGA
        FTB   = FTA
        EUB   = EUA
        CHIB  = CHIA
        EUPB  = EUPA
        CHIBP = CHIAP
        CHIBG = CHIAG
C
        ECF = ECF + 2.0D+00*FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D+00*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
      END IF
C
C     SPIN-UNRESTRICTED
C
      IF (UROHF) THEN
C
C     ALPHA
C
        PA  = ROA
        GAA = GRDAA
C
C     IN THE DLDF ROUTINE, WE USE 2*TA AS THE TAU
C
        TA = TAUXA + TAUYA + TAUZA
C
        CALL DLDFCSS(PA,GAA,TA,FA,FPA,FGA,FTA,EUA,
     >              CHIA,EUPA,CHIAP,CHIAG)
C
        ECF = ECF + FA*FTOTWT
C
        VXCA1 = VXCA1 + FPA
C
        DUMAX = DUMAX + 2.0D0*(FGA*GRADXA)
        DUMAY = DUMAY + 2.0D0*(FGA*GRADYA)
        DUMAZ = DUMAZ + 2.0D0*(FGA*GRADZA)
C
        DMXCA = DMXCA + FTA
C
C     BETA
C
        PB = ROB
        GBB = GRDBB
C
C     IN THE DLDFCSS ROUTINE, WE USE 2*TA AS THE TAU
C
        TB = TAUXB + TAUYB + TAUZB
C
        CALL DLDFCSS(PB,GBB,TB,FB,FPB,FGB,FTB,EUB,
     >              CHIB,EUPB,CHIBP,CHIBG)
C
        ECF = ECF + FB*FTOTWT
C
        VXCB1 = VXCB1 + FPB
C
        DUMBX = DUMBX + 2.0D0*(FGB*GRADXB)
        DUMBY = DUMBY + 2.0D0*(FGB*GRADYB)
        DUMBZ = DUMBZ + 2.0D0*(FGB*GRADZB)
C
        DMXCB = DMXCB + FTB
      ENDIF
C
      P = PA + PB
C
      RS   =(PI34/P) ** F13
      RSP  =-RS/(F3*P)
      ZETA =(PA-PB)/P
      DZDA =(F1-ZETA)/P
      DZDB =(-F1-ZETA)/P
C
      CALL LSDAC(RS,ZETA,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,
     >           D2LDZZ)
C
      EUEG = P*POTLC - EUA - EUB
      U    = COPP*(CHIA+CHIB)/(F1 + COPP*(CHIA+CHIB))
      W    = SOPP0+U*(SOPP1+U*(SOPP2+U*(SOPP3+U*SOPP4)))
C
      ECF = ECF + SOP*EUEG*W*FTOTWT
C
      DUDCHIA =COPP/(F1 + COPP*(CHIA+CHIB))**2
      DUDCHIB =COPP/(F1 + COPP*(CHIA+CHIB))**2
C
      DUDPA = DUDCHIA*CHIAP
      DUDPB = DUDCHIB*CHIBP
      DUDGA = DUDCHIA*CHIAG
      DUDGB = DUDCHIB*CHIBG
      DWDU  = SOPP1+U*(F2*SOPP2+U*(F3*SOPP3+U*F4*SOPP4))
      DWDPA = DWDU*DUDPA
      DWDPB = DWDU*DUDPB
      DWDGA = DWDU*DUDGA
      DWDGB = DWDU*DUDGB
C
      EUEGPA = POTLC + P*DLDS*RSP + P*DLDZ*DZDA - EUPA
      EUEGPB = POTLC + P*DLDS*RSP + P*DLDZ*DZDB - EUPB
C
        IF (RHFGVB) THEN
          VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
C
          DUMAX = DUMAX + 2.0D+00*SOP*(EUEG*DWDGA)*GRADXA
          DUMAY = DUMAY + 2.0D+00*SOP*(EUEG*DWDGA)*GRADYA
          DUMAZ = DUMAZ + 2.0D+00*SOP*(EUEG*DWDGA)*GRADZA
        ELSE
          VXCA1 = VXCA1 + SOP*(EUEGPA*W + EUEG*DWDPA)
          VXCB1 = VXCB1 + SOP*(EUEGPB*W + EUEG*DWDPB)
C
          DUMAX = DUMAX + 2.0D+00*SOP*EUEG*DWDGA*GRADXA
          DUMAY = DUMAY + 2.0D+00*SOP*EUEG*DWDGA*GRADYA
          DUMAZ = DUMAZ + 2.0D+00*SOP*EUEG*DWDGA*GRADZA
C
          DUMBX = DUMBX + 2.0D+00*SOP*EUEG*DWDGB*GRADXB
          DUMBY = DUMBY + 2.0D+00*SOP*EUEG*DWDGB*GRADYB
          DUMBZ = DUMBZ + 2.0D+00*SOP*EUEG*DWDGB*GRADZB
        ENDIF
      RETURN
      END
C
C*MODULE DFTXCC  *DECK DLDFCSS
C> @brief   same spin part of dispersionless Density Functional (dlDF)
C>
C> @details unknown
C>
C> @param   unknown
C>
C> @author  Johannes Hoja (Graz) 10/2012
C
      SUBROUTINE DLDFCSS(PX,GX,TX,F,FP,FG,FT,EUEG,CHI,EUEGP,
     >                   CHIP,CHIG)
      IMPLICIT NONE
C
C     COMPUTE THE SAME-SPIN PART OF THE DLDF CORRELATION FUNCTIONAL FOR
C     ONE GRID POINT AND ONE SPIN-CASE.
C
      DOUBLE PRECISION PX, GX, TX, F, FP, FG, FT
      DOUBLE PRECISION EUEG, CHI, EUEGP, CHIP, CHIG
      DOUBLE PRECISION PT25, F1, F2, F3, F4, F8
      DOUBLE PRECISION SS, SSS0,SSS1, SSS2, SSS3, SSS4, CSS
      DOUBLE PRECISION PI, PI34, F13, F83
      DOUBLE PRECISION RS, D, FSCC, RSP, DFSCCP, DFSCCG
      DOUBLE PRECISION E, W, U, DFSCCT, DUDCHI, DWDU, DWDP, DWDG
      DOUBLE PRECISION D2LDSS,D2LDSZ,D2LDZZ,POTLC,DLDS,DLDZ
C
      DATA PT25/0.25D0/, F1/1.0D0/, F2/2.0D0/, F3/3.0D0/,
     >     F4/4.0D0/, F8/8.0D0/, CSS/0.06D0/
C
      SS = 1.0D+00
C
C     PARAMETERS FOR DLDF CORRELATION
         SSS0 =   1.0000000D0
         SSS1 =  -2.5960897D0
         SSS2 =   2.2233793D0
         SSS3 =   0.0000000D0
         SSS4 =   0.0000000D0
C
      PI   = F4*ATAN(F1)
      PI34 = F3 / (F4*PI)
      F13  = F1 / F3
      F83  = F8 / F3
C
C
      RS = (PI34/PX) ** F13
C
      CALL LSDAC(RS,F1,POTLC,DLDS,DLDZ,D2LDSS,D2LDSZ,D2LDZZ)
C
      EUEG = PX*POTLC
C
      D = TX - PT25*GX/PX
C
      CHI = GX/PX**F83
C
      U = CSS*CHI/(F1 + CSS*CHI)
      W = SSS0+U*(SSS1+U*(SSS2+U*(SSS3+U*SSS4)))
C
      FSCC = D/TX
C
      E = FSCC*W*EUEG
      F = E*SS
C
      RSP = -RS/(F3*PX)
C
      CHIG = F1/PX**F83
      CHIP = -F83*CHI/PX
C
      DFSCCP = PT25*GX/(TX*PX**2)
      DFSCCG =-PT25/(TX*PX)
      DFSCCT = PT25*GX/(PX*TX**2)
      DUDCHI = CSS/((F1+CSS*CHI)**2)
C
      DWDU = SSS1+U*(F2*SSS2+U*(F3*SSS3+U*F4*SSS4))
      DWDP = DWDU*DUDCHI*CHIP
      DWDG = DWDU*DUDCHI*CHIG
C
      EUEGP = POTLC + PX*DLDS*RSP
C
      FP = SS*(DFSCCP*W*EUEG
     >   + FSCC*DWDP*EUEG
     >   + FSCC*W*EUEGP)
C
      FG = SS*(DFSCCG*W*EUEG
     >   + FSCC*DWDG*EUEG)
C
      FT = SS*(DFSCCT*W*EUEG)
      RETURN
      END
C
C*MODULE DFTXCC  *DECK DLDFXF
C> @brief   exchange part of dispersionless Density Functional (dlDF)
C>
C> @see     functional description in the correlation part: DLDFCF.
C>
C> @param   they appear to be similar to all other functionals.
C>
C> @author  Johannes Hoja (Graz) 10/2012
C
      SUBROUTINE DLDFXF(RHFGVB,UROHF,ROA,ROB,GRDAA,GRDBB,
     >                  GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB,
     >                  FTOTWT,XGRD,
     >                  VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA,
     >                  VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB,
     >                  TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB)
C
      IMPLICIT NONE
C
      INTEGER IM05
      COMMON /CM05  / CM05XF, IM05
C
C     CLOSED-SHELL OPEN-SHELL LOGICALS
C
      LOGICAL RHFGVB,UROHF
C
C     EXCHANGE ENERGY
C
      DOUBLE PRECISION XGRD
C
C     CHARGE DENSITY
C
      DOUBLE PRECISION ROA,ROB
C
C     CHARGE DENSITY GRADIENT AND COMPONENTS
C
      DOUBLE PRECISION GRDAA,GRDBB
      DOUBLE PRECISION GRADXA,GRADYA,GRADZA,GRADXB,GRADYB,GRADZB
C
C     KINETIC ENERGY DENSITY COMPONENTS
C
      DOUBLE PRECISION TAUXA,TAUYA,TAUZA,TAUXB,TAUYB,TAUZB
C
C     QUADRATURE WEIGHTS
C
      DOUBLE PRECISION FTOTWT
C
C     THE XC POTENTIAL
C
      DOUBLE PRECISION VXCA1,DUMAX,DUMAY,DUMAZ,DMXCA
      DOUBLE PRECISION VXCB1,DUMBX,DUMBY,DUMBZ,DMXCB
C
C     SCALE FACTORS FOR LOCAL AND NON-LOCAL CONTRIBUTIONS.
C
      DOUBLE PRECISION CM05XF
C
C     WORKING VARIABLES
C
      DOUBLE PRECISION PI
C
      DOUBLE PRECISION AT1, AT2, AT3, AT4, AT5, AT6, AT7, AT8, AT9
      DOUBLE PRECISION AT, AT10, AT11, C1, C2, FL, FNL
      DOUBLE PRECISION RRHO, RHO43, RHO13, RHOO, RHO53
      DOUBLE PRECISION GAMMA2, GAMMA
      DOUBLE PRECISION TAUUEG, TSIG, WSIG, W1, W2, W3, W4, W5, W6
      DOUBLE PRECISION W7, W8, W9, W10, W11, FSIG
C
      DOUBLE PRECISION TAUN,TAUU
      DOUBLE PRECISION F23, F53, F13
      DOUBLE PRECISION F4O3
      DOUBLE PRECISION ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT
      DOUBLE PRECISION NINE, F10, F11
      DOUBLE PRECISION CS, AX, P32, S, S2, EN, ED, E, DE, DEN, DED
C
C      FUNCTIONAL DERIVATIVES
C
      DOUBLE PRECISION DFDW, DWDT, DTDR, DTDTAU, DGGADR, DFDR
      DOUBLE PRECISION DFDTAU, DGGADG
C
      PARAMETER (PI = 3.1415926535897932384626433832795D0)
C
      PARAMETER (F13=1.D0/3.D0)
      PARAMETER (F4O3=4.D0/3.D0)
      PARAMETER (F23=2.0D0/3.D0, F53=5.D0/3.D0)
      PARAMETER (ONE=1.0D0, TWO=2.0D0, THREE=3.0D0, FOUR=4.0D0,
     >           FIVE=5.0D0,SIX=6.0D0, SEVEN=7.0D0,
     >           EIGHT=8.0D0, NINE=9.0D0,F10=10.D0, F11=11.D0)
C
      FL  = CM05XF
      FNL = CM05XF
C
C     PARAMETERS FOR DLDF
        AT1 = -0.1637571D0
        AT2 = -0.1880028D0
        AT3 = -0.4490609D0
        AT4 = -0.0082359D0
        AT5 =  0.0000000D0
        AT6 =  0.0000000D0
        AT7 =  0.0000000D0
        AT8 =  0.0000000D0
        AT9 =  0.0000000D0
        AT10=  0.0000000D0
        AT11=  0.0000000D0
C
      AT = 1.0D0
      C1 = 0.3511128D0
      C2 = C1/4.8827323D0
C
      CS  = 0.5D0/(3.0D0*PI*PI)**F13
      P32 = (3.D0*PI**2)**F23
C
      AX = (-0.75D0)*(3.0D0/PI)**F13
C
      IF (RHFGVB) THEN
        RHOO  = ROA+ROB
        RHO43 = RHOO**F4O3
        RRHO  = 1D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN = TAUXA + TAUYA + TAUZA
C
        TAUU   = TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = 4.0D+00*GRDAA
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     =(DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   =(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TAUUEG/TAUU**2
        DGGADR = F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG =(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR
C
        DUMAX = DUMAX + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADXA)
        DUMAY = DUMAY + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADYA)
        DUMAZ = DUMAZ + 2.0D+00*(TWO*DGGADG*AX*RHO43*(ONE+FSIG)*GRADZA)
C
        DMXCA = DMXCA + 0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
      END IF
C
      IF (UROHF) THEN
C
C     USE SPIN DENSITY FUNCTIONAL THEORY IE N-->2N
C     EX=(1/2)EX[2*ALPHA] + (1/2)EX[2*BETA]
C
C     ALPHA
C
        RHOO  = TWO*ROA
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXA + TAUYA + TAUZA)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDAA
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
C
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*0.5D0*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     =(DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU =-TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCA1 = VXCA1 + (DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR)*
     >                   0.5D0
C
        DUMAX = DUMAX + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADXA)
        DUMAY = DUMAY + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADYA)
        DUMAZ = DUMAZ + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADZA)
C
        DMXCA = DMXCA + 0.5D0*0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
C
C     BETA
C
        RHOO  = TWO*ROB
        RHO43 = RHOO**F4O3
        RRHO  = 1.0D0/RHOO
        RHO13 = RHO43*RRHO
        RHO53 = RHOO**F53
C
        TAUN   = (TAUXB + TAUYB + TAUZB)*(ONE/TWO)
        TAUU   = TWO*TAUN
        TAUUEG = 0.3D0*P32*RHO53
        TSIG   = TAUUEG/TAUU
        WSIG   =(TSIG-ONE)/(TSIG+ONE)
        W1     = WSIG
        W2     = WSIG*W1
        W3     = WSIG*W2
        W4     = WSIG*W3
        W5     = WSIG*W4
        W6     = WSIG*W5
        W7     = WSIG*W6
        W8     = WSIG*W7
        W9     = WSIG*W8
        W10    = WSIG*W9
        W11    = WSIG*W10
        FSIG   = AT*(AT1*W1+ AT2*W2 + AT3*W3
     >         + AT4*W4 + AT5*W5 + AT6*W6 + AT7*W7
     >         + AT8*W8 + AT9*W9 + AT10*W10 + AT11*W11)
C
        GAMMA2 = GRDBB
        GAMMA2 = FOUR*GAMMA2
        GAMMA  = SQRT(GAMMA2)
        S      = CS*GAMMA/RHO43
        S2     = S*S
        EN     = C1*S2
        ED     = ONE + C2*S2
        E      = EN/ED
C
        XGRD = XGRD + RHO43*AX*(FL+FNL*E)*(ONE+FSIG)*0.5D0*FTOTWT
C
C     FUNCTIONAL DERIVATIVES
C
        DEN    = TWO*C1*S
        DED    = TWO*C2*S
        DE     = (DEN*ED-EN*DED)/(ED*ED)
        DFDW   = AT*(AT1 + TWO*AT2*W1 + THREE*AT3*W2
     >         + FOUR*AT4*W3 + FIVE*AT5*W4
     >         + SIX*AT6*W5 + SEVEN*AT7*W6
     >         + EIGHT*AT8*W7 + NINE*AT9*W8
     >         + F10*AT10*W9 + F11*AT11*W10)
        DWDT   = TWO/((ONE + TSIG)**2)
        DTDR   = TWO*(0.5D0*P32*RHO13*RHO13)/TAUU
        DTDTAU = -TWO*TAUUEG/TAUU**2
        DGGADR = TWO*F4O3*RHO13*AX*(FL+FNL*(E-S*DE))
        DFDR   = DFDW*DWDT*DTDR
        DFDTAU = DFDW*DWDT*DTDTAU
        DGGADG = FOUR*(FNL*DE*S/(TWO*GAMMA2))
C
        VXCB1 = VXCB1 + (DGGADR*(ONE+FSIG)+(FL+FNL*E)*AX*RHO43*DFDR)*
     >                 0.5D0
C
        DUMBX = DUMBX + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADXB)
        DUMBY = DUMBY + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADYB)
        DUMBZ = DUMBZ + 2.0D0*
     >                 (DGGADG*AX*RHO43*(ONE+FSIG)*0.5D0*GRADZB)
C
        DMXCB = DMXCB + 0.5D0*0.5D0*RHO43*AX*(FL+FNL*E)*DFDTAU
C
      ENDIF
      RETURN
      END

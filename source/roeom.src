C 27 Apr 12 - MWS - use VICLR to zero integer arrays
C 30 Aug 11 - JJL - NEW MODULE FOR OPEN SHELL EOM-CCSD
C
C*MODULE ROEOM   *DECK DROPEOM
      SUBROUTINE DROPEOM(NOA,NUA,NOB,NUB)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION LITTLED,LITTLESD
C
      PARAMETER (MXATM=2000, MXAO=8192)
C
      CHARACTER*1 SMALLS,SMALLD
      CHARACTER*8 C8TMP
C
      COMMON /FMCOM / X(1)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /OPEOM / MACT,MREST,MULTEOM,ISELCT(100)
C
      DATA CIBIGS/8HCIS     /
      DATA  CHECK/8HCHECK   /
C
C     --- ACTUAL DRIVER FOR OPEN-SHELL EOMCCSD CALCULATIONS ---
C         H=OCCUPIED, H MEANS "HOLES" WHICH ARE OCCUPIED
C                       STATES IN THE FERMI VACUUM
C         P= VIRTUAL, P MEANS "PARTICLES" WHICH ARE UNOCCUPIED
C                       STATES IN THE FERMI VACUUM
C
C         ---- OPEN FILES SPECIFIC TO OPEN-SHELL EOMCC CALCULATIONS ----
      CALL OPEOMFILE
C
C        LOWER CASE D IS 100 IN ASCII COLLATING SEQUENCE
C        LOWER CASE S IS 115 IN ASCII COLLATING SEQUENCE
C
      SMALLD=CHAR(100)
      SMALLS=CHAR(115)
C
      C8TMP='EOMCCS'//SMALLD//' '
      READ(UNIT=C8TMP,FMT='(A8)') LITTLED
      C8TMP='EOMCC'//SMALLS//SMALLD//' '
      READ(UNIT=C8TMP,FMT='(A8)') LITTLESD
      C8TMP='CI'//SMALLS//'     '
      READ(UNIT=C8TMP,FMT='(A8)') CILITS
C
C               ---- EOMCC INITIAL START ----
      IF(MTHINIT.EQ.2.AND.MACT.NE.1) THEN
       GUESS = CIBIGS
       IDIM=1+NOU+NOU
      ELSE IF(MTHINIT.EQ.2.AND.MACT.EQ.1) THEN
       GUESS = CILITS
       IDIM=1+NOACT*NUACT+NOACT*NUACT
      ELSE IF(MTHINIT.NE.2.AND.MACT.EQ.1) THEN
       GUESS = LITTLESD
       IDIM=3*NOACT*NOACT*NUACT*NUACT
       IDIM=IDIM+NOACT*NUACT+NOACT*NUACT
      ELSE
       GUESS = LITTLED
       IDIM=3*NOACT*NOACT*NUACT*NUACT
       IDIM=IDIM+NOU+NOU
      END IF
      WRITE(IW,9100)GUESS
      CALL FLSHBF(IW)
      IDIM2=IDIM*IDIM
      L1=NUM
      CALL VALFM(LOADFM)
      I1   = LOADFM + 1
      I2   = I1     + NO2            !FHH
      I3   = I2     + NU2            !FPP
      I4   = I3     + NOU            !FHP
      I5   = I4     + NO3U           !VHHHP
      I6   = I5     + NOU3           !VHPPP
      I7   = I6     + NO4            !VHHHH
      I8   = I7     + NO2U2          !VHPHP
      I9   = I8     + NU3            !VPPP
      I10  = I9     + NOU            !INDEX1
      I11  = I10    + NOU            !INDEX2
      I12  = I11    + NO2U2          !INDEXAA
      I13  = I12    + NO2U2          !INDEXBB
      I14  = I13    + NO2U2          !INDEXAB
      I15  = I14    + IDIM2          !HM
      I16  = I15    + IDIM           !WR
      I17  = I16    + IDIM           !WI
      I18  = I17    + IDIM2          !VR
      I19  = I18    + 4*IDIM         !WORK
      I20  = I19    + (2*NOU+3*NO2U2)!TRANS
      I21  = I20    + L1             !LABMO
      LAST = I21    + IDIM           !ISPIN
      NEED=LAST-LOADFM-1
      WRITE(IW,9110) NEED
      CALL FLSHBF(IW)
C
      CALL GETFM(NEED)
      IF(EXETYP.EQ.CHECK) GO TO 76
      CALL OPEOMINIT(NOA,NUA,NOB,NUB,X(I1),X(I2),X(I3),
     *             X(I4),X(I5),X(I6),X(I7),X(I8),X(I9),
     *             X(I10),X(I11),X(I12),X(I13),X(I14),
     *             X(I15),X(I16),X(I17),X(I18),X(I19),
     *             X(I20),X(I21),L1,IDIM,NROOT,GUESS)
 76   CONTINUE
      CALL RETFM(NEED)
C
      WRITE(IW,9120)
      CALL TIMIT(1)
C                ---- EOMCCSD SOLVER ----
      WRITE(IW,9200)
      CALL FLSHBF(IW)
      CALL VALFM(LOADFM)
      NOUP=NOU+NOU+NO2U2+NO2U2+NO2U2
      ISPACE=MAXEOM
      ISPACE2=ISPACE*ISPACE
      I1   = LOADFM + 1
      I2   = I1     + NU2            !DPPA
      I3   = I2     + NU2            !DPPB
      I4   = I3     + NO2            !DHHA
      I5   = I4     + NO2            !DHHB
      I6   = I5     + NO2            !FHH
      I7   = I6     + NU2            !FPP
      I8   = I7     + NOU            !FHP
      I9   = I8     + NOU3           !VHPPP
      I10  = I9     + NO3U           !VHHHP
      I11  = I10    + NO4            !VHHHH
      I12  = I11    + NO2U2          !VHPHP
      I13  = I12    + NU3            !VPPP
C--   I14  = I13    + NOU            !INDEX1
C--   I15  = I14    + NOU            !INDEX2
C--   I16  = I15    + NO2U2          !INDEXAA
C--   I17  = I16    + NO2U2          !INDEXBB
C--   I18  = I17    + NO2U2          !INDEXAB
      I19  = I13    + NO2U2          !T2
      I20  = I19    + NO2            !OHA
      I21  = I20    + NU2            !OPA
      I22  = I21    + NO2            !OHB
      I23  = I22    + NU2            !OPB
      I24  = I23    + NOU3           !TI
      I25  = I24    + NOUP           !VEC1
      I26  = I25    + NOUP           !VEC2
      I27  = I26    + ISPACE2        !HM
      I28  = I27    + ISPACE2        !HMAUX
      I29  = I28    + ISPACE         !WR
      I30  = I29    + ISPACE         !WI
      I31  = I30    + ISPACE2        !VR
      I32  = I31    + 4*ISPACE       !WORK
      I33  = I32    + NOUP           !AUX
      I34  = I33    + NROOT          !SYM
      I35  = I34    + NROOT          !ISPIN
      I36  = I35    + NROOT          !R0
      I37  = I36    + NROOT          !REL
      I38  = I37    + NROOT          !ENGMAT
      LAST = I38    + NROOT          !ICON
      NEED=LAST-LOADFM-1
      WRITE(IW,9210) NEED
      CALL FLSHBF(IW)
C
      CALL GETFM(NEED)
      IF(EXETYP.EQ.CHECK) GO TO 66
C
      CALL OPSOLSR(NOA,NUA,NOB,NUB,X(I1),X(I2),X(I3),X(I4),
     *             X(I5),X(I6),X(I7),X(I8),X(I9),X(I10),
     *             X(I11),X(I12),X(I13),X(I19),X(I20),
     *             X(I21),X(I22),X(I23),X(I24),X(I25),
     *             X(I26),X(I27),X(I28),X(I29),X(I30),
     *             X(I31),X(I32),X(I33),X(I34),X(I35),
     *             X(I36),X(I37),X(I38),NROOT)
C
 66   CONTINUE
      CALL RETFM(NEED)
C
      WRITE(IW,9220)
      CALL TIMIT(1)
C
      RETURN
 9100 FORMAT(/8X,'------------------------------------'/
     *        8X,'EOMCC',2X,A8,'INITIAL START PROGRAM'/
     *        8X,'------------------------------------')
 9110 FORMAT(1X,'MEMORY NEEDED BY OPEOMINIT: ',I12,' WORDS')
 9120 FORMAT(1X,'..... DONE WITH EOMCC INITIAL START CALCULATION
     *.....')
 9200 FORMAT(/18X,'--------------------------'/
     *        18X,'OPEN-SHELL EOMCCSD PROGRAM'/
     *        18X,'--------------------------')
 9210 FORMAT(1X,'MEMORY NEEDED BY OPSOLSR: ',I12,' WORDS')
 9220 FORMAT(1X,'..... DONE WITH OPEN-SHELL EOMCCSD AMPLITUDE ITERATIONS
     *.....')
      END
C
C*MODULE ROEOM   *DECK OPEOMFILE
      SUBROUTINE OPEOMFILE
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
C
C       THIS FILE STORES THE RESULTS OF EACH ITERATION OF THE SOLVER, AND
C       IS USED TO CONSTRUCT THE ITERATIVE SPACE USED IN EACH ITERATION
      CALL CCOPEN(96,NO2U2,'ITSPACE')
C
C       THIS FILE STORES THE INITIAL START VECTORS
      LEN97=NOU+NOU+NO2U2+NO2U2+NO2U2
      CALL CCOPEN(97,LEN97,'INSTART')
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK OPSOLSR
      SUBROUTINE OPSOLSR(NOA,NUA,NOB,NUB,DPPA,DPPB,DHHA,DHHB,
     *                   FHH,FPP,FHP,VHPPP,VHHHP,VHHHH,VHPHP,
     *                   VPPP,T2,OHA,OPA,OHB,OPB,
     *                   TI,VEC1,VEC2,HM,HMAUX,WR,WI,VR,WORK,
     *                   AUX,SYM,ISPIN,R0,REL,ENGMAT,ICON,
     *                   NROOT)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      CHARACTER*3 SYM
C
      LOGICAL CNVR
C
      PARAMETER (MXAO=8192)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /CCENGY/ ENRG,EREF,EMP2,ECCN,ETOT(6),ECORR(6),
     *                DIAGS(3),AMPMX(5,2),IAMPMX(5,4,2),XO1,XO2,
     *                DIFMAX,DIFFENG,ITER,CNVR
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /OPEOM / MACT,MULTEOM,MREST,ISELCT(100)
C
      DIMENSION FPP(1),FHH(1),FHP(1)
      DIMENSION VHPPP(1),VHHHP(1),VHHHH(1),VHPHP(1),VPPP(1)
      DIMENSION OHA(1),OPA(1),OHB(1),OPB(1),TI(1)
      DIMENSION VEC1(1),VEC2(1),HM(1),HMAUX(1),WR(1),WI(1),VR(1)
      DIMENSION T2(1),WORK(1),AUX(1)
      DIMENSION DPPA(NUA,NUA),DPPB(NUB,NUB)
      DIMENSION DHHA(NOA,NOA),DHHB(NOB,NOB)
      DIMENSION ENGMAT(NROOT),SYM(NROOT)
      DIMENSION ISPIN(NROOT),ICON(NROOT)
      DIMENSION JSTATE(9),R0(NROOT),REL(NROOT)
C
      DATA ONE/1.00D+00/
      DATA FEV/27.2113957D+00/
      TOL=CVGEOM
C
      ISPACE=MAXEOM
      ISPACE2=ISPACE*ISPACE
      NOUP=NOAUA+NOBUB+NOA2UA2+NOB2UB2+NO2U2AB
C
      CALL ZEROMA(ENGMAT,1,NROOT)
      CALL VICLR(ICON,1,NROOT)
C
      CALL RDTAB2(NUA,NUA,DPPA,1,NFT891)
      CALL RDTAB2(NUB,NUB,DPPB,2,NFT891)
      CALL RDTAB2(NOA,NOA,DHHA,3,NFT891)
      CALL RDTAB2(NOB,NOB,DHHB,4,NFT891)
C
      DO 1,IROOT=1,NROOT
C
C   !!!!  LOOP FOR SELECTING INITIAL START VECTORS WITH ISELCT
      IF(ISELCT(1).GT.0.AND.ISELCT(1).LE.NROOT) THEN
      IMATCH=0
       DO 111,J=1,100
        IF(IROOT.EQ.ISELCT(J)) THEN
         IMATCH=1
        END IF
        IF(ISELCT(J).LT.0.OR.ISELCT(J).GT.NROOT) THEN
          WRITE(IW,9004) ISELCT(J),NROOT
          CALL ABRT
          STOP
        END IF
 111   CONTINUE
       IF(IMATCH.EQ.0) GO TO 1
      ELSE IF(ISELCT(1).LT.0.OR.ISELCT(1).GT.NROOT) THEN
       WRITE(IW,9004) ISELCT(1),NROOT
       CALL ABRT
       STOP
      END IF
C
      WRITE(IW,301)IROOT
      CALL FLSHBF(IW)
      CALL ZEROMA(HM,1,ISPACE2)
      CALL ZEROMA(HMAUX,1,ISPACE2)
      CALL ZEROMA(VEC1,1,NOUP)
      CALL ZEROMA(VEC2,1,NOUP)
      CALL REOMINIT(IROOT,NOUP,VEC1)        ! READ INITIAL START VECTORS (FILE 97)
C
      IF(MREST.NE.0) THEN                   ! READ RESTART VECTORS IF REQUESTED
       CALL VICLR(JSTATE,1,9)
       READ(NFT825,REC=6,IOSTAT=IX)JSTATE   ! CHECK WHETHER RESTART FILE EXISTS
       IF(IX.NE.0) THEN
        WRITE(IW,9005)
        CALL ABRT
        STOP
       END IF
       DO 70 I=1,8
        IDIFF=JSTATE(I+1)-NSTEOM(I)
        IF(IDIFF.NE.0) THEN                 ! CHECK IF RESTART NSTATE VECTOR MATCHES PREVIOUS RUN
         WRITE(IW,9000) JSTATE(2),JSTATE(3),JSTATE(4),JSTATE(5),
     *                  JSTATE(6),JSTATE(7),JSTATE(8),JSTATE(9)
         CALL ABRT
         STOP
        END IF
 70    CONTINUE
       JROOT=5*(IROOT-1)
       JROOT=JROOT+10
       CALL RDTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
       CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
       CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JROOT+3),NFT825)
       CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (JROOT+4),NFT825)
       CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JROOT+5),NFT825)
      END IF
C
      CALL DCOPY(NOUP,VEC1,1,VEC2,1)    ! NORMALIZATION PROCEDURE
      XNORM=DDOT(NOUP,VEC1,1,VEC2,1)
      XNORM=ONE/SQRT(XNORM)
      CALL DSCAL(NOUP,XNORM,VEC1(1),1)
C
       CALL VICLR(JSTATE,1,9)
       JSTATE(1)=MULTEOM
       DO 71 I=1,8
        JSTATE(I+1)=NSTEOM(I)
 71    CONTINUE
       WRITE(NFT825,REC=6)JSTATE
C
      CALL WRTAB2(NOA,NUA,VEC1(1),1,96)
      CALL WRTAB2(NOB,NUB,VEC1(1+NOAUA),2,96)
      CALL WRTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),3,96)
      CALL WRTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),4,96)
      CALL WRTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            5,96)
C
      DO 2,ITER=1,ISPACE
C
C     ---------- GENERATING HR (R TAKEN FROM ITSPACE) -------------
      IREC=10*(ITER-1)
      CALL RDTAB2(NOA,NUA,VEC1(1),(IREC+1),96)
      CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(IREC+2),96)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(IREC+3),96)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+4),96)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+5),96)
      CALL HREOMSD(NOA,NUA,NOB,NUB,VEC1(1),VEC1(1+NOAUA),
     *            VEC2(1),VEC2(1+NOAUA),VEC1(1+NOAUA+NOBUB),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            VEC2(1+NOAUA+NOBUB),VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),FPP,
     *            FHP,FHH,VHPPP,VHHHP,VHHHH,VHPHP,VPPP,
     *            T2,OPA,OPB,OHA,OHB,TI)
C
      CALL ZEROMA(VEC1(1+NOAUA+NOBUB),1,NOA2UA2+NOB2UB2+NO2U2AB)
      CALL ASYMEOM(VEC2(1+NOAUA+NOBUB),NOA,NUA,VEC1(1+NOAUA+NOBUB))
      CALL ASYMEOM(VEC2(1+NOAUA+NOBUB+NOA2UA2),NOB,NUB,
     *             VEC1(1+NOAUA+NOBUB+NOA2UA2))
      CALL WRTAB2(NOA,NUA,VEC2(1),(IREC+6),96)
      CALL WRTAB2(NOB,NUB,VEC2(1+NOAUA),(IREC+7),96)
      CALL WRTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(IREC+8),96)
      CALL WRTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+9),96)
      CALL WRTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+10),96)
C
C     ------------------ FORMING SMALL MATRIX -------------------
      CALL EOMSMLLMA(NOA,NUA,NOB,NUB,ISPACE,ITER,HM,HMAUX,
     *            VEC1,VEC2,NOUP,IREC)
C
C     ------------- PICKING UP THE BEST EIGENVECTOR ------------
      CALL EOMSELVEC(ISPACE,ITER,HM,WR,WI,VR,WORK,XENE)
C
C     ---- FORMING OPTIMUM COMBINATION OF VECTORS FROM ITSPACE ON VEC1 ----
      ISN=1   !READING FROM ITSPACE
      CALL EOMCOMB(NOA,NUA,NOB,NUB,ISPACE,ITER,WI,VEC1,VEC2,ISN,NOUP)
      JROOT=5*(IROOT-1)
      JROOT=JROOT+10
      CALL WRTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
      CALL WRTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
      CALL WRTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),
     *            (JROOT+3),NFT825)
      CALL WRTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (JROOT+4),NFT825)
      CALL WRTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JROOT+5),NFT825)
      IF(ITER.EQ.1) THEN
       CALL FIXGRSYM(NOA,NOB,IGRSYM)
       CALL OPEOMSYM(NOA,NUA,NOB,NUB,VEC1(1),VEC1(1+NOAUA),
     *            VEC1(1+NOAUA+NOBUB),VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            SYM(IROOT),NSYM,IGRSYM)
C       JSTATE(NSYM+1)=JSTATE(NSYM+1)+1
C       WRITE(NFT825,REC=6)JSTATE
      END IF
C
C     ---- FORMING OPTIMAL COMBINATION OF VECTORS FROM HR ON VEC2 ------
      ISN=2   !READING FROM HR
      CALL EOMCOMB(NOA,NUA,NOB,NUB,ISPACE,ITER,WI,VEC2,AUX,ISN,NOUP)
C
C     ---------------- FORMING THE CORRECTION ON AUX ------------------
      CALL ZEROMA(AUX,1,NOUP)
      CALL DCOPY(NOUP,VEC2(1),1,AUX(1),1)
      CALL DAXPY(NOUP,-XENE,VEC1(1),1,AUX(1),1)
      CALL EOMDEN(NOA,NUA,NOB,NUB,XENE,DHHA,DHHB,DPPA,DPPB,
     *           AUX(1),AUX(1+NOAUA),AUX(1+NOAUA+NOBUB),
     *           AUX(1+NOAUA+NOBUB+NOA2UA2),
     *           AUX(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2))
C
C     ------------------ CONVERGENCE TEST ---------------------
      CALL NORMV(NOUP,RES,AUX(1))
      WRITE(IW,300) ITER,XENE,RES
      CALL FLSHBF(IW)
      IF(RES.LT.TOL) GO TO 1000
C
C     ----------- ORTHONORMALIZATION OF THE CORRECTION ------------
      CALL EOMORTH(NOA,NUA,NOB,NUB,NOUP,ITER,AUX,VEC1)
C
C     -------- WRITING THE CORRECTION TO RECORD NO. ITER+1 ---------
      JREC=10*ITER
      CALL WRTAB2(NOA,NUA,AUX(1),(JREC+1),96)
      CALL WRTAB2(NOB,NUB,AUX(1+NOAUA),(JREC+2),96)
      CALL WRTAB(NOA,NUA,NUA,NOA,AUX(1+NOAUA+NOBUB),(JREC+3),96)
      CALL WRTAB(NOB,NUB,NUB,NOB,AUX(1+NOAUA+NOBUB+NOA2UA2),
     *           (JREC+4),96)
      CALL WRTAB(NOA,NUA,NUB,NOB,AUX(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *           (JREC+5),96)
C
 2    CONTINUE
C
C     --------------- LACK OF CONVERGENCE ---------------
      WRITE(IW,302) IROOT
      CALL RDTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
      CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JROOT+3),NFT825)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (JROOT+4),NFT825)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JROOT+5),NFT825)
      CALL R0CALC(NOA,NUA,NOB,NUB,XENE,FHP,VHPHP,
     *            VEC1(1),VEC1(1+NOAUA),VEC1(1+NOAUA+NOBUB),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),R0(IROOT),
     *            REL(IROOT),CVGEOM)
      CALL EOMNORM(NOA,NUA,NOB,NUB,VEC1(1),VEC1(1+NOAUA),
     *             VEC1(1+NOAUA+NOBUB),VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *             VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),R0(IROOT))
      ENGMAT(IROOT)=XENE
      CALL WRTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
      CALL WRTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
      CALL WRTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JROOT+3),NFT825)
      CALL WRTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *           (JROOT+4),NFT825)
      CALL WRTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *           (JROOT+5),NFT825)
      GO TO 1
C
C     ----------------- CONVERGENCE ---------------------
 1000 CONTINUE
      WRITE(IW,303)IROOT
      WRITE(IW,304)XENE
      ICON(IROOT)=1
      CALL RDTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
      CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JROOT+3),NFT825)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (JROOT+4),NFT825)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JROOT+5),NFT825)
      CALL R0CALC(NOA,NUA,NOB,NUB,XENE,FHP,VHPHP,
     *            VEC1(1),VEC1(1+NOAUA),VEC1(1+NOAUA+NOBUB),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),R0(IROOT),
     *            REL(IROOT),CVGEOM)
      CALL EOMNORM(NOA,NUA,NOB,NUB,VEC1(1),VEC1(1+NOAUA),
     *             VEC1(1+NOAUA+NOBUB),VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *             VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),R0(IROOT))
      CALL WRTAB2(NOA,NUA,VEC1(1),(JROOT+1),NFT825)
      CALL WRTAB2(NOB,NUB,VEC1(1+NOAUA),(JROOT+2),NFT825)
      CALL WRTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JROOT+3),NFT825)
      CALL WRTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *           (JROOT+4),NFT825)
      CALL WRTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *           (JROOT+5),NFT825)
      CALL FIXGRSYM(NOA,NOB,IGRSYM)
      CALL OPEOMSYM(NOA,NUA,NOB,NUB,VEC1(1),VEC1(1+NOAUA),
     *            VEC1(1+NOAUA+NOBUB),VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            SYM(IROOT),NSYM,IGRSYM)
      WRITE(IW,320)
      CALL PRNTEOMA(NOA,NUA,VEC1(1))
      CALL PRNTEOMB(NOB,NUB,VEC1(1+NOAUA))
      CALL PRNTEOMAA(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB))
      CALL PRNTEOMBB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2))
      CALL PRNTEOMAB(NOA,NUA,NUB,NOB,
     *                       VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2))
      CALL FLSHBF(IW)
C
      IF(NOA.EQ.NOB) THEN
      CALL EOMSPIN(NOA,NUA,NOB,NUB,R0(IROOT),VEC1(1),VEC1(1+NOAUA),
     *             VEC1(1+NOAUA+NOBUB),
     *             VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),ISPIN(IROOT),
     *             IROOT)
       IF(ISPIN(IROOT).NE.0) THEN
        WRITE(IW,350) IROOT,SYM(IROOT),ISPIN(IROOT),ENRG+EREF+XENE,
     *                               XENE,R0(IROOT),REL(IROOT)
        CALL FLSHBF(IW)
       ELSE
        WRITE(IW,360) IROOT,SYM(IROOT),CHAR(63),ENRG+EREF+XENE,
     *                               XENE,R0(IROOT),REL(IROOT)
       END IF
      ELSE
       WRITE(IW,305) IROOT,SYM(IROOT),ENRG+EREF+XENE,XENE,
     *                              R0(IROOT),REL(IROOT)
       CALL FLSHBF(IW)
      END IF
      ENGMAT(IROOT)=XENE
 1    CONTINUE
C
      ICHECK=0
      IF(NOA.EQ.NOB) THEN
      WRITE(IW,370)
      DO 42,I=1,NROOT
C
C   !!!!  LOOP FOR FILTERING INITIAL START VECTORS (ISELCT)
      IF(ISELCT(1).GT.0.AND.ISELCT(1).LE.NROOT) THEN
      IMATCH=0
       DO 112,J=1,100
        IF(I.EQ.ISELCT(J)) THEN
         IMATCH=1
        END IF
 112   CONTINUE
      IF(IMATCH.EQ.0) GO TO 42
      END IF
C
       IF(ICON(I).EQ.1) THEN
        IF(ISPIN(I).NE.0) THEN
         WRITE(IW,380)SYM(I),ISPIN(I),ENGMAT(I),(ENGMAT(I)*FEV),
     *   ENRG+EREF+ENGMAT(I)
        ELSE
         WRITE(IW,390)SYM(I),CHAR(63),ENGMAT(I),(ENGMAT(I)*FEV),
     *   ENRG+EREF+ENGMAT(I)
        END IF
       ELSE
        WRITE(IW,400)SYM(I),CHAR(63),ENGMAT(I),(ENGMAT(I)*FEV),
     *  ENRG+EREF+ENGMAT(I)
        ICHECK=ICHECK+1
       END IF
 42   CONTINUE
      ELSE
      WRITE(IW,306)
      DO 43,I=1,NROOT
C
C   !!!!  LOOP FOR FILTERING INITIAL START VECTORS (ISELCT)
      IF(ISELCT(1).GT.0.AND.ISELCT(1).LE.NROOT) THEN
      IMATCH=0
       DO 113,J=1,100
        IF(I.EQ.ISELCT(J)) THEN
         IMATCH=1
        END IF
 113   CONTINUE
      IF(IMATCH.EQ.0) GO TO 43
      END IF
C
       IF(ICON(I).EQ.1) THEN
        WRITE(IW,307)SYM(I),ENGMAT(I),(ENGMAT(I)*FEV),
     *  ENRG+EREF+ENGMAT(I)
       ELSE
        WRITE(IW,308)SYM(I),ENGMAT(I),(ENGMAT(I)*FEV),
     *  ENRG+EREF+ENGMAT(I)
        ICHECK=ICHECK+1
       END IF
 43   CONTINUE
      END IF
C
      IF(ICHECK.GE.1) THEN
       WRITE(IW,310)ICHECK,NROOT
       CALL ABRT
       STOP
      END IF
C
      RETURN
 9000 FORMAT(1X,'ERROR IN RESTARTING THE CALCULATION!',/
     *       1X,'THE NSTATE VECTOR MUST BE THE SAME AS IN THE',
     *       1X,'PREVIOUS CALCULATION!'/
     *       1X,'PREVIOUS VALUE: NSTATE(1)=',I3,',',I3,',',I3,',',I3,
     *                       ',',I3,',',I3,',',I3,',',I3)
 9004 FORMAT(1X,'ERROR IN ROOT SELECTION WITH ISELCT!',/
     *       1X,I3,1X,'IS NOT A VALID CHOICE',/
     *       1X,'TRY AGAIN USING VALUES BETWEEN 1 AND',1X,I3)
 9005 FORMAT(1X,'ERROR IN RESTARTING THE CALCULATION!',/
     *       1X,'NO RESTART INFORMATION EXISTS!',/
     *       1X,'PLACE THE AMPROCC FILE OF A PREVIOUS',
     *       1X,'CALCULATION INTO THE WORKING',/
     *       1X,'DIRECTORY AND RESUBMIT.')
 300  FORMAT(1X,'ITERATION:',1X,I3,2X,'EOMCCSD ENERGY=',1X,F14.10,2X,
     *       'CONV:',1X,F14.9)
 301  FORMAT(/6X,'BEGINNING OPEN-SHELL EOMCCSD ITERATIONS FOR ROOT NO.',
     *       1X,I3)
 302  FORMAT(/2X,'THE EOMCCSD ITERATIONS FOR ROOT NO.',1X,I3,
     *       1X,'DID NOT CONVERGE',/)
 303  FORMAT(/2X,'THE EOMCCSD ITERATIONS FOR ROOT NO.',1X,I3,
     *       1X,'HAVE CONVERGED')
 304  FORMAT(2X,'EOMCCSD VERTICAL EXCITATION ENERGY:',
     *       1X,F15.10,/)
 305  FORMAT(/8X,'SUMMARY OF OPEN-SHELL EOMCCSD RESULTS FOR ROOT NO.',
     *       1X,I3,/14X,'THE SYMMETRY OF THE STATE IS',A4,/
     *       14X,'EOMCCSD ENERGY=',F20.10,/
     *       14X,'VERTICAL EXCITATION ENERGY=',F15.10,/
     *       14X,'FOR THIS ROOT R0=',F15.10,/
     *       14X,'REL DIAGNOSTIC (R1*R1 + 2*R2*R2):',F8.3)
 306  FORMAT(//13X,'---- SUMMARY OF OPEN-SHELL EOM-CCSD',
     *             ' CALCULATIONS ----'/
     *       15X,'EXCITATION',6X,'EXCITATION',6X,'TOTAL'/
     *       2X,'SYMMETRY',5X,'ENERGY (H)',6X,'ENERGY (EV)',5X,
     *       'ENERGY (H)',6X,'ITERATIONS')
 307  FORMAT(5X,A3,2X,F15.8,6X,F8.3,4X,F15.8,5X,'CONVERGED')
 308  FORMAT(5X,A3,2X,F15.8,6X,F8.3,4X,F15.8,5X,'UNCONVERGED')
 310  FORMAT(/,1X,'EOMCCSD HALTED WITHOUT FINDING ALL DESIRED STATES',
     *        ' (',I3,' UNCONVERGED OUT OF',I3,' REQUESTED)'/
     *        1X,'IF ADDITIONAL ITERATIONS SEEM APPROPRIATE',
     *        ' AFTER YOU HAVE CONSIDERED'/
     *        1X,'THE CONVERGENCE BEHAVIOR ABOVE, INCREASE',
     *        ' MAXEOM IN $EOMINP'/)
 350  FORMAT(/8X,'SUMMARY OF EOMCCSD RESULTS FOR ROOT NO.',
     *       1X,I3,/14X,'THE SYMMETRY OF THE STATE IS',A4,/
     *       14X,'THE SPIN MULTIPLICITY OF THE STATE IS',I2,/
     *       14X,'EOMCCSD ENERGY =',F20.10,/
     *       14X,'VERTICAL EXCITATION ENERGY=',F15.10,/
     *       14X,'FOR THIS ROOT R0 =',F15.10,/
     *       14X,'REL DIAGNOSTIC (R1*R1 + 2*R2*R2):',F8.3)
 360  FORMAT(/8X,'SUMMARY OF EOMCCSD RESULTS FOR ROOT NO.',
     *       1X,I3,/14X,'THE SYMMETRY OF THE STATE IS',A4,/
     *       14X,'THE SPIN MULTIPLICITY OF THE STATE IS',A2,/
     *       14X,'EOMCCSD ENERGY =',F20.10,/
     *       14X,'VERTICAL EXCITATION ENERGY=',F15.10,/
     *       14X,'FOR THIS ROOT R0 =',F15.10,/
     *       14X,'REL DIAGNOSTIC (R1*R1 + 2*R2*R2):',F8.3)
 370  FORMAT(/19X,'---- SUMMARY OF EOM-CCSD CALCULATIONS ----',/
     *        12X,'SPIN',4X,'EXCITATION',5X,'EXCITATION',5X,'TOTAL',/
     *        4X,'SYMM',4X,'MULT',4X,'ENERGY (H)',5X,'ENERGY (EV)',
     *        4X,'ENERGY (H)',5X,'ITERATIONS')
 380  FORMAT(4X,A4,4X,I2,1X,F15.8,5X,F8.3,2X,F15.8,5X,'CONVERGED')
 390  FORMAT(4X,A4,4X,A2,1X,F15.8,5X,F8.3,2X,F15.8,5X,'CONVERGED')
 400  FORMAT(4X,A4,4X,A3,1X,F15.8,5X,F8.3,2X,F15.8,5X,'UNCONVERGED')
 320  FORMAT(1X,'THE LARGEST R1 AND R2 AMPLITUDES ARE')
      END
C
C*MODULE ROEOM   *DECK EOMSMLLMA
      SUBROUTINE EOMSMLLMA(NOA,NUA,NOB,NUB,ISPACE,ITER,HM,
     *                    HMAUX,VEC1,VEC2,NOUP,IREC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      DIMENSION HM(ISPACE,ISPACE),HMAUX(ISPACE,ISPACE)
      DIMENSION VEC1(1),VEC2(1)
C
      DO 1,I1=1,ISPACE
      DO 2,I2=1,ISPACE
       HM(I1,I2)=HMAUX(I1,I2)
 2    CONTINUE
 1    CONTINUE
      CALL ZEROMA(VEC1,1,NOUP)
      CALL ZEROMA(VEC2,1,NOUP)
C
C     --------- ITER-TH COLUMN OF HM (VEC2-HR(ITER)) -------------
      CALL RDTAB2(NOA,NUA,VEC2(1),(IREC+6),96)
      CALL RDTAB2(NOB,NUB,VEC2(1+NOAUA),(IREC+7),96)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(IREC+8),96)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+9),96)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+10),96)
      DO 3,J=1,ITER-1
       JREC=10*(J-1)
       CALL RDTAB2(NOA,NUA,VEC1(1),(JREC+1),96)
       CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(JREC+2),96)
       CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(JREC+3),96)
       CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (JREC+4),96)
       CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JREC+5),96)
       YYY=DDOT(NOUP,VEC2(1),1,VEC1(1),1)
       HM(J,ITER)=YYY
 3    CONTINUE
C
C     --------- ITER-TH ROW OF HM (VEC1-R(ITER) -------------------
      CALL RDTAB2(NOA,NUA,VEC1(1),(IREC+1),96)
      CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(IREC+2),96)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(IREC+3),96)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+4),96)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+5),96)
      DO 4,J=1,ITER-1
       JREC=10*(J-1)
       CALL RDTAB2(NOA,NUA,VEC2(1),(JREC+6),96)
       CALL RDTAB2(NOB,NUB,VEC2(1+NOAUA),(JREC+7),96)
       CALL RDTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(JREC+8),96)
       CALL RDTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (JREC+9),96)
       CALL RDTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JREC+10),96)
       YYY=DDOT(NOUP,VEC2(1),1,VEC1(1),1)
       HM(ITER,J)=YYY
 4    CONTINUE
C
C     ---------- (ITER,ITER)-DIAGONAL PART OF HM --------------------
      CALL RDTAB2(NOA,NUA,VEC1(1),(IREC+1),96)
      CALL RDTAB2(NOB,NUB,VEC1(1+NOAUA),(IREC+2),96)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC1(1+NOAUA+NOBUB),(IREC+3),96)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+4),96)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC1(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+5),96)
      CALL RDTAB2(NOA,NUA,VEC2(1),(IREC+6),96)
      CALL RDTAB2(NOB,NUB,VEC2(1+NOAUA),(IREC+7),96)
      CALL RDTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(IREC+8),96)
      CALL RDTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (IREC+9),96)
      CALL RDTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (IREC+10),96)
      YYY=DDOT(NOUP,VEC2(1),1,VEC1(1),1)
      HM(ITER,ITER)=YYY
C
      DO 11,I1=1,ISPACE
      DO 12,I2=1,ISPACE
       HMAUX(I1,I2)=HM(I1,I2)
 12   CONTINUE
 11   CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMSELVEC
      SUBROUTINE EOMSELVEC(ISPACE,ITER,HM,WR,WI,VR,WORK,XENE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      DIMENSION HM(ISPACE,ISPACE),VR(ISPACE,ISPACE)
      DIMENSION WR(ISPACE),WI(ISPACE),WORK(4*ISPACE)
      CHARACTER*1 JOBVL,JOBVR
      DATA BIGN/10000.0D+00/
C
      LWORK=4*ISPACE
      JOBVL='N'
      JOBVR='V'
      DO 10,I=ITER+1,ISPACE
       HM(I,I)=BIGN+DBLE(I)
 10   CONTINUE
C
      CALL DGEEV(JOBVL,JOBVR,ISPACE,HM,ISPACE,WR,WI,VL,ISPACE,
     *           VR,ISPACE,WORK,LWORK,INFO)
      IF(INFO.NE.0) THEN
       WRITE(IW,*) 'ERROR IN SOLVING SMALL EIGENVALUE PROBLEM:',INFO
       CALL FLSHBF(IW)
       CALL ABRT
       STOP
      END IF
C
      XTOL=1.0D-7
      JMAX=0
      XOVER=0.0D+00
      DO 1,I=1,ISPACE
       XXX=ABS(VR(1,I))
       YYY=ABS(WI(I))
       ZZZ=ABS(WR(I))
       IF((XXX.GT.XOVER).AND.(YYY.LT.XTOL).AND.(ZZZ.LT.BIGN)) THEN
        XOVER=XXX
        JMAX=I
       END IF
 1    CONTINUE
      XENE=WR(JMAX)
      DO 2,I=1,ISPACE
       WI(I)=VR(I,JMAX)
 2    CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMCOMB
      SUBROUTINE EOMCOMB(NOA,NUA,NOB,NUB,ISPACE,ITER,WI,VEC1,VEC2,
     *                  ISN,NOUP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      DIMENSION WI(ISPACE),VEC1(1),VEC2(1)
      CALL ZEROMA(VEC1,1,NOUP)
      CALL ZEROMA(VEC2,1,NOUP)
      DO 1,I=1,ITER
       XCOMB=WI(I)
       IF(ISN.EQ.1) THEN
        JREC=10*(I-1)
        CALL RDTAB2(NOA,NUA,VEC2(1),(JREC+1),96)
        CALL RDTAB2(NOB,NUB,VEC2(1+NOAUA),(JREC+2),96)
        CALL RDTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(JREC+3),96)
        CALL RDTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (JREC+4),96)
        CALL RDTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JREC+5),96)
       ELSE
        JREC=10*(I-1)
        CALL RDTAB2(NOA,NUA,VEC2(1),(JREC+6),96)
        CALL RDTAB2(NOB,NUB,VEC2(1+NOAUA),(JREC+7),96)
        CALL RDTAB(NOA,NUA,NUA,NOA,VEC2(1+NOAUA+NOBUB),(JREC+8),96)
        CALL RDTAB(NOB,NUB,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2),
     *            (JREC+9),96)
        CALL RDTAB(NOA,NUA,NUB,NOB,VEC2(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JREC+10),96)
       END IF
       CALL DAXPY(NOUP,XCOMB,VEC2(1),1,VEC1(1),1)
 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMDEN
      SUBROUTINE EOMDEN(NOA,NUA,NOB,NUB,XENE,DHHA,DHHB,DPPA,DPPB,
     *                 R1A,R1B,R2AA,R2BB,R2AB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION DHHA(NOA,NOA),DHHB(NOB,NOB)
      DIMENSION DPPA(NUA,NUA),DPPB(NUB,NUB)
      DIMENSION R1A(NOA,NUA),R1B(NOB,NUB),R2AA(NOA,NUA,NUA,NOA)
      DIMENSION R2BB(NOB,NUB,NUB,NOB),R2AB(NOA,NUA,NUB,NOB)
C
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
       XDEN=XENE+DHHA(I,I)-DPPA(IA,IA)
       R1A(I,IA)=R1A(I,IA)/XDEN
 2    CONTINUE
 1    CONTINUE
C
      DO 3,J=1,NOB
      DO 4,IB=1,NUB
       XDEN=XENE+DHHB(J,J)-DPPB(IB,IB)
       R1B(J,IB)=R1B(J,IB)/XDEN
 4    CONTINUE
 3    CONTINUE
C
      DO 5,I=1,NOA
      DO 6,IA=1,NUA
      DO 7,J=1,NOA
      DO 8,IB=1,NUA
       XDEN=XENE+DHHA(I,I)+DHHA(J,J)-DPPA(IA,IA)-DPPA(IB,IB)
       R2AA(I,IA,IB,J)=R2AA(I,IA,IB,J)/XDEN
 8    CONTINUE
 7    CONTINUE
 6    CONTINUE
 5    CONTINUE
C
      DO 9,I=1,NOB
      DO 10,IA=1,NUB
      DO 11,J=1,NOB
      DO 12,IB=1,NUB
       XDEN=XENE+DHHB(I,I)+DHHB(J,J)-DPPB(IA,IA)-DPPB(IB,IB)
       R2BB(I,IA,IB,J)=R2BB(I,IA,IB,J)/XDEN
 12   CONTINUE
 11   CONTINUE
 10   CONTINUE
 9    CONTINUE
C
      DO 13,I=1,NOA
      DO 14,IA=1,NUA
      DO 15,J=1,NOB
      DO 16,IB=1,NUB
       XDEN=XENE+DHHA(I,I)+DHHB(J,J)-DPPA(IA,IA)-DPPB(IB,IB)
       R2AB(I,IA,IB,J)=R2AB(I,IA,IB,J)/XDEN
 16   CONTINUE
 15   CONTINUE
 14   CONTINUE
 13   CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMORTH
      SUBROUTINE EOMORTH(NOA,NUA,NOB,NUB,NOUP,ITER,VEC,AUX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      DIMENSION VEC(1),AUX(1)
C
      CALL DCOPY(NOUP,VEC,1,AUX,1)
      XNORM=DDOT(NOUP,VEC,1,AUX,1)
      XNORM=(1.0D+00)/(SQRT(XNORM))
      CALL DSCAL(NOUP,XNORM,VEC,1)
      DO 1,I=1,ITER
       JREC=10*(I-1)
       CALL RDTAB2(NOA,NUA,AUX(1),(JREC+1),96)
       CALL RDTAB2(NOB,NUB,AUX(1+NOAUA),(JREC+2),96)
       CALL RDTAB(NOA,NUA,NUA,NOA,AUX(1+NOAUA+NOBUB),(JREC+3),96)
       CALL RDTAB(NOB,NUB,NUB,NOB,AUX(1+NOAUA+NOBUB+NOA2UA2),
     *            (JREC+4),96)
       CALL RDTAB(NOA,NUA,NUB,NOB,AUX(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *            (JREC+5),96)
       YYY=-DDOT(NOUP,VEC,1,AUX,1)
       CALL DAXPY(NOUP,YYY,AUX,1,VEC,1)
 1    CONTINUE
C
      CALL ZEROMA(AUX,1,NOUP)
      CALL DCOPY(NOUP,VEC,1,AUX,1)
      XNORM=DDOT(NOUP,VEC,1,AUX,1)
      XNORM=(1.0D+00)/(SQRT(XNORM))
      CALL DSCAL(NOUP,XNORM,VEC,1)
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMNORM
      SUBROUTINE EOMNORM(NOA,NUA,NOB,NUB,R1A,R1B,R2AA,R2BB,R2AB,R0)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      DIMENSION R1A(NOA,NUA),R1B(NOB,NUB),R2AA(NOA,NUA,NUA,NOA)
      DIMENSION R2BB(NOB,NUB,NUB,NOB),R2AB(NOA,NUA,NUB,NOB)
      DATA ONE/1.0D+00/
C
      XNORM=0.00D+00
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
       YYY=R1A(I,IA)
       XNORM=XNORM+YYY*YYY
 2    CONTINUE
 1    CONTINUE
C
      DO 3,J=1,NOB
      DO 4,IB=1,NUB
       YYY=R1B(J,IB)
       XNORM=XNORM+YYY*YYY
 4    CONTINUE
 3    CONTINUE
C
      DO 5,I=1,NOA
      DO 6,IA=1,NUA
      DO 7,J=I+1,NOA
      DO 8,IB=IA+1,NUA
       YYY=R2AA(I,IA,IB,J)
       XNORM=XNORM+YYY*YYY
 8    CONTINUE
 7    CONTINUE
 6    CONTINUE
 5    CONTINUE
C
      DO 9,I=1,NOB
      DO 10,IA=1,NUB
      DO 11,J=I+1,NOB
      DO 12,IB=IA+1,NUB
       YYY=R2BB(I,IA,IB,J)
       XNORM=XNORM+YYY*YYY
 12   CONTINUE
 11   CONTINUE
 10   CONTINUE
 9    CONTINUE
C
      DO 13,I=1,NOA
      DO 14,IA=1,NUA
      DO 15,J=1,NOB
      DO 16,IB=1,NUB
       YYY=R2AB(I,IA,IB,J)
       XNORM=XNORM+YYY*YYY
 16   CONTINUE
 15   CONTINUE
 14   CONTINUE
 13   CONTINUE
C
      XNORM=XNORM+R0*R0
      XNORM=ONE/SQRT(XNORM)
      CALL DSCAL(NOAUA,XNORM,R1A,1)
      CALL DSCAL(NOBUB,XNORM,R1B,1)
      CALL DSCAL(NOA2UA2,XNORM,R2AA,1)
      CALL DSCAL(NOB2UB2,XNORM,R2BB,1)
      CALL DSCAL(NO2U2AB,XNORM,R2AB,1)
C
      R0=R0*XNORM
      RETURN
      END
C
C*MODULE ROEOM   *DECK OPEOMSYM
      SUBROUTINE OPEOMSYM(NOA,NUA,NOB,NUB,R1A,R1B,R2AA,R2BB,R2AB,
     *                  SYM,NSYM,IGRSYM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 SYM,REP
      PARAMETER (MXAO=8192)
      COMMON /EOMSYM/ IG,NRE(4),MC(8,8,4),ISORB(MXAO),REP(8)
C
      DIMENSION IVEC1(8),IVEC2(8)
      DIMENSION R1A(NOA,NUA),R1B(NOB,NUB),R2AA(NOA,NUA,NUA,NOA)
      DIMENSION R2BB(NOB,NUB,NUB,NOB),R2AB(NOA,NUA,NUB,NOB)
C
C
      TOL=0.10D+00
      DO 100,I=1,8
       IVEC1(I)=0
       IVEC2(I)=0
 100  CONTINUE
      IFIND=0
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
       YYY=ABS(R1A(I,IA))
       IF(YYY.GT.TOL) THEN
        DO 3,K=1,NRE(IG)
         IVEC1(K)=MC(K,ISORB(I),IG)*MC(K,ISORB(NOA+IA),IG)*
     *                              MC(K,IGRSYM,IG)
 3      CONTINUE
        DO 4,JSYM=1,NRE(IG)
        DO 5,III=1,NRE(IG)
         IVEC2(III)=MC(III,JSYM,IG)
 5      CONTINUE
        IDIFF=0
        DO 6,III=1,8
         IDIFF=IDIFF+ABS(IVEC1(III)-IVEC2(III))
 6      CONTINUE
        IF(IDIFF.EQ.0) THEN
         IFIND=1
         SYM=REP(JSYM)
         NSYM=JSYM
         RETURN
        END IF
 4      CONTINUE
       END IF
 2     CONTINUE
 1     CONTINUE
       IF(IFIND.NE.0) GO TO 111
      DO 101,J=1,NOB
      DO 102,IB=1,NUB
       YYY=ABS(R1B(J,IB))
       IF(YYY.GT.TOL) THEN
       IFIND=0
        DO 103,K=1,NRE(IG)
         IVEC1(K)=MC(K,ISORB(J),IG)*MC(K,ISORB(NOB+IB),IG)*
     *                              MC(K,IGRSYM,IG)
 103      CONTINUE
        DO 104,JSYM=1,NRE(IG)
        DO 105,III=1,NRE(IG)
         IVEC2(III)=MC(III,JSYM,IG)
 105      CONTINUE
        IDIFF=0
        DO 106,III=1,8
         IDIFF=IDIFF+ABS(IVEC1(III)-IVEC2(III))
 106      CONTINUE
        IF(IDIFF.EQ.0) THEN
         IFIND=1
         SYM=REP(JSYM)
         NSYM=JSYM
         RETURN
        END IF
 104      CONTINUE
       END IF
 102     CONTINUE
 101     CONTINUE
       IF(IFIND.NE.0) GO TO 111
       DO 10,I=1,NOA
       DO 11,IA=1,NUA
       DO 12,J=1,NOA
       DO 13,IB=1,NUA
        YYY=ABS(R2AA(I,IA,IB,J))
        IF(YYY.GT.TOL) THEN
         DO 14,K=1,NRE(IG)
         IVEC1(K)=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOA),IG)*
     &            MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOA),IG)*
     &            MC(K,IGRSYM,IG)
 14      CONTINUE
         DO 15,JSYM=1,NRE(IG)
         DO 16,III=1,NRE(IG)
          IVEC2(III)=MC(III,JSYM,IG)
 16      CONTINUE
         IDIFF=0
         DO 17,III=1,8
          IDIFF=IDIFF+ABS(IVEC1(III)-IVEC2(III))
 17      CONTINUE
         IF(IDIFF.EQ.0) THEN
          IFIND=1
          SYM=REP(JSYM)
          NSYM=JSYM
          RETURN
         END IF
 15      CONTINUE
        END IF
 13    CONTINUE
 12    CONTINUE
 11    CONTINUE
 10    CONTINUE
        IF(IFIND.NE.0) GO TO 111
       DO 20,I=1,NOB
       DO 21,IA=1,NUB
       DO 22,J=1,NOB
       DO 23,IB=1,NUB
        YYY=ABS(R2BB(I,IA,IB,J))
        IF(YYY.GT.TOL) THEN
         DO 24,K=1,NRE(IG)
         IVEC1(K)=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOB),IG)*
     &            MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOB),IG)*
     &            MC(K,IGRSYM,IG)
 24      CONTINUE
         DO 25,JSYM=1,NRE(IG)
         DO 26,III=1,NRE(IG)
          IVEC2(III)=MC(III,JSYM,IG)
 26      CONTINUE
         IDIFF=0
         DO 27,III=1,8
          IDIFF=IDIFF+ABS(IVEC1(III)-IVEC2(III))
 27      CONTINUE
         IF(IDIFF.EQ.0) THEN
          IFIND=1
          SYM=REP(JSYM)
          NSYM=JSYM
          RETURN
         END IF
 25      CONTINUE
        END IF
 23    CONTINUE
 22    CONTINUE
 21    CONTINUE
 20    CONTINUE
        IF(IFIND.NE.0) GO TO 111
       DO 30,I=1,NOA
       DO 31,IA=1,NUA
       DO 32,J=1,NOB
       DO 33,IB=1,NUB
        YYY=ABS(R2AB(I,IA,IB,J))
        IF(YYY.GT.TOL) THEN
         DO 34,K=1,NRE(IG)
         IVEC1(K)=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOA),IG)*
     &            MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOB),IG)*
     &            MC(K,IGRSYM,IG)
 34      CONTINUE
         DO 35,JSYM=1,NRE(IG)
         DO 36,III=1,NRE(IG)
          IVEC2(III)=MC(III,JSYM,IG)
 36      CONTINUE
         IDIFF=0
         DO 37,III=1,8
          IDIFF=IDIFF+ABS(IVEC1(III)-IVEC2(III))
 37      CONTINUE
         IF(IDIFF.EQ.0) THEN
          IFIND=1
          SYM=REP(JSYM)
          NSYM=JSYM
          RETURN
         END IF
 35      CONTINUE
        END IF
 33    CONTINUE
 32    CONTINUE
 31    CONTINUE
 30    CONTINUE
C
C
 111    CONTINUE
        RETURN
        END
C
C*MODULE ROEOM   *DECK OPEOMINIT
      SUBROUTINE OPEOMINIT(NOA,NUA,NOB,NUB,FHH,FPP,
     *                  FHP,VHHHP,VHPPP,VHHHH,VHPHP,
     *                  VPPP,INDEX1,INDEX2,
     *                  INDEXAA,INDEXBB,INDEXAB,HM,WR,
     *                  WI,VR,WORK,TRANS,LABMO,ISPIN,
     *                  L1,IDIM,NROOT,GUESS)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C        THIS GROUP IS ORBITAL SYMMETRY ASSIGNMENT
C
      CHARACTER*3 VECREP
      LOGICAL ABELPT
      DIMENSION LABMO(L1)
      CHARACTER*3 GR,REP
      CHARACTER*4 LBTEMP
      DIMENSION NREX(4),MCX(8,8,4)
      DIMENSION LABREP(8)
C
      CHARACTER*1 JOBVR,JOBVL
C
      DIMENSION FHH(1),FPP(1),FHP(1)
      DIMENSION VHHHP(1),VHPPP(1),VHHHH(1),VHPHP(1)
      DIMENSION VPPP(1),INDEX1(1),INDEX2(1)
      DIMENSION INDEXAA(1),INDEXBB(1),INDEXAB(1)
      DIMENSION HM(IDIM,IDIM),WR(IDIM),WI(IDIM)
      DIMENSION WORK(4*IDIM),VR(IDIM,IDIM),TRANS(1)
      DIMENSION INDEXX(100),ISPIN(IDIM),JSTATE(9)
C
      PARAMETER (MXAO=8192)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /EOMSYM/ IG,NRE(4),MC(8,8,4),ISORB(MXAO),REP(8)
      COMMON /EOMWFE/ EOMSDE(100),EOMR0(100),EOMR0L(100),
     *                CR1D1A(100),CR2D1A(100),CR1D1B(100),CR2D1B(100),
     *                CRCI3(100),XDELWB(100),XKKEOM(100),
     *                CR1A(100),CR1B(100),CR1C(100),CR1D(100),CR2A(100),
     *                CR2B(100),CR2C(100),CR2D(100),CREX3(100),
     *                KVGEOM(100),IUST(100),IREL(100),
     *                KKTRIM(100),KKTRIML(100),
     *                INUMEOM,NTOTEOM,NBADEOM,NTOTCISD,NCVGCISD,LAMCON,
     *                IVSYMAD(8),VECREP(100)
      COMMON /CCPAR / AMPTSH,METHCC,NCCTOT,NCCOCC,NCCFZC,NCCFZV,
     *                MXCCIT,MXRLEIT,NWRDCC,ICCCNV,ICCRST,IDSKCC
      COMMON /OPEOM / MACT,MULTEOM,MREST,ISELCT(100)
C
C DATA BLOCK FOR MATRICES NRE AND MC
C
      DATA NREX/1,2,4,8/
      DATA MCX/
     &1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     &0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     &
     & 1,1,0,0,0,0,0,0, 1,-1,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
     & 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
     & 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
     &
     & 1,1,1,1,0,0,0,0,      1,1,-1,-1,0,0,0,0, 1,-1,1,-1,0,0,0,0,
     & 1,-1,-1,1,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
     & 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
     &
     & 1,1,1,1,1,1,1,1,      1,1,1,1,-1,-1,-1,-1,  1,1,-1,-1,1,1,-1,-1,
     & 1,1,-1,-1,-1,-1,1,1,  1,-1,1,-1,1,-1,1,-1,  1,-1,1,-1,-1,1,-1,1,
     & 1,-1,-1,1,1,-1,-1,1,  1,-1,-1,1,-1,1,1,-1/
C
      DO K=1,4
         DO J=1,8
            DO I=1,8
               MC(I,J,K) = MCX(I,J,K)
            ENDDO
         ENDDO
         NRE(K) = NREX(K)
      ENDDO
C
      WRITE(UNIT=GR,FMT='(A3)') GRPEOM
      IF(.NOT.ABELPT()) GR='C1 '
C
      WRITE(IW,9010) GR
      CALL REPFIX(IW,GR,REP,IG)
C
      NIRREP = NRE(IG)
      DO I=1,NIRREP
         LBTEMP(1:3) = REP(I)
         LBTEMP(4:4) = ' '
         READ(UNIT=LBTEMP,FMT='(A4)') LABREP(I)
      ENDDO
C
C        4 BYTE MO SYMMETRY LABELS ARE AVAILABLE ON DISK FROM THE SCF
C        USE THESE TO FILL -ISORB- WITH CORRECT INTEGER VALUES
C
      IF(GR.EQ.'C1 ') THEN
         DO I=1,NOA+NUA
            ISORB(I) = 1
         ENDDO
      ELSE
         CALL DAREAD(IDAF,IODA,LABMO,L1,255,1)
         NERR=0
         DO I=1,NOA+NUA
            LTEMP = LABMO(I+NCCFZC)
            MATCH=0
            DO J=1,NIRREP
               IF(LTEMP.EQ.LABREP(J)) MATCH=J
            ENDDO
            ISORB(I) = MATCH
            IF(MATCH.EQ.0) THEN
               WRITE(IW,9020) I+NCCFZC,LTEMP
               NERR=NERR+1
            END IF
         ENDDO
         IF(NERR.GT.0) THEN
            WRITE(IW,9030) NERR
            CALL ABRT
            STOP
         END IF
      END IF
C
C        COPY USER CHOICES FOR STATES/IRREP AND ACTIVE ORBITALS
C
      IGO=1
      DO I=1,NRE(IG)
       DO J=1,NSTEOM(I)
        VECREP(IGO)=REP(I)
        IGO=IGO+1
       ENDDO
      ENDDO
      NROOT=0
      DO I=1,NRE(IG)
       NROOT=NROOT+NSTEOM(I)
       IF(NSTEOM(I).GT.100) THEN
        WRITE(IW,9035)
        CALL ABRT
       END IF
      ENDDO
      CALL FIXGRSYM(NOA,NOB,IGRSYM)
      WRITE(IW,9040) REP(IGRSYM)
      CALL FLSHBF(IW)
      IPREV=0
      IPREVB=0
C
      CALL VICLR(JSTATE,1,9)
C
      IF(MREST.EQ.1) THEN
       WRITE(IW,9004)
       READ(NFT825,REC=6)JSTATE
       IF(JSTATE(1).NE.MULTEOM) THEN
        WRITE(IW,9000)JSTATE(1)
        CALL ABRT
        STOP
       END IF
      END IF
C
      DO 1004,I=1,NRE(IG)
      IF(NSTEOM(I).EQ.0) GO TO 1004
      IROOT=NSTEOM(I)
      JROOT=JSTATE(I+1)
      CALL EOMINDEX(NOA,NUA,NOB,NUB,INDEX1,INDEX2,
     *             INDEXAA,INDEXBB,INDEXAB,IPOS,
     *             IGRSYM,I,ILC1,ILC2,MXUA,MXUB)
C
      JOBVR='V'
      JOBVL='N'
      LWORK=4*IDIM
      WRITE(IW,9050) GUESS,IPOS-1
      CALL FLSHBF(IW)
      IF(IROOT.GT.IPOS-1) THEN
       IF(MTHINIT.EQ.2.AND.MACT.EQ.0) THEN
        WRITE(IW,9060)
       ELSE
        WRITE(IW,9065)
       END IF
       CALL FLSHBF(IW)
       CALL ABRT
       STOP
      END IF
C
C   FILL THE CIS OR EOMCCSD HAMILTONIAN MATRIX
C
      IF(MTHINIT.EQ.2) THEN
       IDIM2=IDIM*IDIM
       CALL ZEROMA(HM,1,IDIM2)
       CALL RCCFL(NFT843,5,NOAUA,FHP)
       CALL RCCFL(NFT843,7,NOA2,FHH)
       CALL RCCFL(NFT843,9,NUA2,FPP)
       CALL RDINT(1,NOAUA,NOAUA,VHPHP,NFT831)
       CALL EOMSFILL1(NOA,NUA,HM,FHH,FPP,FHP,VHPHP,INDEX1,IDIM)
       CALL RCCFL(NFT843,6,NOBUB,FHP)
       CALL RCCFL(NFT843,8,NOB2,FHH)
       CALL RCCFL(NFT843,10,NUB2,FPP)
       CALL RDINT(1,NOBUB,NOBUB,VHPHP,NFT832)
       CALL EOMSFILL1(NOB,NUB,HM,FHH,FPP,FHP,VHPHP,INDEX2,IDIM)
       CALL RDINT(1,NOBUB,NOAUA,VHPHP,NFT833)
       CALL EOMSFILL2(NOA,NUA,NOB,NUB,HM,VHPHP,INDEX1,INDEX2,IDIM)
      ELSE
C
       CALL EOMDFILL1(NOA,NUA,NOB,NUB,FPP,FHP,FHH,
     *                VHHHP,VHPPP,VHHHH,VHPHP,VPPP,HM,
     *                INDEX1,INDEXAA,INDEXAB,IDIM,MXUA)
       CALL EOMDFILL2(NOA,NUA,NOB,NUB,FHH,FPP,FHP,VHPHP,VHHHP,
     *                VHPPP,VHHHH,HM,INDEX2,INDEXBB,INDEXAB,IDIM)
       CALL EOMDFILL3(NOA,NUA,NOB,NUB,FHP,VHPHP,VHHHP,VHPPP,
     *                VPPP,HM,INDEX1,INDEX2,INDEXAA,INDEXBB,
     *                INDEXAB,IDIM,MXUB)
       CALL EOMDFILL4(NOA,NUA,NOB,NUB,VHPPP,VHHHH,VPPP,VHPHP,
     *                HM,INDEX1,INDEXAA,INDEXAB,IDIM,MXUB)
       CALL EOMDFILL5(NOA,NUA,NOB,NUB,FHP,VHHHP,VHPPP,HM,
     *                INDEX2,INDEXAB,IDIM)
       CALL EOMDFILL6(NOA,NUA,NOB,NUB,VHPHP,VHPPP,VHHHP,HM,
     *                INDEX1,INDEX2,INDEXAA,INDEXBB,INDEXAB,IDIM)
       CALL EOMDFILL7(NOA,NUA,NOB,NUB,VHPHP,HM,INDEXAB,IDIM)
       CALL EOMDFILL8(NOB,NUB,VHPPP,HM,INDEX2,INDEXBB,IDIM)
      END IF
C
C   DIAGONALIZE HAMILTONIAN MATRIX
C
      IF(MTHINIT.EQ.2) THEN
       NORDER=1+ILC1+ILC2
      ELSE
       NORDER=ILC1+ILC2
      END IF
C       PRINT *,'ILC1,ILC2,NORDER,IDIM,IROOT =',
C     *          ILC1,ILC2,NORDER,IDIM,IROOT
C
      IF(MTHINIT.EQ.2) THEN
       DO IA=1,NORDER
       HM(1,IA)=0.00D+00
       HM(IA,1)=0.00D+00
       ENDDO
      END IF
C
      CALL DGEEV(JOBVL,JOBVR,NORDER,HM,IDIM,WR,WI,VL,IDIM,VR,
     *           IDIM,WORK,LWORK,INFO)
      DO J=1,NORDER
C       PRINT *,'WR(I),I=',J,WR(J)
      END DO
C
      IF(INFO.NE.0) THEN
       WRITE(IW,*) 'INITIAL DIAGONALIZATION ERROR INFO:',INFO
       CALL FLSHBF(IW)
       CALL ABRT
       STOP
      END IF
C
      IF(NOA.EQ.NOB) THEN
       CALL EOMSPNINT(NOA,NUA,NOB,NUB,IDIM,NORDER,INDEX1,INDEX2,
     *                INDEXAA,INDEXAB,VR,ISPIN)
      END IF
C
      CALL EOMORDER(NOA,NOB,NORDER,IROOT,
     *              WR,WI,ISPIN,INDEXX,INFO1,IREAL)
C
      IF(INFO1.EQ.0) THEN
       WRITE(IW,9070) IROOT,REP(I)
       WRITE(IW,9080)
       WRITE(IW,9090) REP(I)
        IF(NOA.EQ.NOB) THEN
        DO IPRNT=1,IROOT
         IF(ISPIN(INDEXX(IPRNT)).NE.0) THEN
         WRITE(IW,9100) WR(INDEXX(IPRNT)),ISPIN(INDEXX(IPRNT))
C          WRITE(IW,9100) WR(IPRNT),ISPIN(IPRNT)
         ELSE
          WRITE(IW,9101) WR(INDEXX(IPRNT)),CHAR(63)
C          WRITE(IW,9101) WR(IPRNT),CHAR(63)
         END IF
        ENDDO
        ELSE
        DO IPRNT=1,IROOT
         WRITE(IW,9105) WR(INDEXX(IPRNT))
        ENDDO
        END IF
      ELSE IF(INFO1.NE.0.AND.NOA.EQ.NOB.AND.MULTEOM.NE.-1) THEN
       WRITE(IW,9110) IREAL,REP(I),MULTEOM
       CALL ABRT
       STOP
      ELSE
       WRITE(IW,9120) IREAL,REP(I)
       CALL ABRT
       STOP
      END IF
C
       CALL EOMSTRINT(NOA,NUA,NOB,NUB,IDIM,INDEX1,INDEX2,
     *                    INDEXAA,INDEXBB,INDEXAB,VR,TRANS,
     *                    IROOT,JROOT,INDEXX,IPREV,IPREVB)
       IPREV=IPREV+IROOT
       IPREVB=IPREVB+JROOT
C
 1004 CONTINUE
      RETURN
C
 9000 FORMAT(1X,'ERROR IN RESTARTING THE CALCULATION!',/
     *       1X,'THE VALUE OF MULT MUST BE THE SAME AS IN THE',
     *       1X,'PREVIOUS CALCULATION!'/
     *       1X,'SET MULT=',I3,' AND TRY AGAIN')
 9004 FORMAT(/1X,'AFTER PERFORMING INITIAL START CALCULATIONS',/
     *       1X,'PROGRAM WILL RESTART USING DATA FROM A PREVIOUS RUN'/)
 9010 FORMAT(/1X,'THE EOMCC POINT GROUP IS ',A3)
 9020 FORMAT(1X,'ORBITAL',I5,' HAS UNKNOWN SYMMETRY LABEL ',A4)
 9030 FORMAT(1X,'UNABLE TO ASSIGN SYMMETRY TO',I5,' ORBITAL(S).'/
     *       1X,'PLEASE PROVIDE CRISPLY CONVERGED SCF ORBITALS!')
 9035 FORMAT(1X,'PLEASE CHOOSE LESS THEN 100 ROOTS'/
     *       1X,'OF A GIVEN SYMMETRY AND TRY AGAIN')
 9040 FORMAT(1X,'GROUND STATE SYMETRY IS ',A4)
 9050 FORMAT(1X,'SIZE OF',2X,A8,'PROBLEM:',I8)
 9060 FORMAT(1X,'TOO MANY ROOTS REQUESTED FOR MINIT=2!'/
     *       1X,'PLEASE REDUCE THE NUMBER OF ROOTS OR USE MINIT=1.')
 9065 FORMAT(1X,'TOO MANY ROOTS REQUESTED!'/
     *       1X,'PLEASE REDUCE THE NUMBER OF ROOTS',
     *       1X,'OR INCREASE THE NUMBER OF ACTIVE ORBITALS')
 9070 FORMAT(1X,I4,' INITIAL VECTORS OF ',A3,
     *       ' SYMMETRY HAVE BEEN FOUND.')
 9080 FORMAT(4X,'ORDERING OF THE INITIAL EIGENVALUES WAS SUCCESSFUL')
 9090 FORMAT(4X,'INITIAL EIGENVALUES OF ',A3,' SYMMETRY:')
 9100 FORMAT(5X,'E=',1X,F20.10,3X,'SPIN MULTIPLICITY=',1X,I1)
 9101 FORMAT(5X,'E=',1X,F20.10,3X,'SPIN MULTIPLICITY=',1X,A1)
 9105 FORMAT(5X,'E=',1X,F20.10)
 9110 FORMAT(1X,I3,1X,'INITIAL VECTORS OF',1X,A3,1X,
     *       'SYMMETRY AND',/,1X,'SPIN MULTIPLICITY = ',I1,1X,
     *       'HAVE BEEN FOUND!')
 9120 FORMAT(1X,'ONLY',1X,I3,1X,'INITIAL VECTORS OF',1X,A3,1X,
     *       'SYMMETRY HAVE BEEN FOUND!')
      END
C
C*MODULE ROEOM   *DECK EOMSFILL1
      SUBROUTINE EOMSFILL1(NO,NU,HM,FHH,FPP,
     *                FHP,VHPHP,INDEX1,IDIM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION FHH(NO,NO),FPP(NU,NU),FHP(NO,NU)
      DIMENSION VHPHP(NU,NO,NU,NO),HM(IDIM,IDIM)
      DIMENSION INDEX1(NO,NU)
C
C
      DO 3,I=1,NO
      DO 4,IA=1,NU
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 4
       HM(IROW,1)=FHP(I,IA)
       HM(1,IROW)=FHP(I,IA)
        DO 5,IB=1,NU
        ICOL=INDEX1(I,IB)
        IF(ICOL.EQ.0) GO TO 5
        HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IB,IA)
 5     CONTINUE
       DO 6,J=1,NO
        ICOL=INDEX1(J,IA)
        IF(ICOL.EQ.0) GO TO 6
        HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,J)
 6     CONTINUE
       DO 7,J=1,NO
       DO 8,IB=1,NU
        ICOL=INDEX1(J,IB)
        IF(ICOL.EQ.0) GO TO 8
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IB,J)
 8     CONTINUE
 7     CONTINUE
 4    CONTINUE
 3    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMSFILL2
      SUBROUTINE EOMSFILL2(NOA,NUA,NOB,NUB,HM,VHPHP,
     *                INDEX1,INDEX2,IDIM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION VHPHP(NUA,NOA,NUB,NOB),HM(IDIM,IDIM)
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB)
C
      DO 23,I=1,NOA
      DO 24,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 24
       DO 25,J=1,NOB
       DO 26,IB=1,NUB
        ICOL=INDEX2(J,IB)
        IF(ICOL.EQ.0) GO TO 26
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IA,I,IB,J)
        HM(ICOL,IROW)=HM(ICOL,IROW)+VHPHP(IA,I,IB,J)
 26    CONTINUE
 25    CONTINUE
 24   CONTINUE
 23   CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK HREOMSD
      SUBROUTINE HREOMSD(NOA,NUA,NOB,NUB,R1A,R1B,HR1A,HR1B,R2AA,
     *            R2BB,R2AB,HR2AA,HR2BB,HR2AB,FPP,FHP,
     *            FHH,VHPPP,VHHHP,VHHHH,VHPHP,VPPP,
     *            T2,OPA,OPB,OHA,OHB,TI)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
C
      DIMENSION R1A(1),HR1A(1),R2AA(1),HR2AA(1),HR2AB(1)
      DIMENSION R1B(1),HR1B(1),R2BB(1),HR2BB(1)
      DIMENSION FPP(1),FHP(1),FHH(1),VHPPP(1),VHHHP(1)
      DIMENSION VHPHP(1),VHHHH(1),VPPP(1),T2(1)
      DIMENSION OPA(1),OPB(1),OHA(1),OHB(1),TI(1)
C
      DATA TWO/2.0D+00/,HALF/0.5D+00/
      DATA QUARTER/0.25D+00/
      DATA FOUR/4.00D+00/
C
      CALL ZEROMA(HR1A,1,NOU)
      CALL ZEROMA(HR1B,1,NOU)
      CALL ZEROMA(HR2AA,1,NO2U2)
      CALL ZEROMA(HR2BB,1,NO2U2)
      CALL ZEROMA(HR2AB,1,NO2U2)
C
C  HR1A 2, HR2AA 1, HR2AB 1
      CALL ZEROMA(FHH,1,NO2)
      CALL RDTAB2(NOA,NOA,FHH,3,NFT891)
      CALL CCMATMUL(FHH,R1A,HR1A,NOA,NUA,NOA,1,1)      !(I,M)*(M,IA)-->(I,IA)
      CALL CCMATMUL(FHH,R2AA,HR2AA,NOA,NOAUA2,NOA,1,1)  !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
      CALL CCMATMUL(FHH,R2AB,HR2AB,NOA,NOBUAB,NOA,1,1) !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
C
C  HR1B 1, HR2BB 1, HR2AB 2
      CALL ZEROMA(FHH,1,NO2)
      CALL RDTAB2(NOB,NOB,FHH,4,NFT891)
      CALL CCMATMUL(FHH,R1B,HR1B,NOB,NUB,NOB,1,1)      !(I,M)*(M,IA)-->(I,IA)
      CALL CCMATMUL(FHH,R2BB,HR2BB,NOB,NOBUB2,NOB,1,1)  !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
      CALL TRT1(NOB,NOB,TI,FHH)                        !FHHB:(J,N)-->(N,J)
      CALL CCMATMUL(R2AB,FHH,HR2AB,NOAUAB,NOB,NOB,0,1) !(I,IA,IB,N)*(N,J)-->(I,IA,IB,J)
C
C  HR1A 7
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOA,NOA,NUA,VHHHP,14,NFT891)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,13)            !VHHHP1:(M,N,I,IF)-->(I,N,M,IF)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,23)            !VHHHP1:(I,N,M,IF)-->(I,M,N,IF)
      CALL VECMUL(R2AA,NOA2UA2,HALF)                    !R2AA:(M,IA,IF,N)-->1/2(M,IA,IF,N)
      CALL TRANSQ(R2AA,NOAUA)                           !R2AA:1/2(M,IA,IF,N)-->1/2(IF,N,M,IA)
      CALL INSITU(NUA,NOA,NOA,NUA,TI,R2AA,13)           !R2AA:1/2(IF,N,M,IA)-->1/2(M,N,IF,IA)
      CALL CCMATMUL(VHHHP,R2AA,HR1A,NOA,NUA,NOA2UA,0,1)!1/2(I,M,N,IF)*(M,N,IF,IA)-->(I,IA)
C
C  HR1A 8
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NOA,NUA,NUA,NUA,VHPPP,11,NFT892)
      CALL TRANMD(R2AA,NOA,NOA,NUA,NUA,34)              !R2AA:1/2(I,N,IF,IE)-->1/2(I,N,IE,IF)
      CALL CCMATMUL(R2AA,VHPPP,HR1A,NOA,NUA,NOAUA2,0,0)!1/2(I,N,IE,IF)(N,IE,IF,IA)-->(I,IA)
      CALL TRANMD(R2AA,NOA,NOA,NUA,NUA,34)              !R2AA:1/2(I,N,IE,IF)-->(I,N,IF,IE)
      CALL INSITU(NOA,NOA,NUA,NUA,TI,R2AA,13)           !R2AA:1/2(M,N,IF,IA)-->1/2(IF,N,M,IA)
      CALL TRANSQ(R2AA,NOAUA)                           !R2AA:1/2(IF,N,M,IA)-->1/2(M,IA,IF,N)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,23)            !VHHHP1:(I,N,M,IF)-->(I,M,N,IF)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,13)            !VHHHP1:(M,N,I,IF)-->(I,N,M,IF)
C     OPA 1
      CALL CCMATMUL(R1A,VHPPP,OPA,1,NUA2,NOAUA,1,1)    !(N,IF)*(N,IF,IE,IA)-->(IE,IA)
C     OHA 1
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,13)            !VHHHP1:(N,M,I,IF)-->(I,M,N,IF)
      CALL CCMATMUL(VHHHP,R1A,OHA,NOA2,1,NOAUA,1,1)    !(I,M,N,IF))*(N,IF)-->(I,M)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,12)         !VHHHP1:(I,M,N,IF)-->(M,I,N,IF)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,23)         !VHHHP1:(M,I,N,IF)-->(M,N,I,IF)
C     OHA 2
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOAUA,NOAUA,VHPHP,NFT829)     !VHPRAA(NUA,NOA,NUA,NOA)
      CALL TRT1(NOA,NOA,TI,OHA)                         !OHA:(I,M)-->(M,I)
      CALL INSITU(NUA,NOA,NUA,NOA,TI,VHPHP,12)         !VHPPH1:(IE,M,IF,N)-->(M,IE,IF,N)
      CALL TRANSQ(VHPHP,NOAUA)                         !VHPPH1:(M,IE,IF,N)-->(IF,N,M,IE)
      CALL INSITU(NUA,NOA,NOA,NUA,TI,VHPHP,13)         !VHPPH1:(IF,N,M,IE)-->(M,N,IF,IE)
      CALL CCMATMUL(VHPHP,R2AA,OHA,NOA,NOA,NOAUA2,0,0) !1/2(M,N,IF,IE)*(N,IF,IE,I)-->(M,I)
      CALL INSITU(NOA,NOA,NUA,NUA,TI,VHPHP,13)         !VHPPH1:(M,N,IF,IE)-->(IF,N,M,IE)=()
C     OPA 2
      CALL VECMUL(R2AA,NOA2UA2,TWO)
      CALL INSITU(NOA,NUA,NUA,NOA,TI,R2AA,13)           !R2AA:(N,IF,IA,M)-->(IA,IF,N,M)
      CALL VECMUL(VHPHP,NOA2UA2,HALF)                  !VHPPH1:(IE,N,M,IF)-->1/2(IE,N,M,IF)
      CALL TRT1(NUA,NUA,TI,OPA)                         !OPA:(IE,IA)-->(IA,IE)
      CALL CCMATMUL(R2AA,VHPHP,OPA,NUA,NUA,NOA2UA,0,1) !(IA,IF,N,M)*(IF,N,M,IE)-->(IA,IE)
      CALL VECMUL(VHPHP,NOA2UA2,TWO)
      CALL INSITU(NUA,NUA,NOA,NOA,TI,R2AA,13)           !R2AA:(IA,IF,N,M)-->(N,IF,IA,M)
C  HR1A 10
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NUA,NUB,NUA,NOB,VHPPP,13,NFT892)
      CALL TRAN1TO4(NUA,NUB,NUA,NOB,TI,VHPPP)          !VHPPP2:(IA,IF,IE,N)-->(IF,IE,N,IA)
      CALL INSITU(NOA,NUA,NUB,NOB,TI,R2AB,23)           !R2AB:(I,IE,IF,N)-->(I,IF,IE,N)
      CALL CCMATMUL(R2AB,VHPPP,HR1A,NOA,NUA,NOBUAB,0,0)!(I,IF,IE,N)*(IF,IE,N,IA)-->(I,IA)
C     OPA 3
      CALL INSITU(NUB,NUA,NOB,NUA,TI,VHPPP,23)         !VHPPP2:(IF,IE,N,IA)-->(IF,N,IE,IA)
      CALL TRT1(NOB,NUB,TI,R1B)                         !R1B:(N,IF)-->(IF,N)
      CALL TRANSQ(OPA,NUA)                              !OPA:(IA,IE)-->(IE,IA)
      CALL CCMATMUL(R1B,VHPPP,OPA,1,NUA2,NOBUB,0,0)    !(IF,N)*(IF,N,IE,IA)-->(IE,IA)
      CALL TRANSQ(OPA,NUA)                              !OPA:(IE,IA)-->(IA,IE)
      CALL TRT1(NUB,NOB,TI,R1B)                         !R1B:(IF,N)-->(N,IF)
C  HR1B 8
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NOB,NUB,NUB,NUB,VHPPP,12,NFT892)
      CALL VECMUL(R2BB,NOB2UB2,HALF)                    !R2BB:(I,IE,IF,N)-->1/2(I,IE,IF,N)
      CALL TRANSQ(R2BB,NOBUB)                           !R2BB:1/2(I,IE,IF,N)-->1/2(IF,N,I,IE)
      CALL INSITU(NUB,NOB,NOB,NUB,TI,R2BB,13)           !R2BB:1/2(IF,N,I,IE)-->1/2(I,N,IF,IE)
      CALL TRANMD(R2BB,NOB,NOB,NUB,NUB,34)              !R2BB:1/2(I,N,IF,IE)-->1/2(I,N,IE,IF)
      CALL CCMATMUL(R2BB,VHPPP,HR1B,NOB,NUB,NOBUB2,0,0)!1/2(I,N,IE,IF)*(N,IE,IF,IA)-->(I,IA)
C  HR1B 9
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOB,NOB,NOB,NUB,VHHHP,15,NFT891)
      CALL TRANMD(VHHHP,NOB,NOB,NOB,NUB,13)            !VHHHP3:(M,N,I,IF)-->(I,N,M,IF)
      CALL TRANMD(R2BB,NOB,NOB,NUB,NUB,12)              !R2BB:1/2(M,N,IA,IF)-->1/2(N,M,IA,IF)
      CALL TRANMD(R2BB,NOB,NOB,NUB,NUB,34)              !R2BB:1/2(N,M,IA,IF)-->1/2(N,M,IF,IA)
      CALL CCMATMUL(VHHHP,R2BB,HR1B,NOB,NUB,NOB2UB,0,1)!1/2(I,N,M,IF)*(N,M,IF,IA)-->(I,IA)
      CALL TRAN24(NOB,NOB,NUB,NUB,TI,R2BB)              !1/2(N,M,IF,IA)-->1/2(N,IA,IF,M)
      CALL TRANMD(R2BB,NOB,NUB,NUB,NOB,23)              !1/2(N,IA,IF,M)-->1/2(N,IF,IA,M)
      CALL VECMUL(R2BB,NOB2UB2,TWO)
C     OHB 1
      CALL CCMATMUL(VHHHP,R1B,OHB,NOB2,1,NOBUB,1,1)    !(I,M,N,IF)*(N,IF)-->(I,M)
      CALL TRANMD(VHHHP,NOB,NOB,NOB,NUB,13)            !VHHHP1:(I,M,N,IF)-->(N,M,I,IF)
C     OHB 2
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOBUB,NOBUB,VHPHP,NFT830)     !VHPRBB(NUB,NOB,NUB,NOB)
      CALL INSITU(NUB,NOB,NUB,NOB,TI,VHPHP,12)         !VHPPH3:(IE,M,IF,N)-->(M,IE,IF,N)
      CALL TRANSQ(VHPHP,NOBUB)                         !VHPPH3:(M,IE,IF,N)-->(IF,N,M,IE)
      CALL INSITU(NUB,NOB,NOB,NUB,TI,VHPHP,13)         !VHPPH3:(IF,N,M,IE)-->(M,N,IF,IE)
      CALL VECMUL(VHPHP,NOB2UB2,HALF)                  !VHPPH3:(M,N,IF,IE)-->1/2(M,N,IF,IE)
      CALL TRT1(NOB,NOB,TI,OHB)                              !OHB:(I,M)-->(M,I)
      CALL CCMATMUL(VHPHP,R2BB,OHB,NOB,NOB,NOBUB2,0,0) !1/2(M,N,IF,IE)*(N,IF,IE,I)-->(M,I)
C     OPB 1
      CALL INSITU(NOB,NOB,NUB,NUB,TI,VHPHP,13)         !VHPPH3:(M,N,IF,IE)-->(IF,N,M,IE)
      CALL CCMATMUL(R1B,VHPPP,OPB,1,NUB2,NOBUB,1,1)    !(N,IF)*(N,IF,IE,IA)-->(IE,IA)
C     OPB 2
      CALL INSITU(NOB,NUB,NUB,NOB,TI,R2BB,13)           !R2BB:(N,IF,IA,M)-->(IA,IF,N,M)
      CALL TRANSQ(OPB,NUB)
      CALL CCMATMUL(R2BB,VHPHP,OPB,NUB,NUB,NOB2UB,0,1) !(IA,IF,N,M)*(IF,N,M,IE)-->(IA,IE)
      CALL TRANSQ(OPB,NUB)
      CALL VECMUL(VHPHP,NOB2UB2,TWO)
      CALL INSITU(NUB,NUB,NOB,NOB,TI,R2BB,13)           !R2BB:(IA,IF,N,M)-->(N,IF,IA,M)
C     OPB 3
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NOA,NUB,NUA,NUB,VHPPP,14,NFT892)
      CALL INSITU(NOA,NUB,NUA,NUB,TI,VHPPP,23)         !VHPPP4:(N,IE,IF,IA)-->(N,IF,IE,IA)
      CALL CCMATMUL(R1A,VHPPP,OPB,1,NUB2,NOAUA,0,0)    !(N,IF)*(N,IF,IE,IA)-->(IE,IA)
      CALL INSITU(NOA,NUA,NUB,NUB,TI,VHPPP,23)         !VHPPP4:(N,IE,IF,IA)-->(N,IF,IE,IA)
C     OHA 4
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOBUB,NOAUA,VHPHP,NFT833)     !VHPRAB(NUA,NOA,NUB,NOB)
      CALL TRAN24(NOA,NUB,NUA,NOB,TI,R2AB)              !R2AB:(I,IF,IE,N)-->(I,N,IE,IF)
      CALL INSITU(NUA,NOA,NUB,NOB,TI,VHPHP,12)         !VHPPH2:(IE,M,IF,N)-->(M,IE,IF,N)
      CALL TRAN14(NOA,NUA,NUB,NOB,TI,VHPHP)            !VHPPH2:(M,IE,IF,N)-->(N,IE,IF,M)
      CALL TRT1(NOA,NOA,TI,OHA)                         !OHA:(M,I)-->(I,M)
      CALL CCMATMUL(R2AB,VHPHP,OHA,NOA,NOA,NOBUAB,0,0) !(I,N,IE,IF)*(N,IE,IF,M)-->(I,M)
C     OPA 4
      CALL TRAN24(NOB,NUA,NUB,NOA,TI,VHPHP)            !VHPPH2:(N,IE,IF,M)-->(N,M,IF,IE)
      CALL INSITU(NOA,NOB,NUA,NUB,TI,R2AB,13)           !R2AB:(M,N,IA,IF)-->(IA,N,M,IF)
      CALL CCMATMUL(R2AB,VHPHP,OPA,NUA,NUA,NOABUB,0,1) !(IA,N,M,IF)*(N,M,IF,IE)-->(IA,IE) (DON'T FLIP OPA)
C     HR1B 7
      CALL TRT1(NOB,NUB,TI,HR1B)                        !HR1B:(I,IA)-->(IA,I)
      CALL TRANMD(VHPPP,NOA,NUB,NUA,NUB,24)            !VHPPP4(N,IE,IF,IA)-->(N,IA,IF,IE)
      CALL TRAN1TO4(NOA,NUB,NUA,NUB,TI,VHPPP)          !VHPPP4(N,IA,IF,IE)-->(IA,IF,IE,N)
      CALL TRAN24(NUA,NOB,NOA,NUB,TI,R2AB)              !R2AB:(IE,N,I,IF)-->(IE,IF,M,N)
      CALL CCMATMUL(VHPPP,R2AB,HR1B,NUB,NOB,NOAUAB,0,0)!(IA,IF,IE,N)*(IF,IE,N,I)-->(IA,I)
      CALL TRAN24(NUA,NUB,NOA,NOB,TI,R2AB)              !R2AB:(IA,IF,M,N)-->(IA,N,M,IF)
C     OHB 4
      CALL TRAN1TO4(NUA,NOB,NOA,NUB,TI,R2AB)           !R2AB:(IF,I,N,IE)-->(I,N,IE,IF)
      CALL TRAN1TO4(NOB,NOA,NUA,NUB,TI,VHPHP)         !VHPPH2:(M,N,IE,IF)-->(N,IE,IF,M)
      CALL TRT1(NOB,NOB,TI,OHB)                        !OHB:(M,I)-->(I,M)
      CALL CCMATMUL(R2AB,VHPHP,OHB,NOB,NOB,NOAUAB,0,0) !(I,N,IE,IF)*(N,IE,IF,M)-->(I,M)
C     OHA 3
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOB,NOA,NUB,VHHHP,16,NFT891)
      CALL INSITU(NOA,NOB,NOA,NUB,TI,VHHHP,23)         !VHHHP2:(M,N,I,IF)-->(M,I,N,IF)
      CALL TRANSQ(OHA,NOA)                              !OHA:(I,M)-->(M,I)
      CALL CCMATMUL(VHHHP,R1B,OHA,NOA2,1,NOBUB,0,0)    !(M,I,N,IF)*(N,IF)-->(M,I)
      CALL TRANSQ(OHA,NOA)                              !OHA:(M,I)-->(I,M)
      CALL INSITU(NOA,NOA,NOB,NUB,TI,VHHHP,23)         !VHHHP2:(M,I,N,IF)-->(M,N,I,IF)
C     HR1A 9                                                !R2AB:(IA,N,M,IF)=(IF,M,N,IA)
      CALL TRANMD(VHHHP,NOA,NOB,NOA,NUB,13)            !VHHHP2:(M,N,I,IF)-->(I,N,M,IF)
      CALL CCMATMUL(VHHHP,R2AB,HR1A,NOA,NUA,NOABUB,0,1)!(I,N,M,IF)*(N,M,IF,IA)-->(I,IA)
      CALL TRANMD(VHHHP,NOA,NOB,NOA,NUB,13)            !VHHHP2:(M,N,I,IF)-->(I,N,M,IF)
C     OPB 4
      CALL INSITU(NOB,NOA,NUB,NUA,TI,R2AB,13)           !R2AB:(M,N,IA,IF)-->(IA,N,M,IF)
      CALL TRAN24(NOA,NUB,NUA,NOB,TI,VHPHP)            !VHPPH2:(N,IE,IF,M)-->(N,M,IF,IE)
      CALL TRANSQ(OPB,NUB)
      CALL CCMATMUL(R2AB,VHPHP,OPB,NUB,NUB,NOABUA,0,1) !(IA,N,M,IF)*(N,M,IF,IE)-->(IA,IE)
C     HR1B 10                                           !R2AB:(IF,IE,N,I)=(IF,IA,N,M)
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOB,NUA,NOB,VHHHP,17,NFT891)
      CALL CCMATMUL(R2AB,VHHHP,HR1B,NUB,NOB,NOABUA,0,1)!(IA,N,M,IF)*(N,M,IF,I)-->(IA,I)
      CALL TRT1(NUB,NOB,TI,HR1B)                        !HR1B:(IA,I)-->(I,IA)
C     OHB 3                                !R2AB:(IA,N,M,IF)-->(IF,I,N,IE) VHPPH2:(N,M,IF,IE)-->(M,N,IE,IF)
      CALL TRANSQ(OHB,NOB)
      CALL INSITU(NOA,NOB,NUA,NOB,TI,VHHHP,23)        !VHHHP4:(N,M,IF,I)-->(N,IF,M,I)
      CALL CCMATMUL(R1A,VHHHP,OHB,1,NOB2,NOAUA,0,0)   !(N,IF)*(N,IF,M,I)-->(M,I)
      CALL INSITU(NOA,NUA,NOB,NOB,TI,VHHHP,23)        !VHHHP4:(N,IF,M,I)-->(N,M,IF,I)
      CALL TRANSQ(OHB,NOB)
      CALL TRANSQ(OPB,NUB)                              !OPB:(IA,IE)-->(IE,IA)
      CALL INSITU(NUB,NOA,NOB,NUA,TI,R2AB,23)           !R2AB:(IB,M,N,IA)-->(IB,N,M,IA)
      CALL INSITU(NUB,NOB,NOA,NUA,TI,R2AB,12)           !R2AB:(IB,N,M,IA)-->(N,IB,M,IA)
C     HR1B 4, HR1A 3
      CALL ZEROMA(FHP,1,NOU)
      CALL RDTAB2(NOA,NUA,FHP,5,NFT891)
      CALL CCMATMUL(R2AB,FHP,HR1B,NOBUB,1,NOAUA,0,0)   !(I,IA,M,IE)*(M,IE)-->(I,IA)
      CALL TRT1(NOA,NUA,TI,FHP)                        !FHPA:(M,IE)-->(IE,M)
      CALL CCMATMUL(R2AA,FHP,HR1A,NOAUA,1,NOAUA,0,0)   !(I,IA,IE,M)*(IE,M)-->(I,IA)
C     HR1A 4, HR1B 3
      CALL ZEROMA(FHP,1,NOU)
      CALL RDTAB2(NOB,NUB,FHP,6,NFT891)
      CALL CCMATMUL(FHP,R2AB,HR1A,1,NOAUA,NOBUB,0,0)   !(M,IE)*(M,IE,I,IA)-->(I,IA)
      CALL TRT1(NOB,NUB,TI,FHP)                         !FHPB:(M,IE)-->(IE,M)
      CALL CCMATMUL(R2BB,FHP,HR1B,NOBUB,1,NOBUB,0,0)   !(I,IA,IE,M)*(IE,M)-->(I,IA)
C
CCCCCCCC    DOUBLES    CCCCCCC
C
C     HR2AA 9
      CALL ZEROMA(T2,1,NO2U2)
      CALL RDTAB(NOA,NUA,NUA,NOA,T2,3,NFT825)
      CALL CCMATMUL(OHA,T2,HR2AA,NOA,NOAUA2,NOA,0,1)  !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
C     HR2AA 6
      CALL TRANMD(HR2AA,NOA,NUA,NUA,NOA,23)             !HR2AA:(I,IA,IB,J)-->(I,IB,IA,J)
      CALL INSITU(NOA,NUA,NUA,NOA,TI,HR2AA,13)          !HR2AA:(I,IB,IA,J)-->(IA,IB,I,J)
      CALL TRANMD(R2AA,NOA,NUA,NUA,NOA,23)              !R2AA:(M,IA,IB,N)-->(M,IB,IA,N)
      CALL TRANSQ(R2AA,NOAUA)                           !R2AA:(M,IB,IA,N)-->(IA,N,M,IB)
      CALL TRANMD(R2AA,NUA,NOA,NOA,NUA,23)              !R2AA:(IA,N,M,IB)-->(IA,M,N,IB)
      CALL VECMUL(R2AA,NOA2UA2,QUARTER)
      CALL RPPP1(NOA,NUA,VPPP,R2AA,HR2AA)
      CALL VECMUL(R2AA,NOA2UA2,FOUR)
C     HR2AA 10
      CALL INSITU(NUA,NUA,NOA,NOA,TI,HR2AA,23)          !HR2AA:(IA,IB,I,J)-->(IA,I,IB,J)
      CALL INSITU(NOA,NUA,NUA,NOA,TI,T2,12)           !T2AA:(I,IE,IB,J)-->(IE,I,IB,J)
      CALL CCMATMUL(OPA,T2,HR2AA,NUA,NOA2UA,NUA,0,0)  !(IA,IE)*(IE,I,IB,J)-->(IA,I,IB,J)
C     HR2BB 9
      CALL ZEROMA(T2,1,NO2U2)
      CALL RDTAB(NOB,NUB,NUB,NOB,T2,4,NFT825)
      CALL CCMATMUL(OHB,T2,HR2BB,NOB,NOBUB2,NOB,0,1)  !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
C     HR2BB 6
      CALL TRANMD(HR2BB,NOB,NUB,NUB,NOB,23)             !HR2BB:(I,IA,IB,J)-->(I,IB,IA,J)
      CALL INSITU(NOB,NUB,NUB,NOB,TI,HR2BB,13)          !HR2BB:(I,IB,IA,J)-->(IA,IB,I,J)
      CALL TRANSQ(R2BB,NOBUB)                           !R2BB:(M,IA,IB,N)-->(IB,N,M,IA)
      CALL VECMUL(R2BB,NOB2UB2,QUARTER)
      CALL RPPP2(NUA,NOB,NUB,VPPP,R2BB,HR2BB)
      CALL VECMUL(R2BB,NOB2UB2,FOUR)
C     HR2BB 10
      CALL INSITU(NUB,NUB,NOB,NOB,TI,HR2BB,23)          !HR2BB:(IA,IB,I,J)-->(IA,I,IB,J)
      CALL INSITU(NOB,NUB,NUB,NOB,TI,T2,12)           !T2BB:(I,IE,IB,J)-->(IE,I,IB,J)
      CALL TRT1(NUB,NUB,TI,OPB)                         !OPB:(IE,IA)-->(IA,IE)
      CALL CCMATMUL(OPB,T2,HR2BB,NUB,NOB2UB,NUB,0,0)  !(IA,IE)*(IE,I,IB,J)-->(IA,I,IB,J)
      CALL TRT1(NUB,NUB,TI,OPB)   !SAFE TO TAKE OUT?
C     HR2AB 17
      CALL ZEROMA(T2,1,NO2U2)
      CALL RDTAB(NOA,NUA,NUB,NOB,T2,5,NFT825)
      CALL CCMATMUL(OHA,T2,HR2AB,NOA,NOBUAB,NOA,0,1)  !(I,M)*(M,IA,IB,J)-->(I,IA,IB,J)
C     HR2AB 19
      CALL TRT1(NOB,NOB,TI,OHB)                         !OHB:(J,N)-->(N,J)
      CALL CCMATMUL(T2,OHB,HR2AB,NOAUAB,NOB,NOB,0,1)  !(I,IA,IB,N)*(N,J)-->(I,IA,IB,J)
C     HR2AA 4
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NUA,NUA,NUA,NOA,VHPPP,7,NFT892)
      CALL INSITU(NUA,NOA,NUA,NOA,TI,HR2AA,12)          !HR2AA:(IA,I,IB,J)-->(I,IA,IB,J)
      CALL TRANMD(HR2AA,NOA,NUA,NUA,NOA,23)             !HR2AA:(I,IA,IB,J)-->(I,IB,IA,J)
      CALL TRANMD(VHPPP,NUA,NUA,NUA,NOA,13)            !VHPPP5:(IA,IB,IE,J)-->(IE,IB,IA,J)
      CALL CCMATMUL(R1A,VHPPP,HR2AA,NOA,NOAUA2,NUA,0,0)!(I,IE)*(IE,IB,IA,J)-->(I,IB,IA,J)
C     HR2BB 4
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NUB,NUB,NUB,NOB,VHPPP,8,NFT892)
      CALL INSITU(NUB,NOB,NUB,NOB,TI,HR2BB,12)          !HR2BB:(IA,I,IB,J)-->(I,IA,IB,J)
      CALL TRANMD(HR2BB,NOB,NUB,NUB,NOB,23)             !HR2BB:(I,IA,IB,J)-->(I,IB,IA,J)
      CALL TRANMD(VHPPP,NUB,NUB,NUB,NOB,13)            !VHPPP6:(IA,IB,IE,J)--->(IE,IB,IA,J)
      CALL CCMATMUL(R1B,VHPPP,HR2BB,NOB,NOBUB2,NUB,0,0)!(I,IE)*(IE,IB,IA,J)-->(I,IB,IA,J)
C     HR2AA 3
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOA,NOA,NUA,VHHHP,10,NFT891)
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(I,IB,IA,J)-->(IA,J,I,IB)
      CALL TRT1(NOA,NUA,TI,R1A)                         !R1A:(I,IA)-->(IA,I)
      CALL TRANMD(VHHHP,NOA,NOA,NOA,NUA,13)            !VHHHP5:(I,J,M,IB)-->(M,J,I,IB)
      CALL CCMATMUL(R1A,VHHHP,HR2AA,NUA,NOA2UA,NOA,0,1)!(IA,M)*(M,J,I,IB)-->(IA,J,I,IB)
C     HR2BB 3
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOB,NOB,NOB,NUB,VHHHP,11,NFT891)
      CALL TRANSQ(HR2BB,NOBUB)                          !HR2BB:(I,IB,IA,J)-->(IA,J,I,IB)
      CALL TRT1(NOB,NUB,TI,R1B)                         !R1B:(I,IA)-->(IA,I)
      CALL TRANMD(VHHHP,NOB,NOB,NOB,NUB,13)            !VHHHP6:(I,J,M,IB)-->(M,J,I,IB)
      CALL CCMATMUL(R1B,VHHHP,HR2BB,NUB,NOB2UB,NOB,0,1)!(IA,M)*(M,J,I,IB)-->(IA,J,I,IB)
C     HR2AA 5
      CALL ZEROMA(VHHHH,1,NO4)
      CALL RDTAB(NOA,NOA,NOA,NOA,VHHHH,7,NFT891)
      CALL VECMUL(VHHHH,NOA4,QUARTER)                  !VHHHH1:(I,J,K,L)-->1/4(I,J,K,L)
      CALL INSITU(NUA,NOA,NOA,NUA,TI,R2AA,13)           !R2AA:(IB,N,M,IA)-->(M,N,IB,IA)
      CALL INSITU(NUA,NOA,NOA,NUA,TI,HR2AA,13)          !HR2AA:(IA,J,I,IB)-->(I,J,IA,IB)
      CALL TRANMD(HR2AA,NOA,NOA,NUA,NUA,34)             !HR2AA:(I,J,IA,IB)-->(I,J,IB,IA)
      CALL CCMATMUL(VHHHH,R2AA,HR2AA,NOA2,NUA2,NOA2,0,0)!(1/4(I,J,M,N)*(M,N,IB,IA)-->(I,J,IB,IA)
C     HR2BB 5
      CALL ZEROMA(VHHHH,1,NO4)
      CALL RDTAB(NOB,NOB,NOB,NOB,VHHHH,8,NFT891)
      CALL VECMUL(VHHHH,NOB4,QUARTER)                  !VHHHH2:(I,J,K,L)-->1/4(I,J,K,L)
      CALL INSITU(NUB,NOB,NOB,NUB,TI,R2BB,13)           !R2BB:(IB,N,M,IA)-->(M,N,IB,IA)
      CALL INSITU(NUB,NOB,NOB,NUB,TI,HR2BB,13)          !HR2BB:(IA,J,I,IB)-->(I,J,IA,IB)
      CALL TRANMD(HR2BB,NOB,NOB,NUB,NUB,34)             !HR2BB:(I,J,IA,IB)-->(I,J,IB,IA)
      CALL CCMATMUL(VHHHH,R2BB,HR2BB,NOB2,NUB2,NOB2,0,0)!(1/4(I,J,M,N)*(M,N,IB,IA)-->(I,J,IB,IA)
C     HR1A 1, HR2AA 2, HR2AB 3
      CALL ZEROMA(FPP,1,NU2)
      CALL RDTAB2(NUA,NUA,FPP,1,NFT891)
      CALL TRT1(NUA,NOA,TI,R1A)                         !R1A:(IE,I)-->(I,IE)
      CALL CCMATMUL(R1A,FPP,HR1A,NOA,NUA,NUA,0,0)      !(I,IE)*(IE,IA)-->(I,IA)
      CALL TRT1(NOA,NUA,TI,R1A)                         !R1A:(I,IE)-->(IE,I)
      CALL CCMATMUL(R2AA,FPP,HR2AA,NOA2UA,NUA,NUA,0,0)  !(I,J,IB,IE)*(IE,IA)-->(I,J,IB,IA)
      CALL TRAN1TO4(NOB,NUB,NOA,NUA,TI,R2AB)            !R2AB:(J,IB,I,IA)-->(IB,I,IA,J)
      CALL INSITU(NUB,NOA,NUA,NOB,TI,R2AB,13)           !R2AB:(IB,I,IA,J)-->(IA,I,IB,J)=(IE,M,IB,J)
      CALL INSITU(NOA,NUA,NUB,NOB,TI,HR2AB,12)           !HR2AB:(I,IA,IB,J)-->(IA,I,IB,J)
      CALL TRANSQ(FPP,NUA)                             !FPPA:(IE,IA)-->(IA,IE)
      CALL CCMATMUL(FPP,R2AB,HR2AB,NUA,NOABUB,NUA,0,0) !(IA,IE)*(IE,I,IB,J)-->(IA,I,IB,J)
C     HR1B 2
      CALL ZEROMA(FPP,1,NU2)
      CALL RDTAB2(NUB,NUB,FPP,2,NFT891)
      CALL TRT1(NUB,NOB,TI,R1B)                         !R1B:(IE,I)-->(I,IE)
      CALL CCMATMUL(R1B,FPP,HR1B,NOB,NUB,NUB,0,0)      !(I,IE)*(IE,IA)-->(I,IA)
      CALL TRT1(NOB,NUB,TI,R1B)                         !R1B:(I,IE)-->(IE,I)
C     HR2BB 2
       CALL CCMATMUL(R2BB,FPP,HR2BB,NOB2UB,NUB,NUB,0,0)  !(I,J,IB,IE)*(IE,IA)-->(I,J,IB,IA)
C     HR1A 5
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUA,NOA,NUA,NOA,VHPHP,1,NFT892)
      CALL TRT1(NOA,NUA,TI,HR1A)                        !HR1A:(I,IA)-->(IA,I)
      CALL CCMATMUL(VHPHP,R1A,HR1A,NOAUA,1,NOAUA,0,1)  !(IA,I,IE,M)*(IE,M)-->(IA,I)
      CALL TRT1(NUA,NOA,TI,HR1A)                        !HR1A:(IA,I)-->(I,IA)
C     HR2AB 13
      CALL CCMATMUL(VHPHP,R2AB,HR2AB,NOAUA,NOBUB,NOAUA,0,1)!(IA,I,IE,M)*(IE,M,IB,J)-->(IA,I,IB,J)
      CALL INSITU(NUA,NOA,NUB,NOB,TI,HR2AB,12)           !HR2AB:(IA,I,IB,J)-->(I,IA,IB,J)
C     HR2AA 7
      CALL INSITU(NOA,NOA,NUA,NUA,TI,HR2AA,13)          !HR2AA:(I,J,IB,IA)-->(IB,J,I,IA)
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(IB,J,I,IA)-->(I,IA,IB,J)
      CALL INSITU(NOA,NUA,NUA,NOA,TI,HR2AA,12)          !HR2AA:(I,IA,IB,J)-->(IA,I,IB,J)
      CALL TRANSQ(VHPHP,NOAUA)                         !VHPHP1:(IA,I,IE,M)-->(IE,M,IA,I)
      CALL INSITU(NUA,NOA,NUA,NOA,TI,VHPHP,12)         !VHPHP1:(IE,M,IA,I)-->(M,IE,IA,I)
      CALL TRANSQ(VHPHP,NOAUA)                         !VHPHP1:(M,IE,IA,I)-->(IA,I,M,IE)
      CALL INSITU(NOA,NOA,NUA,NUA,TI,R2AA,13)           !R2AA:(I,J,IF,IE)-->(IF,J,I,IE)
      CALL TRANSQ(R2AA,NOAUA)                           !R2AA:(IF,J,I,IE)-->(M,IE,IB,J)
      CALL VECMUL(HR2AA,NOA2UA2,HALF)
      CALL CCMATMUL(VHPHP,R2AA,HR2AA,NOAUA,NOAUA,NOAUA,0,1)!(IA,I,M,IE)*(M,IE,IB,J)-->(IA,I,IB,J)
C     HR1B 6
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUB,NOB,NUB,NOB,VHPHP,2,NFT892)
      CALL TRT1(NOB,NUB,TI,HR1B)                        !HR1B:(I,IA)-->(IA,I)
      CALL CCMATMUL(VHPHP,R1B,HR1B,NOBUB,1,NOBUB,0,1)  !(IA,I,IE,M)*(IE,M)-->(IA,I)
C     HR2BB 7
      CALL INSITU(NOB,NOB,NUB,NUB,TI,HR2BB,13)          !HR2BB:(I,J,IB,IA)-->(IB,J,I,IA)
      CALL TRANSQ(HR2BB,NOBUB)                          !HR2BB:(IB,J,I,IA)-->(I,IA,IB,J)
      CALL INSITU(NOB,NUB,NUB,NOB,TI,HR2BB,12)          !HR2BB:(I,IA,IB,J)-->(IA,I,IB,J)
      CALL TRANSQ(VHPHP,NOBUB)                         !VHPHP3:(IA,I,IE,M)-->(IE,M,IA,I)
      CALL INSITU(NUB,NOB,NUB,NOB,TI,VHPHP,12)         !VHPHP3:(IE,M,IA,I)-->(M,IE,IA,I)
      CALL TRANSQ(VHPHP,NOBUB)                         !VHPHP3:(M,IE,IA,I)-->(IA,I,M,IE)
      CALL INSITU(NOB,NOB,NUB,NUB,TI,R2BB,13)           !R2BB:(I,J,IF,IE)-->(IF,J,I,IE)
      CALL TRANSQ(R2BB,NOBUB)                           !R2BB:(IF,J,I,IE)-->(M,IE,IB,J)
      CALL VECMUL(HR2BB,NOB2UB2,HALF)
      CALL CCMATMUL(VHPHP,R2BB,HR2BB,NOBUB,NOBUB,NOBUB,0,1)!(IA,I,M,IE)*(M,IE,IB,J)-->(IA,I,IB,J)
C     HR2AB 14
      CALL INSITU(NUA,NOA,NUB,NOB,TI,R2AB,12)
      CALL TRANSQ(VHPHP,NOBUB)                         !VHPHP3:(IB,J,N,IF)-->(N,IF,IB,J)
      CALL INSITU(NOB,NUB,NUB,NOB,TI,VHPHP,12)         !VHPHP3:(N,IF,IB,J)-->(IF,N,IB,J)
      CALL CCMATMUL(R2AB,VHPHP,HR2AB,NOAUA,NOBUB,NOBUB,0,1)!(I,IA,IF,N)*(IF,N,IB,J)-->(I,IA,IB,J)
      CALL INSITU(NOA,NUA,NUB,NOB,TI,R2AB,12)
C     HR1B 5
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUB,NOB,NUA,NOA,VHPHP,6,NFT892)
      CALL CCMATMUL(VHPHP,R1A,HR1B,NOBUB,1,NOAUA,0,1)  !(IA,I,IE,M)*(IE,M)-->(IA,I)
      CALL TRT1(NUB,NOB,TI,HR1B)                        !HR1A:(IA,I)-->(I,IA)
C     HR2BB 8
      CALL CCMATMUL(VHPHP,R2AB,HR2BB,NOBUB,NOBUB,NOAUA,0,1)!(IA,I,IE,M)*(IE,M,IB,J)-->(IA,I,IB,J)
C     HR2AB 16
      CALL INSITU(NUB,NOB,NUA,NOA,TI,VHPHP,13)         !VHPHP4:(IB,J,IE,M)-->(IE,J,IB,M)
      CALL TRAN24(NUA,NOB,NUB,NOA,TI,VHPHP)            !VHPHP4:(IE,J,IB,M)-->(IE,M,IB,J)
      CALL INSITU(NOA,NUA,NUA,NOA,TI,R2AA,12)           !R2AA:(M,IE,IA,I)-->(IE,M,IA,I)
      CALL TRANSQ(R2AA,NOAUA)                           !R2AA:(IE,M,IA,I)-->(IA,I,M,IE)
      CALL INSITU(NOA,NUA,NUB,NOB,TI,HR2AB,12)           !HR2AB:(I,IA,IB,J)-->(IA,I,IB,J)
      CALL CCMATMUL(R2AA,VHPHP,HR2AB,NOAUA,NOBUB,NOAUA,0,1)!(IA,I,IE,M)*(IE,M,IB,J)-->(IA,I,IB,J)
C     HR1A 6
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUB,NOB,NOA,NUA,VHPHP,5,NFT892)
      CALL CCMATMUL(R1B,VHPHP,HR1A,1,NOAUA,NOBUB,0,1)       !(IE,M)*(IE,M,I,IA)-->(I,IA)
C     HR2AB 15
      CALL TRAN24(NUA,NOA,NUB,NOB,TI,HR2AB)              !HR2AB:(IA,I,IB,J)-->(IA,J,IB,I)
      CALL TRAN1TO4(NUA,NOB,NUB,NOA,TI,HR2AB)           !HR2AB:(IA,J,IB,I)-->(J,IB,I,IA)
      CALL CCMATMUL(R2BB,VHPHP,HR2AB,NOBUB,NOAUA,NOBUB,0,1)!(J,IB,IF,N)*(IF,N,I,IA)-->(J,IB,I,IA)
      CALL TRAN14(NOB,NUB,NOA,NUA,TI,HR2AB)            !HR2AB:(J,IB,I,IA)-->(IA,IB,I,J)
      CALL INSITU(NUA,NUB,NOA,NOB,TI,HR2AB,12)         !HR2AB:(IA,IB,I,J)-->(IB,IA,I,J)
      CALL INSITU(NUB,NUA,NOA,NOB,TI,HR2AB,13)         !HR2AB:(IB,IA,I,J)-->(I,IA,IB,J)
C     HR2AA 8
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(IA,I,IB,J)-->(IB,J,IA,I)
      CALL INSITU(NUA,NOA,NUA,NOA,TI,HR2AA,12)          !HR2AA:(IB,J,IA,I)-->(J,IB,IA,I)
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(J,IB,IA,I)-->(IA,I,J,IB)
      CALL CCMATMUL(R2AB,VHPHP,HR2AA,NOAUA,NOAUA,NOBUB,0,1)!(IB,J,IE,M)*(IE,M,I,IA)-->(IB,J,I,IA)
C     CLEAN FOR HR2AA HR2BB R2AB
      CALL INSITU(NUA,NOA,NOA,NUA,TI,HR2AA,12)          !HR2AA:(IA,I,J,IB)-->(I,IA,J,IB)
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(I,IA,J,IB)-->(J,IB,I,IA)
      CALL INSITU(NOA,NUA,NOA,NUA,TI,HR2AA,12)          !HR2AA:(J,IB,I,IA)-->(IB,J,I,IA)
      CALL TRANSQ(HR2AA,NOAUA)                          !HR2AA:(IB,J,I,IA)-->(I,IA,IB,J)
      CALL INSITU(NUB,NOB,NUB,NOB,TI,HR2BB,12)          !HR2BB:(IA,I,IB,J)-->(I,IA,IB,J)
      CALL INSITU(NUA,NOA,NUB,NOB,TI,R2AB,12)           !R2AB:(IA,I,IB,J)-->(I,IA,IB,J)
C     HR2AB 3
      CALL INSITU(NOA,NUA,NUB,NOB,TI,HR2AB,12)          !HR2AB:(I,IA,IB,J)-->(IA,I,IB,J)
      CALL INSITU(NOA,NUA,NUB,NOB,TI,R2AB,12)           !R2AB:(I,IA,IB,J)-->(IE,I,IB,J)
C     HR2AB 18
      CALL INSITU(NOA,NUA,NUB,NOB,TI,T2,12)           !T2AB:(I,IE,IB,J)-->(IE,I,IB,J)
      CALL CCMATMUL(OPA,T2,HR2AB,NUA,NOABUB,NUA,0,0)  !(IA,IE)*(IE,I,IB,J)-->(IA,I,IB,J)
      CALL TRT1(NUA,NUA,TI,OPA) !SAFE TO TAKE OUT?                         !OPA:(IA,IE)-->(IE,IA)
C     HR2AB 11
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUA,NOB,NUA,NOB,VHPHP,4,NFT892)
      CALL TRAN24(NUA,NOA,NUB,NOB,TI,HR2AB)             !HR2AB:(IA,I,IB,J)-->(IA,J,IB,I)
      CALL TRAN24(NUA,NOA,NUB,NOB,TI,R2AB)              !R2AB:(IE,I,IB,J)-->(IE,N,IB,I)
      CALL CCMATMUL(VHPHP,R2AB,HR2AB,NOBUA,NOAUB,NOBUA,0,1)!(IA,J,IE,N)*(IE,N,IB,I)-->(IA,J,IB,I)
C     HR2AB 15
      CALL TRAN1TO4(NUA,NOB,NUB,NOA,TI,HR2AB)           !HR2AB:(IA,J,IB,I)-->(J,IB,I,IA)
C     HR2AB 12
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDTAB(NUB,NOA,NUB,NOA,VHPHP,3,NFT892)
      CALL TRAN1TO4(NOB,NUB,NOA,NUA,TI,HR2AB)           !HR2AB:(J,IB,I,IA)-->(IB,I,IA,J)
      CALL TRAN24(NUA,NOB,NUB,NOA,TI,R2AB)              !R2AB:(IE,N,IB,I)-->(IA,M,IF,J)
      CALL INSITU(NUA,NOA,NUB,NOB,TI,R2AB,13)           !R2AB:(IA,M,IF,J)-->(IF,M,IA,J)
      CALL CCMATMUL(VHPHP,R2AB,HR2AB,NOAUB,NOBUA,NOAUB,0,1)!(IB,I,IF,M)*(IF,M,IA,J)-->(IB,I,IA,J)
C     HR2AB 7
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NUA,NUB,NUA,NOB,VHPPP,9,NFT892)
      CALL INSITU(NUB,NOA,NUA,NOB,TI,HR2AB,12)          !HR2AB:(IB,I,IA,J)-->(I,IB,IA,J)
      CALL TRANMD(VHPPP,NUA,NUB,NUA,NOB,13)            !VHPPP7:(IA,IB,IE,J)-->(IE,IB,IA,J)
      CALL TRT1(NUA,NOA,TI,R1A)
      CALL CCMATMUL(R1A,VHPPP,HR2AB,NOA,NOBUAB,NUA,0,0)!(I,IE)*(IE,IB,IA,J)-->(I,IB,IA,J)
C     HR2AB 8
      CALL ZEROMA(VHPPP,1,NOU3)
      CALL RDTAB(NUA,NUB,NOA,NUB,VHPPP,10,NFT892)
      CALL INSITU(NUA,NUB,NOA,NUB,TI,VHPPP,13)         !VHPPP8:(IA,IB,I,IF)-->(I,IB,IA,IF)
      CALL CCMATMUL(VHPPP,R1B,HR2AB,NOAUAB,NOB,NUB,0,0)!(I,IB,IA,IF)*(IF,J)-->(I,IB,IA,J)
C     HR2AB 6
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOB,NUA,NOB,VHHHP,13,NFT891)
      CALL TRAN24(NOA,NUB,NUA,NOB,TI,HR2AB)             !HR2AB:(I,IB,IA,J)-->(I,J,IA,IB)
      CALL TRT1(NUB,NOB,TI,R1B)                         !R1B:(IF,J)-->(N,IB)
      CALL CCMATMUL(VHHHP,R1B,HR2AB,NOABUA,NUB,NOB,0,1)!(I,J,IA,N)*(N,IB)-->(I,J,IA,IB)
C     HR2AB 10
      CALL ZEROMA(VHHHH,1,NO4)
      CALL RDTAB(NOA,NOB,NOA,NOB,VHHHH,9,NFT891)
      CALL INSITU(NUB,NOA,NUA,NOB,TI,R2AB,12)           !R2AB:(IB,M,IA,N)-->(M,IB,IA,N)
      CALL TRAN24(NOA,NUB,NUA,NOB,TI,R2AB)              !R2AB:(M,IB,IA,N)-->(M,N,IA,IB)
      CALL CCMATMUL(VHHHH,R2AB,HR2AB,NOAB,NUAB,NOAB,0,0)!(I,J,M,N)*(M,N,IA,IB)--->(I,J,IA,IB)
C     HR2AB 5
      CALL ZEROMA(VHHHP,1,NO3U)
      CALL RDTAB(NOA,NOB,NOA,NUB,VHHHP,12,NFT891)
      CALL INSITU(NOA,NOB,NUA,NUB,TI,HR2AB,13)          !HR2AB:(I,J,IA,IB)-->(IA,J,I,IB)
      CALL TRANMD(VHHHP,NOA,NOB,NOA,NUB,13)            !VHHHP7:(I,J,M,IB)-->(M,J,I,IB)
      CALL TRT1(NOA,NUA,TI,R1A)                         !R1A:(M,IA)-->(IA,M)
      CALL CCMATMUL(R1A,VHHHP,HR2AB,NUA,NOABUB,NOA,0,1)!(IA,M)*(M,J,I,IB)-->(IA,J,I,IB)
C     HR2AB 4
      CALL INSITU(NUA,NOB,NOA,NUB,TI,HR2AB,23)          !HR2AB:(IA,J,I,IB)-->(IA,I,J,IB)
      CALL INSITU(NOA,NOB,NUA,NUB,TI,R2AB,23)           !R2AB:(M,N,IA,IB)-->(I,IA,J,IF)
      CALL INSITU(NOA,NUA,NOB,NUB,TI,R2AB,12)           !R2AB:(I,IA,J,IB)-->(IA,I,J,IF)
      CALL CCMATMUL(R2AB,FPP,HR2AB,NOABUA,NUB,NUB,0,0) !(IA,I,J,IF)*(IF,IB)-->(IA,I,J,IB)
C     HR2AB 20
      CALL INSITU(NUA,NOA,NUB,NOB,TI,T2,13)            !T2AB:(IA,I,IF,J)-->(IF,I,IA,J)
      CALL TRAN14(NUB,NOA,NUA,NOB,TI,T2)               !T2AB:(IF,I,IA,J)-->(J,I,IA,IF)
      CALL INSITU(NOB,NOA,NUA,NUB,TI,T2,13)            !T2AB:(J,I,IA,IF)-->(IA,I,J,IF)
      CALL CCMATMUL(T2,OPB,HR2AB,NOABUA,NUB,NUB,0,0)   !(IA,I,J,IF)*(IF,IB)-->(IA,I,J,IB)
C     HR2AB 9
      CALL INSITU(NUA,NOA,NOB,NUB,TI,HR2AB,23)           !HR2AB:(IA,I,J,IB)-->(IA,J,I,IB)
      CALL TRAN24(NUA,NOB,NOA,NUB,TI,HR2AB)              !HR2AB:(IA,J,I,IB)-->(IA,IB,I,J)
      CALL RPPP3(NOA,NUA,NUB,NOB,VPPP,R2AB,HR2AB)
C     HR2AB CLEAN
      CALL INSITU(NUA,NUB,NOA,NOB,TI,HR2AB,12)           !HR2AB:(IA,IB,I,J)-->(IB,IA,I,J)
      CALL INSITU(NUB,NUA,NOA,NOB,TI,HR2AB,13)           !HR2AB:(IB,IA,I,J)-->(I,IA,IB,J)
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK RPPP1
      SUBROUTINE RPPP1(NOA,NUA,VPPP,R2AA,HR2AA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
C
      DIMENSION VPPP(NUA,NUA,NUA),R2AA(NOA,NUA,NOA,NUA)
      DIMENSION HR2AA(NOA,NUA,NUA,NOA)
C
C
      DO 4,IF=1,NUA
       CALL ZEROMA(VPPP,1,NUA3)
       READ(NFT899,REC=IF) VPPP
       CALL CCMATMUL(VPPP,R2AA(1,1,1,IF),HR2AA,NUA2,NOA2,NUA,0,0)
 4    CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK RPPP2
      SUBROUTINE RPPP2(NUA,NOB,NUB,VPPP,R2BB,HR2BB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
C
      DIMENSION VPPP(NUB,NUB,NUB),R2BB(NOB,NUB,NOB,NUB)
      DIMENSION HR2BB(NOB,NUB,NUB,NOB)
C
C
      DO 4,IF=1,NUB
       CALL ZEROMA(VPPP,1,NU3)
       READ(NFT899,REC=NUA+IF) VPPP
       CALL CCMATMUL(VPPP,R2BB(1,1,1,IF),HR2BB,NUB2,NOB2,NUB,0,0)
 4    CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM   *DECK RPPP3
      SUBROUTINE RPPP3(NOA,NUA,NUB,NOB,VPPP,R2AB,HR2AB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
C
      DIMENSION VPPP(NUA,NUB,NUA),R2AB(NOA,NUA,NOB,NUB)
      DIMENSION HR2AB(NOA,NUA,NUB,NOB)
C
C
      DO 4,IF=1,NUB
       CALL ZEROMA(VPPP,1,NU3)
       READ(NFT899,REC=NUA+NUB+IF) VPPP
       CALL CCMATMUL(VPPP,R2AB(1,1,1,IF),HR2AB,NUAB,NOAB,NUA,0,0)
 4    CONTINUE
C
      RETURN
      END
C
C*MODULE ROEOM    DECK ASYMEOM
      SUBROUTINE ASYMEOM(HR2,NH,NP,TI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION TI(1),HR2(1)
C
      NN=(NH**2)*(NP**2)
      CALL VECCOP(NN,TI,HR2)
      CALL TRANMD(TI,NH,NP,NP,NH,23)
      CALL DAXPY(NN,-1.00D+00,TI,1,HR2,1)
      CALL TRANMD(TI,NH,NP,NP,NH,14)
      CALL DAXPY(NN,1.00D+00,TI,1,HR2,1)
      CALL TRANMD(TI,NH,NP,NP,NH,23)
      CALL DAXPY(NN,-1.00D+00,TI,1,HR2,1)
C
C      CALL VECSUB(T2PPH,TI,NN)
C      DO 1,IA=1,NP
C      DO 2,IB=1,NP
C      DO 3,J=1,NH
C       T2PPH(IA,IB,J)=T2PPH(IA,IB,J)-TI(IB,IA,J)
C 3    CONTINUE
C 2    CONTINUE
C 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMINDEX
      SUBROUTINE EOMINDEX(NOA,NUA,NOB,NUB,INDEX1,INDEX2,INDEXAA,
     *                   INDEXBB,INDEXAB,IPOS,IGRSYM,ISKK,ILC1,
     *                   ILC2,MXUA,MXUB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 REP
      PARAMETER (MXAO=8192)
      COMMON /EOMSYM/ IG,NRE(4),MC(8,8,4),ISORB(MXAO),REP(8)
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /OPEOM / MACT,MULTEOM,MREST,ISELCT(100)
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB)
      DIMENSION INDEXAA(NOA,NUA,NUA,NOA),INDEXBB(NOB,NUB,NUB,NOB)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      IF(MTHINIT.EQ.2) THEN
       IPOS=1
      ELSE
       IPOS=0
      END IF
      ILC1=0
      ILC2=0
      DO 41,I=1,NOA
      DO 42,IA=1,NUA
       INDEX1(I,IA)=0
 42   CONTINUE
 41   CONTINUE
      DO 47,J=1,NOB
      DO 48,IB=1,NUB
       INDEX2(J,IB)=0
 48   CONTINUE
 47   CONTINUE
C
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
       IF(MACT.EQ.1) THEN
         IAX=MOACTCC(I)+MOACTCC(IA+NOA)
         IF(IAX.NE.2) GO TO 2
       END IF
       DO K=1,NRE(IG)
        IPROD=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOA),IG)
     &                         *MC(K,IGRSYM,IG)
        ISFIX=MC(K,ISKK,IG)
        IDIFF=ABS(IPROD-ISFIX)
        IF(IDIFF.GT.0) GO TO 2
       ENDDO
        IPOS=IPOS+1
        INDEX1(I,IA)=IPOS
C        WRITE(6,1000) I,IA,INDEX1(I,IA)
        ILC1=ILC1+1
 2    CONTINUE
 1    CONTINUE
C
      DO 3,J=1,NOB
      DO 4,IB=1,NUB
       IF(MACT.EQ.1) THEN
         IAX=MOACTCC(J)+MOACTCC(IB+NOB)
         IF(IAX.NE.2) GO TO 4
       END IF
       DO K=1,NRE(IG)
        IPROD=MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOB),IG)
     &                         *MC(K,IGRSYM,IG)
        ISFIX=MC(K,ISKK,IG)
        IDIFF=ABS(IPROD-ISFIX)
        IF(IDIFF.GT.0) GO TO 4
       ENDDO
        IPOS=IPOS+1
        INDEX2(J,IB)=IPOS
C        WRITE(6,1000) J,IB,INDEX2(J,IB)
        ILC1=ILC1+1
 4    CONTINUE
 3    CONTINUE
C
      IF(MTHINIT.EQ.1) THEN
       DO 8,I=1,NOA
       DO 9,J=1,NOA
       DO 10,IA=1,NUA
       DO 11,IB=1,NUA
        INDEXAA(I,IA,IB,J)=0
 11    CONTINUE
 10    CONTINUE
 9     CONTINUE
 8     CONTINUE
C
       DO 12,I=1,NOB
       DO 13,J=1,NOB
       DO 14,IA=1,NUB
       DO 15,IB=1,NUB
        INDEXBB(I,IA,IB,J)=0
 15    CONTINUE
 14    CONTINUE
 13    CONTINUE
 12    CONTINUE
C
       DO 16,I=1,NOA
       DO 17,J=1,NOB
       DO 18,IA=1,NUA
       DO 19,IB=1,NUB
        INDEXAB(I,IA,IB,J)=0
 19    CONTINUE
 18    CONTINUE
 17    CONTINUE
 16    CONTINUE
C
       MXUA=0
       DO 20,I=1,NOA
       DO 21,IA=1,NUA
       DO 22,J=I+1,NOA
       DO 23,IB=IA+1,NUA
        IAX=MOACTCC(I)+MOACTCC(IA+NOA)+
     &      MOACTCC(J)+MOACTCC(IB+NOA)
        DO 111,K=1,NRE(IG)
         IPROD=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOA),IG)*
     &         MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOA),IG)*
     &         MC(K,IGRSYM,IG)
         ISFIX=MC(K,ISKK,IG)
         IDIFF=ABS(IPROD-ISFIX)
         IF(IDIFF.GT.0) GO TO 23
 111    CONTINUE
        IF(IAX.EQ.4) THEN
         IPOS=IPOS+1
C          WRITE(6,3244)I,J,IA,IB,IPOS
         INDEXAA(I,IA,IB,J)=IPOS
         INDEXAA(I,IB,IA,J)=IPOS
         INDEXAA(J,IA,IB,I)=IPOS
         INDEXAA(J,IB,IA,I)=IPOS
         ILC2=ILC2+1
         IF(IB.GT.MXUA) MXUA=IB
        END IF
 23     CONTINUE
 22     CONTINUE
 21     CONTINUE
 20     CONTINUE
C
       MXUB=0
       DO 30,I=1,NOB
       DO 31,IA=1,NUB
       DO 32,J=I+1,NOB
       DO 33,IB=IA+1,NUB
        IAX=MOACTCC(I)+MOACTCC(IA+NOB)+
     &      MOACTCC(J)+MOACTCC(IB+NOB)
        DO 112,K=1,NRE(IG)
         IPROD=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOB),IG)*
     &         MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOB),IG)*
     &         MC(K,IGRSYM,IG)
         ISFIX=MC(K,ISKK,IG)
         IDIFF=ABS(IPROD-ISFIX)
         IF(IDIFF.GT.0) GO TO 33
 112    CONTINUE
        IF(IAX.EQ.4) THEN
         IPOS=IPOS+1
C          WRITE(6,3244)I,J,IA,IB,IPOS
         INDEXBB(I,IA,IB,J)=IPOS
         INDEXBB(I,IB,IA,J)=IPOS
         INDEXBB(J,IA,IB,I)=IPOS
         INDEXBB(J,IB,IA,I)=IPOS
         ILC2=ILC2+1
         IF(IB.GT.MXUB) MXUB=IB
        END IF
 33    CONTINUE
 32    CONTINUE
 31    CONTINUE
 30    CONTINUE
C
       DO 50,I=1,NOA
       DO 51,IA=1,NUA
       DO 52,J=1,NOB
       DO 53,IB=1,NUB
        IAX=MOACTCC(I)+MOACTCC(IA+NOA)+
     &      MOACTCC(J)+MOACTCC(IB+NOB)
        DO 113,K=1,NRE(IG)
         IPROD=MC(K,ISORB(I),IG)*MC(K,ISORB(IA+NOA),IG)*
     &         MC(K,ISORB(J),IG)*MC(K,ISORB(IB+NOB),IG)*
     &         MC(K,IGRSYM,IG)
         ISFIX=MC(K,ISKK,IG)
         IDIFF=ABS(IPROD-ISFIX)
         IF(IDIFF.GT.0) GO TO 53
 113    CONTINUE
        IF(IAX.EQ.4) THEN
         IPOS=IPOS+1
C          WRITE(6,3244)I,J,IA,IB,IPOS
         INDEXAB(I,IA,IB,J)=IPOS
         ILC2=ILC2+1
        END IF
 53    CONTINUE
 52    CONTINUE
 51    CONTINUE
 50    CONTINUE
      END IF
C
C 1000 FORMAT('I A',2I3,4X,'IPOS=',1X,I3)
C 3244 FORMAT('I J A B ',4I6,4X,'IPOS=',1X,I6)
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMORDER
      SUBROUTINE EOMORDER(NOA,NOB,NORDER,IROOT,
     *                    WR,WI,ISPIN,INDEXX,INFO1,IREAL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXAO=8192)
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /OPEOM / MACT,MULTEOM,MREST,ISELCT(100)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
C
      DIMENSION WR(NORDER),WI(NORDER),INDEXX(100),ISPIN(NORDER)
C
      INFO1=0
      TOL=1.0D-10
      DO I=1,100
       INDEXX(I)=0
      ENDDO
      IMAG=0
      IF(IROOT.GT.NORDER) THEN
       WRITE(6,9010)
       INFO1=1
       RETURN
      END IF
      DO 2,I=1,NORDER
       YYY=ABS(WI(I))
       IF(YYY.GT.TOL) THEN
        WR(I)=0.00D+00
        IMAG=IMAG+1
       END IF
 2    CONTINUE
C CHECK SPIN MULTIPLICITY
      IF(NOA.NE.NOB) GO TO 100
      IF(MULTEOM.NE.-1) THEN
      IDEGEN=0
      DO 21,I=1,NORDER-1
       IF(ISPIN(I).NE.MULTEOM) THEN
        WR(I)=0.00D+00
        IMAG=IMAG+1
       END IF
       IF(ISPIN(I).EQ.0) THEN
        IDEGEN=1
       END IF
 21   CONTINUE
      END IF
 100  CONTINUE
C WR->WI
      DO 10,I=1,NORDER
       WI(I)=WR(I)
 10   CONTINUE
      IREAL=NORDER-IMAG
      IF(IREAL.LE.0) IREAL=0
      IF(IROOT.GT.IREAL) THEN
       WRITE(6,9010)
       INFO1=1
       RETURN
      END IF
      DO 3,I=1,IROOT
       XMIN=1.0D+10
       IMIN=0
       DO 4,J=1,NORDER
C THIS LOOP ELIMINATES IDENTICAL SOLUTIONS
C        DO 5,K=J+1,NORDER
C          IF(ABS((WI(J)-WI(K))).LT.CVGEOM) WI(K)=0.0D+00
C 5      CONTINUE
        IF(WI(J).EQ.0.0D+00) GO TO 4
        IF(WI(J).LT.XMIN) THEN
         XMIN=WI(J)
         IMIN=J
        END IF
 4     CONTINUE
       INDEXX(I)=IMIN
       WI(IMIN)=0.00D+00
 3     CONTINUE
       IF(IDEGEN.EQ.1) THEN
        WRITE(IW,9020)MULTEOM
        IF(MTHINIT.EQ.2) WRITE(IW,9030)CHAR(100)
       END IF
       RETURN
 9010 FORMAT(1X,'TOO MANY INITIAL VECTORS REQUESTED.')
 9020 FORMAT(2X,'WARNING: SOME INITIAL VECTORS',
     *       1X,'COULD NOT BE ASSIGNED A MULTIPLICITY.'/
     *       2X,'TO BE SURE ALL ROOTS OF MULTIPLICITY =',1X,I1,
     *       1X,'ARE ACCOUNTED FOR,'/2X,'YOU MAY WANT TO RERUN',
     *       1X,'THE CURRENT CALCULATION WITH MULT=-1')
 9030 FORMAT(2X,'OR USING THE EOM-CCS',A1,1X,'INITIAL GUESS',
     *       1X,'BY CHOOSING MINIT=1.')
       END
C
C*MODULE ROEOM   *DECK EOMSTRINT
      SUBROUTINE EOMSTRINT(NOA,NUA,NOB,NUB,IDIM,INDEX1,INDEX2,
     *                     INDEXAA,INDEXBB,INDEXAB,VR,TRANS,
     *                     IROOT,JROOT,INDEXX,IPREV,IPREVB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXAO=8192)
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
C
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB)
      DIMENSION INDEXAA(NOA,NUA,NUA,NOA),INDEXBB(NOB,NUB,NUB,NOB)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
      DIMENSION VR(IDIM,IDIM),INDEXX(*)
      DIMENSION TRANS(NOAUA+NOBUB+NOA2UA2+NOB2UB2+NO2U2AB)
C
      DO 1,IR=1,IROOT
      IF(IR.GT.JROOT) THEN
       ICOL=INDEXX(IR)
       CALL ZEROMA(TRANS,1,NOAUA+NOBUB+NOA2UA2+NOB2UB2+NO2U2AB)
C
       IF(MTHINIT.EQ.2) THEN
        CALL EOMWRTINTS(NOA,NUA,IDIM,INDEX1,VR,TRANS(1),ICOL)
        CALL EOMWRTINTS(NOB,NUB,IDIM,INDEX2,VR,
     *                TRANS(1+NOAUA),ICOL)
       ELSE
        CALL EOMWRTINTS(NOA,NUA,IDIM,INDEX1,VR,TRANS(1),ICOL)
        CALL EOMWRTINTS(NOB,NUB,IDIM,INDEX2,VR,
     *                TRANS(1+NOAUA),ICOL)
        CALL EOMWRTINTD1(NOA,NUA,NOA,NUA,IDIM,INDEXAA,VR,
     *                TRANS(1+NOAUA+NOBUB),ICOL)
        CALL EOMWRTINTD1(NOB,NUB,NOB,NUB,IDIM,INDEXBB,VR,
     *                TRANS(1+NOAUA+NOBUB+NOA2UA2),ICOL)
        CALL EOMWRTINTD2(NOA,NUA,NOB,NUB,IDIM,INDEXAB,VR,
     *                TRANS(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),ICOL)
       END IF
C
      ELSE
       JREC=5*(IPREVB+IR-1)
       JREC=JREC+10
       CALL RDTAB2(NOA,NUA,TRANS(1),(JREC+1),NFT825)
       CALL RDTAB2(NOB,NUB,TRANS(1+NOAUA),(JREC+2),NFT825)
       CALL RDTAB(NOA,NUA,NUA,NOA,TRANS(1+NOAUA+NOBUB),(JREC+3),NFT825)
       CALL RDTAB(NOB,NUB,NUB,NOB,TRANS(1+NOAUA+NOBUB+NOA2UA2),
     *               (JREC+4),NFT825)
       CALL RDTAB(NOA,NUA,NUB,NOB,TRANS(1+NOAUA+NOBUB+NOA2UA2+NOB2UB2),
     *               (JREC+5),NFT825)
      END IF
C
      IRECX=IR+IPREV
      CALL WEOMINIT(IRECX,NOAUA+NOBUB+NOA2UA2+NOB2UB2+NO2U2AB,TRANS)
 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMWRTINTS
      SUBROUTINE EOMWRTINTS(NO,NU,IDIM,INDEX1,VR,R1,ICOL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION VR(IDIM,IDIM),INDEX1(NO,NU)
      DIMENSION R1(NO,NU)
C
      DO 1,I=1,NO
      DO 2,IA=1,NU
       IPOS=INDEX1(I,IA)
       IF(IPOS.EQ.0) GO TO 2
       R1(I,IA)=VR(IPOS,ICOL)
 2    CONTINUE
 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMWRTINTD1
      SUBROUTINE EOMWRTINTD1(NO1,NU1,NO2,NU2,IDIM,INDEX,VR,
     *                R2,ICOL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION VR(IDIM,IDIM),INDEX(NO1,NU1,NU2,NO2)
      DIMENSION R2(NO1,NU1,NU2,NO2)
C
      DO 1,I=1,NO1
      DO 2,J=1,NO2
      DO 3,IA=1,NU1
      DO 4,IB=1,NU2
       IPOS=INDEX(I,IA,IB,J)
       IF(IPOS.EQ.0) GO TO 4
       ISG=ISIN(I,IA,IB,J)
       R2(I,IA,IB,J)=VR(IPOS,ICOL)*ISG
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMWRTINTD2
      SUBROUTINE EOMWRTINTD2(NOA,NUA,NOB,NUB,IDIM,
     *                INDEXAB,VR,R2AB,ICOL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION VR(IDIM,IDIM),INDEXAB(NOA,NUA,NUB,NOB)
      DIMENSION R2AB(NOA,NUA,NUB,NOB)
C
      DO 1,I=1,NOA
      DO 2,J=1,NOB
      DO 3,IA=1,NUA
      DO 4,IB=1,NUB
       IPOS=INDEXAB(I,IA,IB,J)
       IF(IPOS.EQ.0) GO TO 4
       R2AB(I,IA,IB,J)=VR(IPOS,ICOL)
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK PRNTEOMA
      SUBROUTINE PRNTEOMA(NO,NU,R1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /CCOPIN/ IOPCCREF,IOPCCMET,NOPCCFC,MULOPCC,
     *                KMICRO,KREST,LMICRO,LREST
      DIMENSION R1(NO,NU)
C
      TOL=0.05D+00
      DO 1,I=1,NO
      DO 2,IA=1,NU
       XXX=R1(I,IA)
       IF(ABS(XXX).GT.TOL) THEN
        WRITE(IW,101)XXX,I+NOPCCFC,IA+NOPCCFC+NO
        CALL FLSHBF(IW)
       END IF
 2    CONTINUE
 1    CONTINUE
      RETURN
 101  FORMAT(1X,'R1=',2X,F14.10,1X,'FOR',1X,'IA --> AA =',1X,I3,1X,I3)
      END
C
C*MODULE ROEOM   *DECK PRNTEOMB
      SUBROUTINE PRNTEOMB(NO,NU,R1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /CCOPIN/ IOPCCREF,IOPCCMET,NOPCCFC,MULOPCC,
     *                KMICRO,KREST,LMICRO,LREST
      DIMENSION R1(NO,NU)
C
      TOL=0.05D+00
      DO 1,I=1,NO
      DO 2,IA=1,NU
       XXX=R1(I,IA)
       IF(ABS(XXX).GT.TOL) THEN
        WRITE(IW,101)XXX,I+NOPCCFC,IA+NOPCCFC+NO
        CALL FLSHBF(IW)
       END IF
 2    CONTINUE
 1    CONTINUE
      RETURN
 101  FORMAT(1X,'R1=',2X,F14.10,1X,'FOR',1X,'IB --> AB =',1X,I3,1X,I3)
      END
C
C*MODULE ROEOM   *DECK PRNTEOMAA
      SUBROUTINE PRNTEOMAA(NO1,NU1,NU2,NO2,R2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /CCOPIN/ IOPCCREF,IOPCCMET,NOPCCFC,MULOPCC,
     *                KMICRO,KREST,LMICRO,LREST
      DIMENSION R2(NO1,NU1,NU2,NO2)
C
      TOL=0.05D+00
      DO 1,I=1,NO1
      DO 2,J=1,NO2
      DO 3,IA=1,NU1
      DO 4,IB=1,NU2
       XXX=R2(I,IA,IB,J)
       IF(ABS(XXX).GT.TOL) THEN
        WRITE(IW,101)XXX,I+NOPCCFC,J+NOPCCFC,
     *                   IA+NOPCCFC+NO1,IB+NOPCCFC+NO2
        CALL FLSHBF(IW)
       END IF
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      RETURN
 101  FORMAT(1X,'R2=',2X,F14.10,1X,'FOR IA,JA -> AA,BA =',
     *                             1X,I3,1X,I3,1X,I3,1X,I3)
      END
C
C*MODULE ROEOM   *DECK PRNTEOMBB
      SUBROUTINE PRNTEOMBB(NO1,NU1,NU2,NO2,R2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /CCOPIN/ IOPCCREF,IOPCCMET,NOPCCFC,MULOPCC,
     *                KMICRO,KREST,LMICRO,LREST
      DIMENSION R2(NO1,NU1,NU2,NO2)
C
      TOL=0.05D+00
      DO 1,I=1,NO1
      DO 2,J=1,NO2
      DO 3,IA=1,NU1
      DO 4,IB=1,NU2
       XXX=R2(I,IA,IB,J)
       IF(ABS(XXX).GT.TOL) THEN
        WRITE(IW,101)XXX,I+NOPCCFC,J+NOPCCFC,
     *                   IA+NOPCCFC+NO1,IB+NOPCCFC+NO2
        CALL FLSHBF(IW)
       END IF
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      RETURN
 101  FORMAT(1X,'R2=',2X,F14.10,1X,'FOR IB,JB -> AB,BB =',
     *                             1X,I3,1X,I3,1X,I3,1X,I3)
      END
C
C*MODULE ROEOM   *DECK PRNTEOMAB
      SUBROUTINE PRNTEOMAB(NO1,NU1,NU2,NO2,R2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
      COMMON /CCOPIN/ IOPCCREF,IOPCCMET,NOPCCFC,MULOPCC,
     *                KMICRO,KREST,LMICRO,LREST
      DIMENSION R2(NO1,NU1,NU2,NO2)
C
      TOL=0.05D+00
      DO 1,I=1,NO1
      DO 2,J=1,NO2
      DO 3,IA=1,NU1
      DO 4,IB=1,NU2
       XXX=R2(I,IA,IB,J)
       IF(ABS(XXX).GT.TOL) THEN
        WRITE(IW,101) XXX,I+NOPCCFC,J+NOPCCFC,
     *                   IA+NOPCCFC+NO1,IB+NOPCCFC+NO2
       END IF
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      CALL FLSHBF(IW)
      RETURN
 101  FORMAT(1X,'R2=',2X,F14.10,1X,'FOR IA,JB -> AA,BB =',
     *                             1X,I3,1X,I3,1X,I3,1X,I3)
      END
C
C*MODULE ROEOM   *DECK EOMDFILL1   !CONTAINS A-A,A-AA,AA-A,AA-AA BLOCKS
      SUBROUTINE EOMDFILL1(NOA,NUA,NOB,NUB,FPP,FHP,
     *            FHH,VHHHP,VHPPP,VHHHH,VHPHP,VPPP,
     *            HM,INDEX1,INDEXAA,INDEXAB,IDIM,MXUA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION HM(IDIM,IDIM),INDEX1(NOA,NUA),INDEXAA(NOA,NUA,NUA,NOA)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB),VHHHP(NOA,NOA,NOA,NUA)
      DIMENSION FPP(NUA,NUA),FHH(NOA,NOA),FHP(NOA,NUA)
      DIMENSION VHPPP(NUA,NUA,NUA,NOA),VHPHP(NUA,NOA,NUA,NOA)
      DIMENSION VHHHH(NOA,NOA,NOA,NOA),VPPP(NUA,NUA,NUA)
C
      CALL RDTAB2(NUA,NUA,FPP,1,NFT891)
      CALL RDTAB2(NOA,NOA,FHH,3,NFT891)
      CALL RDTAB2(NOA,NUA,FHP,5,NFT891)
      CALL RDTAB(NUA,NOA,NUA,NOA,VHPHP,1,NFT892)
      CALL RDTAB(NOA,NOA,NOA,NUA,VHHHP,14,NFT891)
      CALL RDTAB(NOA,NOA,NOA,NOA,VHHHH,7,NFT891)
C
      IDIM2=IDIM*IDIM
      CALL ZEROMA(HM,1,IDIM2)
C
C     A-A BLOCK
C
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
      IROW=INDEX1(I,IA)
      IF(IROW.EQ.0) GO TO 2
      DO 3,IB=1,NUA
       ICOL=INDEX1(I,IB)
       IF(ICOL.EQ.0) GO TO 3
       HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IB,IA)
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
      DO 4,I=1,NOA
      DO 5,IA=1,NUA
      IROW=INDEX1(I,IA)
      IF(IROW.EQ.0) GO TO 5
      DO 6,J=1,NOA
       ICOL=INDEX1(J,IA)
       IF(ICOL.EQ.0) GO TO 6
       HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,J)
 6    CONTINUE
 5    CONTINUE
 4    CONTINUE
      DO 7,I=1,NOA
      DO 8,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 8
      DO 9,J=1,NOA
      DO 10,IB=1,NUA
       ICOL=INDEX1(J,IB)
       IF(ICOL.EQ.0) GO TO 10
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IB,J)
 10    CONTINUE
 9    CONTINUE
 8    CONTINUE
 7    CONTINUE
C
C     A-AA  BLOCK (PARTIAL, ONE MOVED TO EOMDFILL4)
C
      DO 11,I=1,NOA
      DO 12,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 12
      DO 13,J=1,NOA
      DO 14,IB=1,NUA
       ICOL=INDEXAA(I,IA,IB,J)
       IF(ICOL.EQ.0) GO TO 14
       ISG=ISIN(I,IA,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+FHP(J,IB)*ISG
 14   CONTINUE
 13   CONTINUE
 12   CONTINUE
 11   CONTINUE
      DO 15,I=1,NOA
      DO 16,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 16
      DO 17,J=1,NOA
      DO 18,K=J+1,NOA
      DO 19,IB=1,NUA
       ICOL=INDEXAA(J,IA,IB,K)
       IF(ICOL.EQ.0) GO TO 19
       ISG=ISIN(J,IA,IB,K)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(J,K,I,IB)*ISG
 19   CONTINUE
 18   CONTINUE
 17   CONTINUE
 16   CONTINUE
 15   CONTINUE
C
C     AA-A BLOCK
C
      CALL RDTAB(NUA,NUA,NUA,NOA,VHPPP,7,NFT892)
      CALL RDTAB(NOA,NOA,NOA,NUA,VHHHP,10,NFT891)
C
      DO 25,I=1,NOA
      DO 26,J=I+1,NOA
      DO 27,IA=1,NUA
      DO 28,IB=IA+1,NUA
       IROW=INDEXAA(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 28
       DO 29,IC=1,NUA
        ICOL=INDEX1(I,IC)
        IF(ICOL.EQ.0) GO TO 30
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(IA,IB,IC,J)
 30     ICOL=INDEX1(J,IC)
        IF(ICOL.EQ.0) GO TO 29
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPPP(IA,IB,IC,I)
 29    CONTINUE
       DO 31,K=1,NOA
        ICOL=INDEX1(K,IA)
        IF(ICOL.EQ.0) GO TO 32
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(I,J,K,IB)
 32     ICOL=INDEX1(K,IB)
        IF(ICOL.EQ.0) GO TO 31
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHHHP(I,J,K,IA)
 31    CONTINUE
C
C     AA-AA BLOCK
C
       DO 33,IC=1,NUA
        ICOL=INDEXAA(I,IC,IB,J)
        IF(ICOL.EQ.0) GO TO 1123
        ISG=ISIN(I,IC,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IC,IA)*ISG
 1123    ICOL=INDEXAA(I,IC,IA,J)
        IF(ICOL.EQ.0) GO TO 33
        ISG=ISIN(I,IC,IA,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)-FPP(IC,IB)*ISG
 33    CONTINUE
       DO 34,K=1,NOA
        ICOL=INDEXAA(K,IA,IB,J)
        IF(ICOL.EQ.0) GO TO 1124
        ISG=ISIN(K,IA,IB,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,K)*ISG
 1124    ICOL=INDEXAA(K,IA,IB,I)
        IF(ICOL.EQ.0) GO TO 34
        ISG=ISIN(K,IA,IB,I)
        HM(IROW,ICOL)=HM(IROW,ICOL)+FHH(J,K)*ISG
 34    CONTINUE
       DO 35,K=1,NOA
       DO 36,L=K+1,NOA
        ICOL=INDEXAA(K,IA,IB,L)
        IF(ICOL.EQ.0) GO TO 36
        ISG=ISIN(K,IA,IB,L)
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHHHH(I,J,K,L)*ISG
 36   CONTINUE
 35   CONTINUE
      DO 37,K=1,NOA
      DO 38,IC=1,NUA
       ICOL=INDEXAA(K,IC,IB,I)
       IF(ICOL.EQ.0) GO TO 39
       ISG=ISIN(K,IC,IB,I)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IA,J,IC,K)*ISG
 39    ICOL=INDEXAA(K,IC,IB,J)
       IF(ICOL.EQ.0) GO TO 40
       ISG=ISIN(K,IC,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IC,K)*ISG
 40    ICOL=INDEXAA(K,IC,IA,I)
       IF(ICOL.EQ.0) GO TO 1131
       ISG=ISIN(K,IC,IA,I)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IC,K)*ISG
 1131   ICOL=INDEXAA(K,IC,IA,J)
       IF(ICOL.EQ.0) GO TO 38
       ISG=ISIN(K,IC,IA,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IB,I,IC,K)*ISG
 38   CONTINUE
 37   CONTINUE
 28   CONTINUE
 27   CONTINUE
 26   CONTINUE
 25   CONTINUE
      DO 41,ID=1,MXUA
      READ(NFT899,REC=ID) VPPP
      DO 42,IC=1,ID-1
      DO 43,I=1,NOA
      DO 44,J=I+1,NOA
        ICOL=INDEXAA(I,IC,ID,J)
        IF(ICOL.EQ.0) GO TO 44
      DO 45,IA=1,NUA
      DO 46,IB=IA+1,NUA
       IROW=INDEXAA(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 46
        ISG=ISIN(I,IC,ID,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)+VPPP(IA,IB,IC)*ISG
 46   CONTINUE
 45   CONTINUE
 44   CONTINUE
 43   CONTINUE
 42   CONTINUE
 41   CONTINUE
C
C    AB-AB BLOCK (PARTIAL)
C
      DO 1510,I=1,NOA
      DO 1520,IA=1,NUA
      DO 1530,J=1,NOB
      DO 1540,IB=1,NUB
       IROW=INDEXAB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 1540
       DO 1560,IC=1,NUA
        ICOL=INDEXAB(I,IC,IB,J)
        IF(ICOL.EQ.0) GO TO 1560
        HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IC,IA)
 1560    CONTINUE
       DO 1580,K=1,NOA
        ICOL=INDEXAB(K,IA,IB,J)
        IF(ICOL.EQ.0) GO TO 1580
        HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,K)
 1580    CONTINUE
       DO 1670,K=1,NOA
       DO 1680,IC=1,NUA
        ICOL=INDEXAB(K,IC,IB,J)
        IF(ICOL.EQ.0) GO TO 1680
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IC,K)
 1680   CONTINUE
 1670   CONTINUE
 1540    CONTINUE
 1530    CONTINUE
 1520    CONTINUE
 1510    CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMDFILL2   !CONTAINS B-B,B-BB,BB-B,BB-BB BLOCKS
      SUBROUTINE EOMDFILL2(NOA,NUA,NOB,NUB,FHH,FPP,FHP,VHPHP,VHHHP,
     *                     VHPPP,VHHHH,HM,INDEX2,INDEXBB,INDEXAB,IDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION FHH(NOB,NOB),FPP(NUB,NUB),FHP(NOB,NUB)
      DIMENSION VHPPP(NUB,NUB,NUB,NOB),VHHHP(NOB,NOB,NOB,NUB)
      DIMENSION VHPHP(NUB,NOB,NUB,NOB),VHHHH(NOB,NOB,NOB,NOB)
      DIMENSION HM(IDIM,IDIM),INDEX2(NOB,NUB),INDEXBB(NOB,NUB,NUB,NOB)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB2(NUB,NUB,FPP,2,NFT891)
      CALL RDTAB2(NOB,NOB,FHH,4,NFT891)
      CALL RDTAB2(NOB,NUB,FHP,6,NFT891)
C
      CALL RDTAB(NUB,NOB,NUB,NOB,VHPHP,2,NFT892)
      CALL RDTAB(NOB,NOB,NOB,NUB,VHHHP,15,NFT891)
      CALL RDTAB(NOB,NOB,NOB,NOB,VHHHH,8,NFT891)
C
C    B-B BLOCK
C
      DO 101,I=1,NOB
      DO 102,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 102
      DO 103,IB=1,NUB
       ICOL=INDEX2(I,IB)
       IF(ICOL.EQ.0) GO TO 103
       HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IB,IA)
 103    CONTINUE
 102    CONTINUE
 101    CONTINUE
      DO 104,I=1,NOB
      DO 105,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 105
      DO 106,J=1,NOB
       ICOL=INDEX2(J,IA)
       IF(ICOL.EQ.0) GO TO 106
       HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,J)
 106    CONTINUE
 105    CONTINUE
 104    CONTINUE
      DO 107,I=1,NOB
      DO 108,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 108
      DO 109,J=1,NOB
      DO 110,IB=1,NUB
       ICOL=INDEX2(J,IB)
       IF(ICOL.EQ.0) GO TO 110
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IB,J)
 110    CONTINUE
 109     CONTINUE
 108     CONTINUE
 107     CONTINUE
C
C     B-BB  BLOCK
C
      DO 111,I=1,NOB
      DO 112,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 112
      DO 113,J=1,NOB
      DO 114,IB=1,NUB
       ICOL=INDEXBB(I,IA,IB,J)
       IF(ICOL.EQ.0) GO TO 114
       ISG=ISIN(I,IA,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+FHP(J,IB)*ISG
 114    CONTINUE
 113    CONTINUE
 112    CONTINUE
 111    CONTINUE
      DO 115,I=1,NOB
      DO 116,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 116
      DO 117,J=1,NOB
      DO 118,K=J+1,NOB
      DO 119,IB=1,NUB
       ICOL=INDEXBB(K,IA,IB,J)
       IF(ICOL.EQ.0) GO TO 119
       ISG=ISIN(K,IA,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(K,J,I,IB)*ISG
 119   CONTINUE
 118   CONTINUE
 117   CONTINUE
 116   CONTINUE
 115   CONTINUE
C
C     BB-B BLOCK
C
      CALL RDTAB(NUB,NUB,NUB,NOB,VHPPP,8,NFT892)
      CALL RDTAB(NOB,NOB,NOB,NUB,VHHHP,11,NFT891)
C
      DO 125,I=1,NOB
      DO 126,J=I+1,NOB
      DO 127,IA=1,NUB
      DO 128,IB=IA+1,NUB
       IROW=INDEXBB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 128
       DO 129,IC=1,NUB
        ICOL=INDEX2(I,IC)
        IF(ICOL.EQ.0) GO TO 130
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(IA,IB,IC,J)
 130     ICOL=INDEX2(J,IC)
        IF(ICOL.EQ.0) GO TO 129
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPPP(IA,IB,IC,I)
 129    CONTINUE
       DO 131,K=1,NOB
        ICOL=INDEX2(K,IA)
        IF(ICOL.EQ.0) GO TO 132
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(I,J,K,IB)
 132     ICOL=INDEX2(K,IB)
        IF(ICOL.EQ.0) GO TO 131
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHHHP(I,J,K,IA)
 131    CONTINUE
C
C     BB-BB BLOCK (EXCEPT VPPP2 TERMS)
C
       DO 133,IC=1,NUB
        ICOL=INDEXBB(I,IC,IB,J)
        IF(ICOL.EQ.0) GO TO 134
        ISG=ISIN(I,IC,IB,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IC,IA)*ISG
 134     ICOL=INDEXBB(I,IC,IA,J)
        IF(ICOL.EQ.0) GO TO 133
        ISG=ISIN(I,IC,IA,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)-FPP(IC,IB)*ISG
 133    CONTINUE
       DO 135,K=1,NOB
        ICOL=INDEXBB(K,IA,IB,J)
        IF(ICOL.EQ.0) GO TO 1126
        ISG=ISIN(K,IA,IB,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(I,K)*ISG
 1126    ICOL=INDEXBB(K,IA,IB,I)
        IF(ICOL.EQ.0) GO TO 135
        ISG=ISIN(K,IA,IB,I)
        HM(IROW,ICOL)=HM(IROW,ICOL)+FHH(J,K)*ISG
 135    CONTINUE
       DO 136,K=1,NOB
       DO 137,L=K+1,NOB
        ICOL=INDEXBB(K,IA,IB,L)
        IF(ICOL.EQ.0) GO TO 137
        ISG=ISIN(K,IA,IB,L)
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHHHH(I,J,K,L)*ISG
 137   CONTINUE
 136   CONTINUE
      DO 138,K=1,NOB
      DO 139,IC=1,NUB
       ICOL=INDEXBB(K,IC,IB,I)
       IF(ICOL.EQ.0) GO TO 140
       ISG=ISIN(K,IC,IB,I)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IA,J,IC,K)*ISG
 140    ICOL=INDEXBB(K,IC,IB,J)
       IF(ICOL.EQ.0) GO TO 141
       ISG=ISIN(K,IC,IB,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IC,K)*ISG
 141    ICOL=INDEXBB(K,IC,IA,I)
       IF(ICOL.EQ.0) GO TO 142
       ISG=ISIN(K,IC,IA,I)
       HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IC,K)*ISG
 142    ICOL=INDEXBB(K,IC,IA,J)
       IF(ICOL.EQ.0) GO TO 139
       ISG=ISIN(K,IC,IA,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IB,I,IC,K)*ISG
 139   CONTINUE
 138   CONTINUE
 128   CONTINUE
 127   CONTINUE
 126   CONTINUE
 125   CONTINUE
C
C    AB-AB BLOCK (PARTIAL)
C
      DO 2510,I=1,NOA
      DO 2520,IA=1,NUA
      DO 2530,J=1,NOB
      DO 2540,IB=1,NUB
       IROW=INDEXAB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 2540
       DO 2550,IC=1,NUB
        ICOL=INDEXAB(I,IA,IC,J)
        IF(ICOL.EQ.0) GO TO 2550
        HM(IROW,ICOL)=HM(IROW,ICOL)+FPP(IC,IB)
 2550    CONTINUE
       DO 2570,K=1,NOB
        ICOL=INDEXAB(I,IA,IB,K)
        IF(ICOL.EQ.0) GO TO 2570
        HM(IROW,ICOL)=HM(IROW,ICOL)-FHH(J,K)
 2570    CONTINUE
       DO 2650,K=1,NOB
       DO 2660,IC=1,NUB
        ICOL=INDEXAB(I,IA,IC,K)
        IF(ICOL.EQ.0) GO TO 2660
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IC,K)
 2660   CONTINUE
 2650   CONTINUE
 2540    CONTINUE
 2530    CONTINUE
 2520    CONTINUE
 2510    CONTINUE
C
       RETURN
       END
C*MODULE ROEOM   *DECK EOMDFILL3  !CONTAINS A-B,B-A,A-AB,AB-A,B-AB,AB-B BLOCKS
      SUBROUTINE EOMDFILL3(NOA,NUA,NOB,NUB,FHP,VHPHP,
     *                VHHHP,VHPPP,VPPP,HM,INDEX1,INDEX2,
     *                INDEXAA,INDEXBB,INDEXAB,IDIM,MXUB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION FHP(NOB,NUB)
      DIMENSION VHPHP(NUB,NOB,NUA,NOA),VHHHP(NOA,NOB,NOA,NUB)
      DIMENSION VHPPP(NUA,NUB,NUA,NOB)
      DIMENSION HM(IDIM,IDIM),VPPP(NUB,NUB,NUB)
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB),INDEXAA(NOA,NUA,NUA,NOA)
      DIMENSION INDEXBB(NOB,NUB,NUB,NOB),INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB2(NOB,NUB,FHP,6,NFT891)
      CALL RDTAB(NOA,NOB,NOA,NUB,VHHHP,16,NFT891)
      CALL RDTAB(NUA,NUB,NUA,NOB,VHPPP,13,NFT892)
C
C    A-AB BLOCK
C
      DO 205,I=1,NOA
      DO 206,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 206
       DO 207,J=1,NOB
       DO 208,IB=1,NUB
        ICOL=INDEXAB(I,IA,IB,J)
        IF(ICOL.EQ.0) GO TO 208
        HM(IROW,ICOL)=HM(IROW,ICOL)+FHP(J,IB)
 208     CONTINUE
 207     CONTINUE
 206     CONTINUE
 205     CONTINUE
      DO 209,I=1,NOA
      DO 210,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 210
        DO 211,J=1,NOB
        DO 212,IB=1,NUB
        DO 213,K=1,NOA
         ICOL=INDEXAB(K,IA,IB,J)
         IF(ICOL.EQ.0) GO TO 213
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(K,J,I,IB)
 213     CONTINUE
 212     CONTINUE
 211     CONTINUE
 210     CONTINUE
 209      CONTINUE
      DO 214,I=1,NOA
      DO 215,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 215
        DO 216,J=1,NOB
        DO 217,IB=1,NUB
        DO 218,IC=1,NUA
         ICOL=INDEXAB(I,IC,IB,J)
         IF(ICOL.EQ.0) GO TO 218
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(IA,IB,IC,J)
 218     CONTINUE
 217     CONTINUE
 216     CONTINUE
 215     CONTINUE
 214     CONTINUE
C
      CALL RDTAB(NOA,NOB,NOA,NUB,VHHHP,12,NFT891)
      CALL RDTAB(NUA,NUB,NUA,NOB,VHPPP,9,NFT892)
      CALL RDTAB(NUB,NOB,NUA,NOA,VHPHP,6,NFT892)
C
C    AB-A BLOCK
C
        DO 220,J=1,NOB
        DO 221,IA=1,NUA
        DO 222,I=1,NOA
        DO 223,IB=1,NUB
        IROW=INDEXAB(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 223
        DO 226,IC=1,NUA
         ICOL=INDEX1(I,IC)
         IF(ICOL.EQ.0) GO TO 226
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(IA,IB,IC,J)
 226     CONTINUE
        DO 227,K=1,NOA
         ICOL=INDEX1(K,IA)
         IF(ICOL.EQ.0) GO TO 227
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(I,J,K,IB)
 227     CONTINUE
C
C     AB-AA BLOCK
C
        DO 228,K=1,NOA
        DO 229,IC=1,NUA
         ICOL=INDEXAA(I,IA,IC,K)
         IF(ICOL.EQ.0) GO TO 229
         ISN=ISIN(I,IA,IC,K)
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IC,K)*ISN
 229     CONTINUE
 228     CONTINUE
 223     CONTINUE
 222     CONTINUE
 221     CONTINUE
 220     CONTINUE
C
C    B-A BLOCK
C
      DO 240,J=1,NOB
      DO 241,IB=1,NUB
       IROW=INDEX2(J,IB)
       IF(IROW.EQ.0) GO TO 241
C
        DO 242,I=1,NOA
        DO 243,IA=1,NUA
         ICOL=INDEX1(I,IA)
         IF(ICOL.EQ.0) GO TO 243
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IA,I)
 243    CONTINUE
 242    CONTINUE
 241    CONTINUE
 240    CONTINUE
C
C     BB-AB BLOCK
C
      DO 418,I=1,NOB
      DO 419,IA=1,NUB
      DO 420,J=I+1,NOB
      DO 421,IB=IA+1,NUB
        IROW=INDEXBB(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 421
        DO 422,K=1,NOA
        DO 423,IC=1,NUA
         ICOL=INDEXAB(K,IC,IB,J)
         IF(ICOL.EQ.0) GO TO 424
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,I,IC,K)
 424     ICOL=INDEXAB(K,IC,IA,J)
         IF(ICOL.EQ.0) GO TO 425
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IB,I,IC,K)
 425     ICOL=INDEXAB(K,IC,IB,I)
         IF(ICOL.EQ.0) GO TO 426
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IA,J,IC,K)
 426     ICOL=INDEXAB(K,IC,IA,I)
         IF(ICOL.EQ.0) GO TO 423
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,IC,K)
 423    CONTINUE
 422    CONTINUE
 421    CONTINUE
 420    CONTINUE
 419    CONTINUE
 418    CONTINUE
C
C    VPPP2 PART OF BB-BB BLOCK
C
      DO 430,ID=1,MXUB
      READ(NFT899,REC=NUA+ID) VPPP
      DO 440,IC=1,ID-1
      DO 450,I=1,NOB
      DO 460,J=I+1,NOB
        ICOL=INDEXBB(I,IC,ID,J)
        IF(ICOL.EQ.0) GO TO 460
      DO 470,IA=1,NUB
      DO 480,IB=IA+1,NUB
       IROW=INDEXBB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 480
        ISG=ISIN(I,IC,ID,J)
        HM(IROW,ICOL)=HM(IROW,ICOL)+VPPP(IA,IB,IC)*ISG
 480   CONTINUE
 470   CONTINUE
 460   CONTINUE
 450   CONTINUE
 440   CONTINUE
 430   CONTINUE
       RETURN
       END
C
C*MODULE ROEOM   *DECK EOMDFILL4  !CONTAINS AB-AA,AA-AB,AB-BB,BB-AB BLOCKS
      SUBROUTINE EOMDFILL4(NOA,NUA,NOB,NUB,VHPPP,VHHHH,VPPP,VHPHP,
     *                     HM,INDEX1,INDEXAA,INDEXAB,IDIM,MXUB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION VHPHP(NUA,NOB,NUA,NOB)
      DIMENSION VHHHH(NOA,NOB,NOA,NOB),VPPP(NUA,NUB,NUA)
      DIMENSION VHPPP(NOA,NUA,NUA,NUA)
      DIMENSION HM(IDIM,IDIM)
      DIMENSION INDEX1(NOA,NUA)
      DIMENSION INDEXAA(NOA,NUA,NUA,NOA)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB(NOA,NOB,NOA,NOB,VHHHH,9,NFT891)
      CALL RDTAB(NOA,NUA,NUA,NUA,VHPPP,11,NFT892)
      CALL RDTAB(NUA,NOB,NUA,NOB,VHPHP,4,NFT892)
C
C     AB-AB BLOCK
C
      DO 4510,I=1,NOA
      DO 4520,IA=1,NUA
      DO 4530,J=1,NOB
      DO 4540,IB=1,NUB
       IROW=INDEXAB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 4540
       DO 4630,K=1,NOB
       DO 4640,IC=1,NUA
        ICOL=INDEXAB(I,IC,IB,K)
        IF(ICOL.EQ.0) GO TO 4640
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IA,J,IC,K)
 4640   CONTINUE
 4630   CONTINUE
       DO 4590,K=1,NOA
       DO 4600,L=1,NOB
        ICOL=INDEXAB(K,IA,IB,L)
        IF(ICOL.EQ.0) GO TO 4600
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHHHH(I,J,K,L)
 4600   CONTINUE
 4590    CONTINUE
 4540    CONTINUE
 4530    CONTINUE
 4520    CONTINUE
 4510    CONTINUE
C
      DO 690,ID=1,MXUB
      READ(NFT899,REC=NUA+NUB+ID) VPPP
      DO 700,IC=1,NUA
      DO 705,I=1,NOA
      DO 710,J=1,NOB
       ICOL=INDEXAB(I,IC,ID,J)
       IF(ICOL.EQ.0) GO TO 710
       DO 720,IA=1,NUA
       DO 730,IB=1,NUB
        IROW=INDEXAB(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 730
        HM(IROW,ICOL)=HM(IROW,ICOL)+VPPP(IA,IB,IC)
 730   CONTINUE
 720   CONTINUE
 710  CONTINUE
 705  CONTINUE
 700  CONTINUE
 690  CONTINUE
C
C     A-AA BLOCK (REMAINING)
C
      DO 10,I=1,NOA
      DO 11,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 11
      DO 12,J=1,NOA
      DO 13,IB=1,NUA
      DO 14,IC=IB+1,NUA
       ICOL=INDEXAA(I,IB,IC,J)
       IF(ICOL.EQ.0) GO TO 14
       ISG=ISIN(I,IB,IC,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(J,IB,IC,IA)*ISG
 14   CONTINUE
 13   CONTINUE
 12   CONTINUE
 11   CONTINUE
 10   CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMDFILL5  !CONTAINS AB-AA,AA-AB,AB-BB,BB-AB BLOCKS
      SUBROUTINE EOMDFILL5(NOA,NUA,NOB,NUB,FHP,
     *            VHHHP,VHPPP,HM,INDEX2,INDEXAB,IDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION FHP(NOA,NUA)
      DIMENSION VHPPP(NOA,NUB,NUA,NUB),VHHHP(NOA,NOB,NUA,NOB)
      DIMENSION HM(IDIM,IDIM)
      DIMENSION INDEX2(NOB,NUB)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB2(NUB,NUB,FHP,5,NFT891)
      CALL RDTAB(NOA,NOB,NUA,NOB,VHHHP,17,NFT891)
      CALL RDTAB(NOA,NUB,NUA,NUB,VHPPP,14,NFT892)
C
C    B-AB BLOCK
C
      DO 50,J=1,NOB
      DO 51,IB=1,NUB
       IROW=INDEX2(J,IB)
       IF(IROW.EQ.0) GO TO 51
        DO 52,I=1,NOA
        DO 53,IA=1,NUA
         ICOL=INDEXAB(I,IA,IB,J)
         IF(ICOL.EQ.0) GO TO 54
         HM(IROW,ICOL)=HM(IROW,ICOL)+FHP(I,IA)
 54     DO 55,K=1,NOB
          ICOL=INDEXAB(I,IA,IB,K)
          IF(ICOL.EQ.0) GO TO 55
          HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(I,K,IA,J)
 55      CONTINUE
         DO 56,IC=1,NUB
          ICOL=INDEXAB(I,IA,IC,J)
          IF(ICOL.EQ.0) GO TO 56
          HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(I,IC,IA,IB)
 56      CONTINUE
 53      CONTINUE
 52      CONTINUE
 51      CONTINUE
 50      CONTINUE
      RETURN
      END
C
C
C*MODULE ROEOM   *DECK EOMDFILL6
      SUBROUTINE EOMDFILL6(NOA,NUA,NOB,NUB,VHPHP,VHPPP,VHHHP,HM,
     *                INDEX1,INDEX2,INDEXAA,INDEXBB,INDEXAB,IDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION VHPHP(NUB,NOB,NOA,NUA)
      DIMENSION VHPPP(NUA,NUB,NOA,NUB),VHHHP(NOA,NOB,NUA,NOB)
      DIMENSION HM(IDIM,IDIM)
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB),INDEXAA(NOA,NUA,NUA,NOA)
      DIMENSION INDEXBB(NOB,NUB,NUB,NOB),INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB(NUB,NOB,NOA,NUA,VHPHP,5,NFT892)
      CALL RDTAB(NOA,NOB,NUA,NOB,VHHHP,13,NFT891)
      CALL RDTAB(NUA,NUB,NOA,NUB,VHPPP,10,NFT892)
C
C     A-B BLOCK
C
      DO 1,I=1,NOA
      DO 2,IA=1,NUA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 2
       DO 3,J=1,NOB
       DO 4,IB=1,NUB
        ICOL=INDEX2(J,IB)
        IF(ICOL.EQ.0) GO TO 4
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,J,I,IA)
 4    CONTINUE
 3    CONTINUE
 2    CONTINUE
 1    CONTINUE
C
        DO 20,J=1,NOB
        DO 21,IA=1,NUA
        DO 22,I=1,NOA
        DO 23,IB=1,NUB
        IROW=INDEXAB(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 23
C
C
C     AB-BB BLOCK
C
        DO 30,K=1,NOB
        DO 31,IC=1,NUB
         ICOL=INDEXBB(J,IB,IC,K)
         IF(ICOL.EQ.0) GO TO 31
         ISN=ISIN(J,IB,IC,K)
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IC,K,I,IA)*ISN
 31     CONTINUE
 30     CONTINUE
C
C      AB-B BLOCKS
C
       DO 32,IC=1,NUB
        ICOL=INDEX2(J,IC)
        IF(ICOL.EQ.0) GO TO 32
        HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(IA,IB,I,IC)
 32     CONTINUE
       DO 33,K=1,NOB
        ICOL=INDEX2(K,IB)
        IF(ICOL.EQ.0) GO TO 33
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHHHP(I,J,IA,K)
C
 33      CONTINUE
 23     CONTINUE
 22     CONTINUE
 21     CONTINUE
 20     CONTINUE
C
C     AA-AB
C
      DO 118,I=1,NOA
      DO 119,IA=1,NUA
      DO 120,J=I+1,NOA
      DO 121,IB=IA+1,NUA
        IROW=INDEXAA(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 121
        DO 128,K=1,NOB
        DO 129,IC=1,NUB
         ICOL=INDEXAB(I,IA,IC,K)
         IF(ICOL.EQ.0) GO TO 130
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IC,K,J,IB)
 130     ICOL=INDEXAB(J,IA,IC,K)
         IF(ICOL.EQ.0) GO TO 131
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IC,K,I,IB)
 131     ICOL=INDEXAB(I,IB,IC,K)
         IF(ICOL.EQ.0) GO TO 132
         HM(IROW,ICOL)=HM(IROW,ICOL)+VHPHP(IC,K,J,IA)
 132     ICOL=INDEXAB(J,IB,IC,K)
         IF(ICOL.EQ.0) GO TO 129
         HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IC,K,I,IA)
 129    CONTINUE
 128    CONTINUE
 121  CONTINUE
 120  CONTINUE
 119  CONTINUE
 118  CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMDFILL7
      SUBROUTINE EOMDFILL7(NOA,NUA,NOB,NUB,VHPHP,HM,
     *                     INDEXAB,IDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION VHPHP(NUB,NOA,NUB,NOA)
      DIMENSION HM(IDIM,IDIM)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      CALL RDTAB(NUB,NOA,NUB,NOA,VHPHP,3,NFT892)
C
C    AB-AB BLOCK (REMAINING)
C
      DO 3510,I=1,NOA
      DO 3520,IA=1,NUA
      DO 3530,J=1,NOB
      DO 3540,IB=1,NUB
       IROW=INDEXAB(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 3540
       DO 3610,K=1,NOA
       DO 3620,IC=1,NUB
        ICOL=INDEXAB(K,IA,IC,J)
        IF(ICOL.EQ.0) GO TO 3620
        HM(IROW,ICOL)=HM(IROW,ICOL)-VHPHP(IB,I,IC,K)
 3620   CONTINUE
 3610   CONTINUE
 3540    CONTINUE
 3530    CONTINUE
 3520    CONTINUE
 3510    CONTINUE
        RETURN
        END
C
C*MODULE ROEOM   *DECK EOMDFILL8
      SUBROUTINE EOMDFILL8(NOB,NUB,VHPPP,HM,INDEX2,INDEXBB,IDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
C
      DIMENSION VHPPP(NOB,NUB,NUB,NUB)
      DIMENSION HM(IDIM,IDIM)
      DIMENSION INDEX2(NOB,NUB)
      DIMENSION INDEXBB(NOB,NUB,NUB,NOB)
C
      CALL RDTAB(NOB,NUB,NUB,NUB,VHPPP,12,NFT892)
      DO 20,I=1,NOB
      DO 21,IA=1,NUB
       IROW=INDEX2(I,IA)
       IF(IROW.EQ.0) GO TO 21
      DO 22,J=1,NOB
      DO 23,IB=1,NUB
      DO 24,IC=IB+1,NUB
       ICOL=INDEXBB(I,IB,IC,J)
       IF(ICOL.EQ.0) GO TO 24
       ISG=ISIN(I,IB,IC,J)
       HM(IROW,ICOL)=HM(IROW,ICOL)+VHPPP(J,IB,IC,IA)*ISG
 24   CONTINUE
 23   CONTINUE
 22   CONTINUE
 21   CONTINUE
 20   CONTINUE
      RETURN
      END
C
C*MODULE ROEOM   *DECK ISIN(I,IA,IB,J)
      INTEGER FUNCTION ISIN(I,IA,IB,J)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
       ISIN=1
       IF(I.GT.J) ISIN=-ISIN
       IF(IA.GT.IB) ISIN=-ISIN
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMSPIN
      SUBROUTINE EOMSPIN(NOA,NUA,NOB,NUB,R0,R1A,R1B,R2AA,R2AB,ISPIN,
     *                  IROOT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXAO=8192)
C
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      COMMON /IOFILE/ IR,IW,IP,IJK,IJKT,IDAF,NAV,IODA(950)
C
      DIMENSION R1A(NOA,NUA),R1B(NOB,NUB),R2AA(NOA,NUA,NUA,NOA)
      DIMENSION R2AB(NOA,NUA,NUB,NOB)
C
C
      TOL=100*CVGEOM
      ISPIN=0
C
      IF(ABS(R0).GT.TOL) THEN
       ISPIN=1
       GO TO 2
      ELSE
       RMAX=0.00D+00
       IMAX=0
       IAMAX=0
       DO 3,IA=1,NUA
       DO 4,I=1,NOA
        YYY=ABS(R1A(I,IA))
        IF(YYY.GT.RMAX) THEN
         RMAX=YYY
         IAMAX=IA
         IMAX=I
        END IF
 4     CONTINUE
 3     CONTINUE
      END IF
C
       IF(RMAX.GT.TOL) THEN
        DIFF1=ABS(R1A(IMAX,IAMAX)-R1B(IMAX,IAMAX))
        DIFF2=ABS(ABS(R1A(IMAX,IAMAX))-ABS(R1B(IMAX,IAMAX)))
        IF(DIFF1.LE.TOL) THEN
         ISPIN=1
         GO TO 2
        ELSE IF(DIFF2.LE.TOL) THEN
         ISPIN=3
         GO TO 2
        END IF
       END IF
C
        RMAX=0.00D+00
        IMAX=0
        IAMAX=0
        IBMAX=0
        JMAX=0
        DO 13,I=1,NOA
        DO 14,J=I+1,NOA
        DO 15,IA=1,NUA
        DO 16,IB=IA+1,NUA
         YYY=ABS(R2AA(I,IA,IB,J))
         IF(YYY.GT.RMAX) THEN
          RMAX=YYY
          IMAX=I
          JMAX=J
          IAMAX=IA
          IBMAX=IB
         END IF
 16     CONTINUE
 15     CONTINUE
 14     CONTINUE
 13     CONTINUE
C
        RMAX=0.00D+00
        IMAX=0
        JMAX=0
        IAMAX=0
        IBMAX=0
        DO 5,I=1,NOA
        DO 6,J=I+1,NOB
        DO 7,IA=1,NUA
        DO 8,IB=IA+1,NUB
         YYY=ABS(R2AB(I,IA,IB,J))
         IF(YYY.GT.RMAX) THEN
          RMAX=YYY
          IMAX=I
          JMAX=J
          IAMAX=IA
          IBMAX=IB
         END IF
 8      CONTINUE
 7      CONTINUE
 6      CONTINUE
 5      CONTINUE
C
       IF(RMAX.GT.TOL) THEN
        R2AA1=R2AA(IMAX,IAMAX,IBMAX,JMAX)
        R2AB1=R2AB(IMAX,IAMAX,IBMAX,JMAX)
        R2AB2=R2AB(JMAX,IBMAX,IAMAX,IMAX)
C---    R2AB3=-R2AB(JMAX,IAMAX,IBMAX,IMAX)
C---    R2AB4=-R2AB(IMAX,IBMAX,IAMAX,JMAX)
C
        DIFF1=ABS(R2AB1-R2AB2)
        SUM1=ABS(R2AB1+R2AB2)
        SUM2=ABS(R2AB1)+ABS(R2AB2)
C---    DIFF3=ABS(R2AB1-R2AB3)
C---    DIFF4=ABS(ABS(R2AB1)-ABS(R2AB3))
C---    SUM3=ABS(R2AB1+R2AB3)
C---    SUM4=ABS(R2AB1)+ABS(R2AB3)
C---    DIFF5=ABS(2.00D+00*R2AB1-R2AA1)
C---    SUM5=2.00D+00*ABS(R2AB1)+ABS(R2AA1)
        SUM6=ABS(R2AB1+R2AA1)
        SUM7=ABS(R2AB1)+ABS(R2AA1)
C QUINTET CHECK
        IF(DIFF1.LT.TOL.AND.SUM2.GT.TOL) THEN    !G3,G4 SAME SIGN
         IF(SUM6.LT.TOL.AND.SUM7.GT.TOL) THEN   !G3,G1 DIFF SIGN
          ISPIN=5
          GO TO 2
         ELSE
C WITH QUINTET ELIMINATED, EASY TO DISTINGUISH S=0,1 CASES FROM G3,G4
          ISPIN=1
          GO TO 2
         END IF
        ELSE IF(SUM1.LT.TOL.AND.SUM2.GT.TOL) THEN      !G3,G4 OPP SIGN
         ISPIN=3
         GO TO 2
        ELSE IF(SUM6.LT.TOL.AND.SUM7.GT.TOL) THEN
         ISPIN=3
         GO TO 2
        END IF
       ELSE
        WRITE(IW,100) IROOT
       END IF
 2    CONTINUE
      RETURN
 100  FORMAT(/1X,'EOM-CCSD AMPLITUDES TOO SMALL'/
     *        1X,'TO DETERMINE SPIN FOR ROOT',1X,I3)
      END
C
C*MODULE ROEOM   *DECK R0CALC
      SUBROUTINE R0CALC(NOA,NUA,NOB,NUB,XENE,FHP,VHPHP,
     *            R1A,R1B,R2AA,R2BB,R2AB,R0,REL,CVGEOM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /CCOPIO/ NFT820,NFT821,NFT822,NFT823,NFT825,NFT826,NFT827,
     *                NFT828,NFT829,NFT830,NFT831,NFT832,NFT833,NFT834,
     *                NFT835,NFT836,NFT837,NFT838,NFT839,NFT843,NFT848,
     *                NFT858,NFT859,NFT891,NFT892,NFT899
      COMMON /NNMAX / NOU,NO2,NU2,NO2U2,NO4,NU3,NO3U,NOU3,NOU2,NO2U
      COMMON /NNROHF/ NOAUA,NOAUB,NOBUA,NOBUB,NOA2,NOA2UA,NOA4,NOB2,
     *                NOB2UB,NOB4,NUA2,NOAUA2,NUA4,NUB2,NOBUB2,NUB4,
     *                NUAB,NOAB,NO2AB,NU2AB,NOABUB,NOABUA,NOAUAB,
     *                NOBUAB,NOA2UA2,NOB2UB2,NOA2UB2,NOB2UA2,NO2U2AB,
     *                NUA3,NUB3,NOA3,NOB3,NOA3UA,NOB3UB,NOA2UB,NOAUB2,
     *                NOB2UA,NOBUA2,NUA2UB,NOA2OB,NOAOB2,NUA3NOA,
     *                NUAUB2,NOAOB2UA,NUB3NOB
       DIMENSION FHP(1),VHPHP(1)
       DIMENSION R1A(1),R1B(1),R2AA(1),R2BB(1),R2AB(1)
C
      TOL=CVGEOM
      R0=0.00D+00
      REL=0.00D+00
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOAUA,NOAUA,VHPHP,NFT829)     !VHPRAA(NUA,NOA,NUA,NOA)
      CALL ZEROMA(FHP,1,NOU)
      CALL RDTAB2(NOA,NUA,FHP,5,NFT891)
      CALL R0CALC1(NOA,NUA,FHP,VHPHP,R1A,R2AA,R0,REL)
      CALL ZEROMA(FHP,1,NOU)
      CALL RDTAB2(NOB,NUB,FHP,6,NFT891)
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOBUB,NOBUB,VHPHP,NFT830)     !VHPRBB(NUB,NOB,NUB,NOB)
      CALL R0CALC1(NOB,NUB,FHP,VHPHP,R1B,R2BB,R0,REL)
      CALL ZEROMA(VHPHP,1,NO2U2)
      CALL RDINT(1,NOBUB,NOAUA,VHPHP,NFT833)     !VHPRAB(NUA,NOA,NUB,NOB)
      CALL R0CALC2(NOA,NUA,NOB,NUB,XENE,VHPHP,R2AB,R0,REL)
      IF(R0.LT.TOL) R0=0.00D+00
      RETURN
      END
C
C*MODULE ROEOM   *DECK R0CALC1
       SUBROUTINE R0CALC1(NO,NU,FHP,VHPHP,R1,R2,R0,REL)
       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
       DATA QUARTER/0.25D+00/
       DIMENSION FHP(NO,NU),VHPHP(NU,NO,NU,NO)
       DIMENSION R1(NO,NU),R2(NO,NU,NU,NO)
C
       DO 1,I=1,NO
       DO 2,IA=1,NU
        R0=R0+FHP(I,IA)*R1(I,IA)
        REL=REL+R1(I,IA)*R1(I,IA)
 2     CONTINUE
 1     CONTINUE
       DO 5,I=1,NO
       DO 6,J=I+1,NO
       DO 7,IA=1,NU
       DO 8,IB=IA+1,NU
        R0=R0+QUARTER*VHPHP(IA,I,IB,J)*R2(I,IA,IB,J)
        REL=REL+2*R2(I,IA,IB,J)*R2(I,IA,IB,J)
 8     CONTINUE
 7     CONTINUE
 6     CONTINUE
 5     CONTINUE
       RETURN
       END
C*MODULE ROEOM   *DECK R0CALC2
      SUBROUTINE R0CALC2(NOA,NUA,NOB,NUB,XENE,VHPHP,R2AB,R0,REL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION VHPHP(NUA,NOA,NUB,NOB)
      DIMENSION R2AB(NOA,NUA,NUB,NOB)
C
      DO 13,I=1,NOA
      DO 14,J=1,NOB
      DO 15,IA=1,NUA
      DO 16,IB=1,NUB
       R0=R0+VHPHP(IA,I,IB,J)*R2AB(I,IA,IB,J)
       REL=REL+2*R2AB(I,IA,IB,J)*R2AB(I,IA,IB,J)
 16   CONTINUE
 15   CONTINUE
 14   CONTINUE
 13   CONTINUE
       R0=R0/XENE
      RETURN
      END
C
C
C*MODULE ROEOM   *DECK WEOMINIT
      SUBROUTINE WEOMINIT(IREC,N,A)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(N)
      WRITE(97,REC=IREC) A
      RETURN
      END
C
C*MODULE ROEOM   *DECK REOMINIT
      SUBROUTINE REOMINIT(IREC,N,A)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(N)
      READ(97,REC=IREC) A
      RETURN
      END
C
C*MODULE ROEOM   *DECK EOMSPNINT
      SUBROUTINE EOMSPNINT(NOA,NUA,NOB,NUB,IDIM,NORDER,INDEX1,
     *                     INDEX2,INDEXAA,INDEXAB,VR,ISPIN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXAO=8192)
      COMMON /EOMPAR/ CVGCI,CVGEOM,GRPEOM,NSTEOM(8),NOACT,NUACT,
     *                MOACTCC(MXAO),MTHTRIP,MTHCI,MTHEOM,MTHINIT,
     *                MAXCI,MAXEOM,MICCI,MICEOM,IROOTCC(2),
     *                IPROPCC,IPROPCCE
      DIMENSION VR(IDIM,IDIM),ISPIN(IDIM)
      DIMENSION INDEX1(NOA,NUA),INDEX2(NOB,NUB)
      DIMENSION INDEXAA(NOA,NUA,NUA,NOA)
      DIMENSION INDEXAB(NOA,NUA,NUB,NOB)
C
      TOL=CVGEOM
C
      DO 1,I=1,NORDER
       ISPIN(I)=0
 1    CONTINUE
C
      IF(MTHINIT.EQ.2) THEN
       NORDR=NORDER
      ELSE
       NORDR=NORDER-1
      END IF
C
      DO 2,ICOL=1,NORDR
C
C      PRINT *,'ROOT=',ICOL
      RAMAX=0.00D+00
      IMAX=0
      IAMAX=0
      DO 10,IA=1,NUA
      DO 11,I=1,NOA
       IROW=INDEX1(I,IA)
       IF(IROW.EQ.0) GO TO 11
       YYY=ABS(VR(INDEX1(I,IA),ICOL))
       IF(YYY.GT.RAMAX) THEN
        RAMAX=YYY
        IMAX=I
        IAMAX=IA
       END IF
 11   CONTINUE
 10   CONTINUE
      IROW=INDEX1(IMAX,IAMAX)
      XR1A=VR(IROW,ICOL)
      IROW=INDEX2(IMAX,IAMAX)
      XR1B=VR(IROW,ICOL)
C      PRINT *,'1 XR1A,XR1B',XR1A,XR1B
C
      IF(RAMAX.GT.TOL) THEN
        DIFF1=ABS(XR1A-XR1B)
        DIFF2=ABS(ABS(XR1A)-ABS(XR1B))
        IF(DIFF1.LE.TOL) THEN
C         PRINT *,'ASSIGNED S SINGLET 1'
         ISPIN(ICOL)=1
         GO TO 2
        ELSE IF(DIFF2.LE.TOL) THEN
C         PRINT *,'ASSIGNED S TRIPLET 1'
         ISPIN(ICOL)=3
         GO TO 2
        END IF
      END IF
      IF(MTHINIT.EQ.2) THEN
         ISPIN(ICOL)=0
         GO TO 2
      END IF
C
      RMAX=0.00D+00
      IAMAX=0
      IBMAX=0
      IMAX=0
      JMAX=0
      DO 50,I=1,NOA
      DO 60,J=I+1,NOA
      DO 70,IA=1,NUA
      DO 80,IB=IA+1,NUA
       IROW=INDEXAA(I,IA,IB,J)
       IF(IROW.EQ.0) GO TO 80
       YYY=ABS(VR(IROW,ICOL))
       IF(YYY.GT.RMAX) THEN
        RMAX=YYY
        IMAX=I
        JMAX=J
        IAMAX=IA
        IBMAX=IB
       END IF
 80   CONTINUE
 70   CONTINUE
 60   CONTINUE
 50   CONTINUE
        IROW=INDEXAA(IMAX,IAMAX,IBMAX,JMAX)
        R2AA1=VR(IROW,ICOL)
C---    IROW=INDEXBB(IMAX,IAMAX,IBMAX,JMAX)
C---    R2BB1=VR(IROW,ICOL)
C
       RMAX=0.00D+00
       IMAX=0
       JMAX=0
       IAMAX=0
       IBMAX=0
       DO 52,I=1,NOA
       DO 62,J=I+1,NOB
       DO 72,IA=1,NUA
       DO 82,IB=IA+1,NUB
        IROW=INDEXAB(I,IA,IB,J)
        IF(IROW.EQ.0) GO TO 82
        YYY=ABS(VR(IROW,ICOL))
        IF(YYY.GT.RMAX) THEN
         RMAX=YYY
         IMAX=I
         JMAX=J
         IAMAX=IA
         IBMAX=IB
        END IF
 82    CONTINUE
 72    CONTINUE
 62    CONTINUE
 52    CONTINUE
C
        IROW=INDEXAB(IMAX,IAMAX,IBMAX,JMAX)
        R2AB1=VR(IROW,ICOL)
        IROW=INDEXAB(JMAX,IBMAX,IAMAX,IMAX)
        R2AB2=VR(IROW,ICOL)
        IROW=INDEXAB(JMAX,IAMAX,IBMAX,IMAX)
C---    R2AB3=-VR(IROW,ICOL)
C---    IROW=INDEXAB(IMAX,IBMAX,IAMAX,JMAX)
C---    R2AB4=-VR(IROW,ICOL)
C
        DIFF1=ABS(R2AB1-R2AB2)
        SUM1=ABS(R2AB1+R2AB2)
        SUM2=ABS(R2AB1)+ABS(R2AB2)
C---    DIFF3=ABS(R2AB1-R2AB3)
C---    DIFF4=ABS(ABS(R2AB1)-ABS(R2AB3))
C---    SUM3=ABS(R2AB1+R2AB3)
C---    SUM4=ABS(R2AB1)+ABS(R2AB3)
C---    DIFF5=ABS(2.00D+00*R2AB1-R2AA1)
C---    SUM5=2.00D+00*ABS(R2AB1)+ABS(R2AA1)
        SUM6=ABS(R2AB1+R2AA1)
        SUM7=ABS(R2AB1)+ABS(R2AA1)
C QUINTET CHECK
        IF(DIFF1.LT.TOL.AND.SUM2.GT.TOL) THEN    !G3,G4 SAME SIGN
         IF(SUM6.LT.TOL.AND.SUM7.GT.TOL) THEN   !G3,G1 DIFF SIGN
          ISPIN(ICOL)=5
          GO TO 2
         ELSE
C WITH QUINTET ELIMINATED, EASY TO DISTINGUISH S=0,1 CASES FROM G3,G4
          ISPIN(ICOL)=1
          GO TO 2
         END IF
        ELSE IF(SUM1.LT.TOL.AND.SUM2.GT.TOL) THEN      !G3,G4 OPP SIGN
         ISPIN(ICOL)=3
         GO TO 2
        ELSE IF(SUM6.LT.TOL.AND.SUM7.GT.TOL) THEN
         ISPIN(ICOL)=3
         GO TO 2
        END IF
C      IF(ISPIN(ICOL).EQ.0) PRINT *,'MADE IT ALL THE WAY THROUGH!'
 2    CONTINUE
C
      RETURN
      END

C  2 Sep 12 - MWS - synchronize MCINP
! 20 JUL 12 - LBR - ORMAS SECOND-ORDER MRPT ENERGY CORRECTION 
!
!  SHOULD BE COMPATATABLE WITH ANY GENERAL NA=NB ORMAS-SCF 
!    REFERENCE WAVE FUNCTIONS: SINGLE/MULTI-STATE POSSIBLE
!
C*MODULE ORMPT2  *DECK ORMASPT
      SUBROUTINE ORMASPT

      IMPLICIT DOUBLE PRECISION (A-H,O-Z)

      LOGICAL GOPARR,DSKWRK,MASWRK
      LOGICAL DDITRF,DOOOOO,DOVOOO,DOVVOO,DOVOVO,DOVVVO,DOVVVV,
     *        DOEXCH,DOCORE
      LOGICAL NOS,CLABEL,IVANIC,SOME,MCWTS,MCCAN,MUSTCANON,
     *        CANONC,FCORE,FORS,EKT,LINSER,
     *        ANALYS,SAFLG,FDIRCT,QCORR
      DOUBLE PRECISION METHOD

      PARAMETER (MXATM=2000, MXRT=100, MXAO=8192, MXNORO=250)

      COMMON /DETMRP/ EBAR0(MXRT),EPT0(MXRT),EPT1(MXRT),WPTST(MXRT),
     *                IPTST(MXRT),NPTST,NVAL,NEXT,IFORB,NOS,IVANIC,
     *                EDSHFT
      COMMON /DETPAR/ ICLBBR,ANALYS,SAFLG,IPRTSA
      COMMON /DETWFN/ WSTATE(MXRT),SPINS(MXRT),CRIT,PRTTOL,S,SZ,
     *                GRPDET,STSYMPRINT,GLIST,DWPARM,
     *                NFLGDM(MXRT),IWTS(MXRT),NCORSV,NCOR,NACT,NORB,
     *                NA,NB,K,KST,IROOT,IPURES,MAXW1,NITER,MAXP,NCI,
     *                IGPDET,KSTSYM,NFTGCI,IDWEIGH
      COMMON /FCCWFN/ NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51),
     *                IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51),
     *                LBST(51),NREF0,FDIRCT,QCORR,C0SQ
      COMMON /FMCOM / X(1)
      COMMON /IJPAIR/ IA(MXAO)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,MA,MB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IS,IJKT,IDAF,NAV,IODA(950)
      COMMON /MCINP / METHOD,CISTEP,FINALCI,ACURCY,ENGTOL,DAMP,
     *                MICIT,NWORD,NORBMC,NOROT(2,MXNORO),MOFRZ(15),
     *                NPFLG(10),NOFO,MCFMO,IDIABAT,
     *                CANONC,FCORE,FORS,EKT,LINSER
      COMMON /MRPTIN/ TYPMRMP,INORBMC,MCVEC
      COMMON /OUTPUT/ NPRINT,ITOL,ICUT,NORMF,NORMP,NOPK
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL

      INTEGER         D_OOOO,D_VOOO,D_VVOO,D_VOVO,D_VVVO,D_VVVV,
     *                D_OOOOAB,D_OOOOBB,D_VOOOAB,D_VOOOBA,D_VOOOBB,
     *                D_VVOOAB,D_VVOOBA,D_VVOOBB,D_VOVOAB,D_VOVOBB,
     *                D_U,D_UB,D_E,D_EB
      LOGICAL         NDOOOO,NDVOOO,NDVVOO,NDVOVO,NDVVVO,NDVVVV,NDCORE,
     *                NDVVOOBA,NDVVOOAB,NDVVOOBB,NDVOVOAB,NDVOVOBB,
     *                NDVOOOBA,NDVOOOAB,NDVOOOBB,NDOOOOAB,NDOOOOBB
      COMMON /TRFDMS/ D_OOOO,D_VOOO,D_VVOO,D_VOVO,D_VVVO,D_VVVV,
     *                D_OOOOAB,D_OOOOBB,D_VOOOAB,D_VOOOBA,D_VOOOBB,
     *                D_VVOOAB,D_VVOOBA,D_VVOOBB,D_VOVOAB,D_VOVOBB,
     *                D_U,D_UB,D_E,D_EB,
     *                NDOOOO,NDVOOO,NDVVOO,NDVOVO,NDVVVO,NDVVVV,NDCORE,
     *                NDVVOOBA,NDVVOOAB,NDVVOOBB,NDVOVOAB,NDVOVOBB,
     *                NDVOOOBA,NDVOOOAB,NDVOOOBB,NDOOOOAB,NDOOOOBB
      DIMENSION SAVEWSTATE(MXRT)
      DATA DET/8HDET     /
      DATA  ORMAS/8HORMAS   /
      DATA  DETPT/8HDETPT   /
      DATA CHECK/8HCHECK   /

      IF(INORBMC.EQ.0) THEN
         DO I=1,MXRT
            SAVEWSTATE(I)=WSTATE(I)
         ENDDO
      END IF

      CALL FCINPUT(NPFLG(1),DET,ORMAS)
      CALL DMRINP(NPRINT,DETPT)

      IF(INORBMC.EQ.0) THEN
         DO I=1,MXRT
            WSTATE(I)=SAVEWSTATE(I)
         ENDDO
      END IF

!HACK FOR MCQDPT (SO DEFCCI KNOW WHICH DENSITY MATRICIES TO COMPUTE)
      DO I = 1,MXRT
         IF(WSTATE(I).GT.1.0D-10)NFLGDM(I)=1
      ENDDO
!
      IPRTSA=0
      SOME = MASWRK  .AND.  NPRINT.NE.-5
!
      L0 = NQMT
      L1 = NUM
      L2 = (L1*L1+L1)/2
      L3 =  L1*L1
!
!  IF USING NATURAL ORBITALS FOR PT THEN WE MUST EXCHANGE THESE WITH
!  CANONICAL MOS
      IF (NOS) THEN
         L1 = NUM
         L3 = L1*L1
         CALL VALFM(LOADFM)
         LNOS = LOADFM + 1
         LMOS = LNOS   + L3
         LAST = LMOS   + L3
         NEED = LAST - LOADFM - 1
         CALL GETFM(NEED)
         CALL DAREAD(IDAF,IODA,X(LMOS),L3,15,0)
         CALL DAREAD(IDAF,IODA,X(LNOS),L3,19,0)
         CALL DAWRIT(IDAF,IODA,X(LMOS),L3,19,0)
         CALL DAWRIT(IDAF,IODA,X(LNOS),L3,15,0)
         CALL RETFM(NEED)
      ENDIF
!
! ----- PRINT OUT SYMMETRIES OF ALL ORBITALS -----
      CALL VALFM(LOADFM)
      LMOLAB = LOADFM + 1
      LMOIRP = LMOLAB + L1
      LVEC   = LMOIRP + L1
      LS     = LVEC   + L3
      LQ     = LS     + L2
      LWRK   = LQ     + L3
      LMODEG = LWRK   + L1
      LAST   = LMODEG + L1
      NEED   = LAST - LOADFM - 1
      CALL GETFM(NEED)
!
! GET ORBITALS, OVERLAP, Q-MATRIX
      CALL DAREAD(IDAF,IODA,X(LVEC),L3,15,0)
      CALL DAREAD(IDAF,IODA,X(LS),L2,12,0)
      CALL DAREAD(IDAF,IODA,X(LQ),L3,45,0)
      CALL TRFSYM(X(LMOLAB),X(LMOIRP),X(LMODEG),X(LQ),X(LS),X(LVEC),
     *     X(LWRK),IA,L0,L1,L0,L1)
!
      IF (SOME) THEN
         WRITE(IW,9000) NCOR-NVAL,NVAL,NACT,NEXT
         CALL MOSYPR2(X(LMOLAB),NCOR-NVAL,NVAL,NACT,NEXT)
      ENDIF
!
      CALL RETFM(NEED)
!
      IF(EXETYP.EQ.CHECK) GOTO 8000
!
! ----- INTEGRAL TRANSFORMATION FOR FCI IN NACT ORBITALS -----
! CORE ORBITAL COUNT GETS CHANGED SOMEWHERE, PROBABLY IN THE CI,
! SO BE SURE TO SAVE A COPY OF THE ORBITAL SPACES INVOLVED HERE.
      IF (MASWRK) WRITE(IW,9010)
      DDITRF=GOPARR
      DOOOOO=.TRUE.
      DOVOOO=.FALSE.
      DOVVOO=.FALSE.
      DOVOVO=.FALSE.
      DOVVVO=.FALSE.
      DOVVVV=.FALSE.
      DOCORE=.TRUE.
      DOEXCH = INORBMC.EQ.1
      NPRTTF = 0
      IF(NPRINT.EQ.-5) NPRTTF=-5
      NCORTF = NCOR
      NORBTF = NORB
      IF(SOME) WRITE(IW,9015)
      CALL TRFMCX(NPRTTF,NCORTF,NORBTF,NORBTF,.FALSE.,DOEXCH,
     *     DDITRF,DOOOOO,DOVOOO,DOVVOO,DOVOVO,
     *     DOVVVO,DOVVVV,DOCORE)
!
! ORMAS-CI CALCULATION WITHIN NACT ORBITALS
! MAKE SURE ANY CI VECTOR FILE FROM BEFORE MCSCF ORBITAL
! CANONICALIZATION WILL NOT BE USED AS A STARTING GUESS.
! CANONICALIZATION MAY HAVE MADE A HUGE ROTATION IN THE
! ACTIVE SPACE, SO IT IS SAFER TO START OFF CLEAN HERE.
!    ALSO: GENERATE THE 1ST ORDER DENSITIES FOR FOCK ENERGIES,
!          THIS IS DONE WITH DEFCCI (THANKS JOE)
      IF(MASWRK) CALL ERASCI
      CLABEL = .FALSE.
      IF (GOPARR) CLABEL = .TRUE.
      CALL DEFCCI(NPRINT,CLABEL,DDITRF,1,0,1,0)
!
! ----- SET UP WHICH STATES TO INCLUDE IN THE MRPT
! DEFAULT SETUP FOR NPTST AND IPTST 
! USE MCSCF NON-ZERO STATE WEIGHTS TO DECIDE WHICH STATES TO INCLUDE.
! WE ASSUME HERE THAT PURES=.TRUE. FOR WSTATE, THAT IS, WSTATE ONLY
! APPLIES TO STATES WITH S = MS AND ALL K CI VECTORS ARE ON DISK.
      IF (NPTST.EQ.0) THEN                                
         ICURST = 0                                       
         DO 977 II=1,K                                    
            IF (ABS(SPINS(II)-S).GT.0.03D+00) GOTO 977    
            ICURST = ICURST + 1                           
            IF (WSTATE(ICURST).GT.1.0D-06) THEN           
               NPTST = NPTST + 1                          
               IPTST(NPTST) = II                          
               WPTST(NPTST) = WSTATE(ICURST)              
            ENDIF                                         
 977     CONTINUE                                         
         MCWTS=.TRUE.                                     
      ELSE                                                
         MCWTS=.FALSE.                                    
      END IF                                              
!
! PULL THE PLUG IF THERE ARE NO STATES TO PERTURB                                     
      IF(NPTST.EQ.0) THEN
         IF(MASWRK) WRITE(IW,9005)
         CALL ABRT
      END IF
!
! FORM STATE AVERAGED 1E- DENSITY
      CALL RESHAP(NPTST,WPTST)
!
!     POSSIBLE ORBITAL CANONICALIZATION, OR AT LEAST FOCK ENERGIES
! CANONC: TELL IF CANONICALIZATION WAS DONE BY MCSCF (CAN TURN OFF IN INPUT)
! INORBMC: IF .EQ.1, READING IN CONVERGED VECTORS (SKIPPING MCSCF)
! IFORB: .EQ.1 BY DEFAULT (NOS=2)(.NOT.CANON = 0 -MUST BE REQUESTED IN INPUT)
! MCCAN: FROM COMPOSITE BELOW
! MCWTS: TRUE IF WE ARE USING THE SAME WEIGHTS FOR MRPT AS MCSCF
      MCCAN = CANONC  .AND.  INORBMC.EQ.0
      MUSTCANON = IFORB.EQ.1  .AND.  .NOT.(MCCAN  .AND.  MCWTS)
!
! CANONICALIZATION IN CORE,ACTIVE,EXTERNAL SPACE SHOULD HAVE
! BEEN DONE BY THE MCSCF PROGRAM IF THE INPUT PERMITTED IT,
! AND IF WE ARE NOT USING -RDVECS- AT SOME INITIAL GEOMETRY.
! USE OF DIFFERENT STATE WEIGHTS MEANS THE MCSCF CANONICALIZATION
! CANNOT BE ACCEPTED.
      CALL FOCKE(SOME,MUSTCANON)
      IF(MASWRK) WRITE(IW,9020)
      CALL TIMIT(0)
!
! IF THERE WAS A NEW ORBITAL CANONICALIZATION, WE MUST TRANSFORM
! OVER THE NEW ORBITALS, REGENERATE THE CI REFERENCE STATES,
! AND REGENERATE THE STATE-AVERAGED ONE ELECTRON DENSITY MATRIX.
      IF(MUSTCANON) THEN
         IF(MASWRK) WRITE(IW,9040)
         IF(SOME) WRITE(IW,9015)
         IF (GOPARR  .AND.  EXETYP.NE.CHECK) CALL DDI_DESTROY(D_OOOO)
         CALL TRFMCX(NPRTTF,NCORTF,NORBTF,NORBTF,.FALSE.,.FALSE.,
     *               DDITRF,DOOOOO,DOVOOO,DOVVOO,DOVOVO,
     *               DOVVVO,DOVVVV,DOCORE)
         CALL ERASCI
         CALL DEFCCI(1,CLABEL,DDITRF,1,0,1,0)
         CALL RESHAP(NPTST,WPTST)
         IF(MASWRK) WRITE(IW,9050)
         CALL TIMIT(1)
      END IF
!
!     ----- NOW WE ARE READY TO DO THE PERTURBATION THEORY -----
      IF (NPTST.EQ.1) THEN
         IF (MASWRK) WRITE(IW,9060) IPTST(1)
      ELSE
         IF (MASWRK) WRITE(IW,9070)
         IF (MASWRK) WRITE(IW,9080) (IPTST(I),WPTST(I),I=1,NPTST)
      ENDIF
!
!     ----- INTEGRAL TRANSFORMATION FOR PT PART -----
      IF (GOPARR  .AND.  EXETYP.NE.CHECK) CALL DDI_DESTROY(D_OOOO)
      IF(SOME) WRITE(IW,9090)
      NC = NCORSV-NVAL
      NO = NCORSV+NACT
      NT = NCORSV+NACT+NEXT
      DDITRF=GOPARR
      DOOOOO=.TRUE.
      DOVOOO=.TRUE.
      DOVVOO=.TRUE.
      DOVOVO=.TRUE.
      CALL TRFMCX(NPRTTF,NC,NO,NT,.FALSE.,.FALSE.,
     *            DDITRF,DOOOOO,DOVOOO,DOVVOO,DOVOVO,
     *            DOVVVO,DOVVVV,DOCORE)

 8000 CONTINUE !EXETYP.EQ.CHECK

! DETERMINE 0TH AND 1ST ORDER ENERGIES    
      CALL DPT0TH(SOME,NCORSV,NACT)

! NEED TO OFFSET MSTA FOR PT STEP 
      DO I=1,NSPACE+1
         MSTA(I)=MSTA(I)-NCORSV
      ENDDO

! DIRECT ORMAS-PT CALCULATION
      CALL ORMASPT_DET(NPRINT,DDITRF)

! WE ARE DONE
      RETURN
      
 9000 FORMAT(/1X,'SYMMETRIES FOR THE',I4,' CORE,',I4,' VALENCE,',
     *      I4,' ACTIVE,',I4,' EXTERNAL ARE')
 9005  FORMAT(/1X,'NO STATES OF DESIRED SPIN WERE FOUND')
 9010 FORMAT(/5X,41(1H=)/
     *        5X,'EXECUTING INITIAL CI FOR REFERENCE STATES'/
     *        5X,41(1H=))
 9015 FORMAT(/1X,'TRANSFORMING INTEGRALS (OVER THE ACTIVE SPACE ONLY)',
     *          ' FOR THE CI...')
 9020 FORMAT(1X,'.... DONE CANONICALIZING MOLECULAR ORBITALS ....')
 9040 FORMAT(/5X,64(1H=)/
     *        5X,'EXECUTING CI FOR REFERENCE STATES IN THE CANONICAL',
     *           ' ORBITAL BASIS'/
     *        5X,64(1H=))
 9050 FORMAT(1X,'.... DONE REGENERATING REFERENCE STATE(S) ....')
 9060 FORMAT(/5X,31(1H=)/
     *        5X,'EXECUTING SINGLE STATE DET-MRPT'/
     *        5X,31(1H=)/
     *        5X,'DETERMINING PT CORRECTION FOR CI STATE',I5)
 9070 FORMAT(/5X,29(1H=)/
     *        5X,'EXECUTING MULTISTATE DET-MRPT'/
     *        5X,29(1H=),5X/
     *        5X,'DETERMINING PT CORRECTION FOR CI STATES/WEIGHTS:')
 9080 FORMAT(5X,5(I5,'=',F7.4))
 9090 FORMAT(/1X,'TRANSFORMING INTEGRALS OVER ALL ORBITALS (EXCEPT',
     *          ' FROZEN CORE) FOR THE PT...')

      END SUBROUTINE ORMASPT
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_DET
      SUBROUTINE ORMASPT_DET(NPRINT,DDITRF)

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)

      LOGICAL SOME,PACK2E,GOPARR,DSKWRK,MASWRK,JACOBI,
     *        DDITRF,NOS,IVANIC,QCORR,FDIRCT

      PARAMETER (MXRT=100)

      COMMON /DETMRP/ EBAR0(MXRT),EPT0(MXRT),EPT1(MXRT),WPTST(MXRT),
     *                IPTST(MXRT),NPTST,NVAL,NEXT,IFORB,NOS,IVANIC,
     *                EDSHFT
      COMMON /DETWFN/ WSTATE(MXRT),SPINS(MXRT),CRIT,PRTTOL,S,SZ,
     *                GRPDET,STSYMPRINT,GLIST,DWPARM,
     *                NFLGDM(MXRT),IWTS(MXRT),NCORSV,NCOR,NACT,NORB,
     *                NA,NB,K,KST,IROOT,IPURES,MAXW1,NITER,MAXP,NCI,
     *                IGPDET,KSTSYM,NFTGCI,IDWEIGH
      COMMON /FCCWFN/ NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51),
     *                IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51),
     *                LBST(51),NREF0,FDIRCT,QCORR,C0SQ
      COMMON /ENRGMP/ EMP2,EMP3,EMP4,EMP2A
      COMMON /ENRGYS/ ENUCR,EELCT,ETOT,STOT,SSQUAR,ECORE,ESCF,EERD,
     *                E1,E2,VEN,VEE,EPOT,EKIN,ESTATE(MXRT),STATN,
     *                EDFT(2),EDISP
      COMMON /FMCOM / X(1)
      COMMON /INTFIL/ NINTMX,NHEX,NTUPL,PACK2E,INTTYP,IGRDTYP
      COMMON /IOFILE/ IR,IW,IP,IS,IJKT,IDAF,NAV,IODA(950)
      COMMON /JACOBI/ JACOBI,NJAOR,ELAST,ISTAT
      COMMON /MACHIN/ NWDVAR,MAXFM,MAXSM,LIMFM,LIMSM
      COMMON /ORDOPT/ IDUM(6),NOSQUR
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /RUNOPT/ RUNTYP,EXETYP,NEVALS,NGLEVL,NHLEVL

      INTEGER         D_OOOO,D_VOOO,D_VVOO,D_VOVO,D_VVVO,D_VVVV,
     *                D_OOOOAB,D_OOOOBB,D_VOOOAB,D_VOOOBA,D_VOOOBB,
     *                D_VVOOAB,D_VVOOBA,D_VVOOBB,D_VOVOAB,D_VOVOBB,
     *                D_U,D_UB,D_E,D_EB
      LOGICAL         NDOOOO,NDVOOO,NDVVOO,NDVOVO,NDVVVO,NDVVVV,NDCORE,
     *                NDVVOOBA,NDVVOOAB,NDVVOOBB,NDVOVOAB,NDVOVOBB,
     *                NDVOOOBA,NDVOOOAB,NDVOOOBB,NDOOOOAB,NDOOOOBB
      COMMON /TRFDMS/ D_OOOO,D_VOOO,D_VVOO,D_VOVO,D_VVVO,D_VVVV,
     *                D_OOOOAB,D_OOOOBB,D_VOOOAB,D_VOOOBA,D_VOOOBB,
     *                D_VVOOAB,D_VVOOBA,D_VVOOBB,D_VOVOAB,D_VOVOBB,
     *                D_U,D_UB,D_E,D_EB,
     *                NDOOOO,NDVOOO,NDVVOO,NDVOVO,NDVVVO,NDVVVV,NDCORE,
     *                NDVVOOBA,NDVVOOAB,NDVVOOBB,NDVOVOAB,NDVOVOBB,
     *                NDVOOOBA,NDVOOOAB,NDVOOOBB,NDOOOOAB,NDOOOOBB

      PARAMETER (ZERO=0.0D+00)

      DATA CHECK/8HCHECK   /
      
! ----- DRIVER FOR ORMAS+PT2 DETERMINANTAL COMPUTATION -----
      SOME = MASWRK  .AND.  NPRINT.NE.-5
      
! CORE CONTRIBUTION TO THE CAS ENERGY IS OBTAINED FROM -ECORE-,
! AND FROM MODIFICATIONS TO THE TRANSFORMED 1E- INTEGRALS.
! THIS EFFECTIVELY REMOVES CORE ORBS FROM THE CAS COMPUTATION.
      NTOT = NCORSV + NACT + NEXT
      NTCO = NCORSV
      NORB = NACT
      NCOR = 0
      NCORPT = NCORSV - NVAL
      NTOTPT = NVAL + NACT + NEXT
      NSYM = 2**IGPDET

! COMPUTE THE TOTAL NUMBER OF DETERMINANTS IN THE REFERENCE FULL CI.
! DECIDE NECESSARY DOUBLE/INTEGER WORKING STORAGE -IDS- AND -IIS-
      CALL VALFM(LOADFM)
      LBST(1)  = LOADFM + 1
      DO II=2,NSPACE
         IDIM(II-1) = MAX(IAMA(II-1),IBMA(II-1))
         LBST(II) = LBST(II-1)+((MNUM(II-1)+1)*(IDIM(II-1)+1))
      ENDDO
      IDIM(NSPACE) = MAX(IAMA(NSPACE),IBMA(NSPACE))
      LAST = LBST(NSPACE)+((MNUM(NSPACE)+1)*(IDIM(NSPACE)+1))
      NEED1 = LAST - LOADFM - 1
      CALL GETFM(NEED1)

      DO II=1,NSPACE
         CALL BINOM8(X(LBST(II)),MNUM(II),IDIM(II))
      ENDDO

! NOW TO MAKE TABLES FOR THE ORMAS PROBLEM.
! MAKE MEMORY AVAILABLE FOR TABLE INFO AND
! TABLES THEMSELVES.
      CALL VALFM(LOADFM)
      LBOX1 = LOADFM + 1
      LBOX2 = LBOX1 + NSPACE/NWDVAR + 1
      LBOX3 = LBOX2 + NSPACE/NWDVAR + 1
      LIBO  = LBOX3 + NSPACE/NWDVAR + 1
      LAST  = LIBO + NTOT/NWDVAR + 1
      NEED2 = LAST - LOADFM - 1
      CALL GETFM(NEED2)

! READ ORBITALS LABELS AND GET RID OF THE CORE PART.
      CALL DAREAD(IDAF,IODA,X(LIBO),NTOT,262,1)
      CALL CORTRA(X(LIBO),NTOT,NTCO)

! WORK OUT HOW MANY ALPHA AND BETA GROUPS THERE ARE.
      CALL TOTALCO(X(LBOX1),NSPACE,NA,IAMA,IAMI,X(LBOX2),ITGA)
      CALL TOTALCO(X(LBOX1),NSPACE,NB,IBMA,IBMI,X(LBOX2),ITGB)

! DETERMINE THE TOTAL NUMBER OF ALPHA AND BETA STRINGS.
      CALL RESETCO(X(LBOX1),NSPACE,NA,IAMA,IAMI,X(LBOX2))
      IAST = 0
      DO II=1,ITGA
      CALL TOTDETG(X(LBOX1),NSPACE,LBST,X(LBST(1)),NEED1,
     *    MNUM,IDIM,ITOT)
      IAST = IAST + ITOT
      CALL PUSHCO(X(LBOX1),NSPACE,NA,IAMA,IAMI,X(LBOX2),IEND)
      ENDDO

      CALL RESETCO(X(LBOX1),NSPACE,NB,IBMA,IBMI,X(LBOX2))
      IBST = 0
      DO II=1,ITGB
      CALL TOTDETG(X(LBOX1),NSPACE,LBST,X(LBST(1)),NEED1,
     *    MNUM,IDIM,ITOT)
      IBST = IBST + ITOT
      CALL PUSHCO(X(LBOX1),NSPACE,NB,IBMA,IBMI,X(LBOX2),IEND)
      ENDDO

! MAKE STORAGE TO HOLD SYMMETRY INFORMATION OF STRINGS.
! THE LABELS BELOW APPEAR THE SAME IN ROUTINE MAKTABS
! AND THIS ROUTINE ALSO EXPLAINS WHAT THEY ARE USED FOR.
      CALL VALFM(LOADFM)
      LWRK   = LOADFM + 1
      LCOA   = LWRK   + 43/NWDVAR +1
      LCOB   = LCOA   + (NSYM*ITGA)/NWDVAR +1
      LGMUL  = LCOB   + (NSYM*ITGB)/NWDVAR +1
      LKTAB  = LGMUL  + (NSYM*NSYM)/NWDVAR +1
      LCON   = LKTAB  + NSYM/NWDVAR +1
      LCON1  = LCON   + NA/NWDVAR +2
      LCON2  = LCON1  + NA/NWDVAR +2
      LCON3  = LCON2  + NA/NWDVAR +2
      LANDET = LCON3  + NA/NWDVAR +2
      LBNDET = LANDET + (ITGA*NSPACE)/NWDVAR +1
      NAST   = LBNDET + (ITGB*NSPACE)/NWDVAR +1
      NBST   = NAST   + (ITGA+1)/NWDVAR +1
      LSYMA  = NBST   + (ITGB+1)/NWDVAR +1
      LSYMB  = LSYMA  + IAST/NWDVAR +1
      LGCOM  = LSYMB  + IBST/NWDVAR +1
      LSPA   = LGCOM  + (ITGA*ITGB)/NWDVAR +1
      LSPB   = LSPA   + IAST/NWDVAR +1
      LDISB  = LSPB   + IBST/NWDVAR +1
      IPTAMA = LDISB  + (NSYM*ITGB*ITGA)/NWDVAR +1 
      IPTAMI = IPTAMA + NSPACE/NWDVAR +1
      IPTBMA = IPTAMI + NSPACE/NWDVAR +1
      IPTBMI = IPTBMA + NSPACE/NWDVAR +1
      IMXMAP = IPTBMI + NSPACE/NWDVAR +1
      IMIMAP = IMXMAP + NSPACE/NWDVAR +1
      IBELAC = IMIMAP + NSPACE/NWDVAR +1
      IBELAC2= IBELAC + NSPACE/NWDVAR +2
      IAELAC = IBELAC2+ NSPACE/NWDVAR +2
      IAELAC2= IAELAC + NSPACE/NWDVAR +2
      ISPA_0 = IAELAC2+ NSPACE/NWDVAR +2

      LAST   = ISPA_0 + NSPACE/NWDVAR + 1
      NEED3 = LAST - LOADFM - 1

      CALL GETFM(NEED3)

      IF (SOME) CALL TSECND(E0)

! MAKE INTEGER TABLES FOR ORMAS. GET NUMBER OF DETS, ETC.
!     THIS IS A TRUNCATED VERSION OF SUBROUTINE MAKTABS
       CALL ORMASPT_TABLES(IW,X(LBOX1),X(LBOX2),X(LBOX3),NSPACE,
     $             NA,NB,LBST,X(LBST(1)),NEED1,
     $             IAMA,IAMI,IBMA,IBMI,MNUM,IDIM,MSTA,
     $             X(LIBO),IGPDET,KSTSYM,NSYM,
     $             NACT,X(LWRK),X(LKTAB),X(LGMUL),
     $             X(LCON),X(LCOA),X(LCOB),X(LANDET),X(LBNDET),
     $             X(NAST),X(NBST),X(LSYMA),X(LSYMB),X(LGCOM),
     $             MINI,MAXI,X(LSPA),X(LSPB),X(LDISB),
     $             ITGA,ITGB,IAST,IBST,NCI)

! GET NUMBER OF GROUPS FOR EVE TERMS
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB,ITGA_EVE,
     $     ITGB_EVE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,1,1)

      ITGA_PT_MEM = ITGA_EVE
      ITGB_PT_MEM = ITGB_EVE
      ITGA_T_ITGB = ITGA_EVE*ITGB_EVE

!EAAEE
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB-2,ITGA_EAAEE,
     $     ITGB_EAAEE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,2,0)

      IF(ITGA_EAAEE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EAAEE
      IF(ITGB_EAAEE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EAAEE
      IF((ITGA_EAAEE*ITGB_EAAEE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EAAEE*ITGB_EAAEE

!EVAEE
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB-1,ITGA_EVAEE,
     $     ITGB_EVAEE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,1,0)

      IF(ITGA_EVAEE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVAEE
      IF(ITGB_EVAEE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVAEE
      IF((ITGA_EVAEE*ITGB_EVAEE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVAEE*ITGB_EVAEE

!EVVAE
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB+1,ITGA_EVVAE,
     $     ITGB_EVVAE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,0,1)

      IF(ITGA_EVVAE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVVAE
      IF(ITGB_EVVAE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVVAE
      IF((ITGA_EVVAE*ITGB_EVVAE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVVAE*ITGB_EVVAE

!EVVAA
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB+2,ITGA_EVVAA,
     $     ITGB_EVVAA,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,0,2)

      IF(ITGA_EVVAA.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVVAA
      IF(ITGB_EVVAA.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVVAA
      IF((ITGA_EVVAA*ITGB_EVVAA).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVVAA*ITGB_EVVAA

!EAE
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB-1,ITGA_EAE,
     $     ITGB_EAE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,2,1)

      IF(ITGA_EAE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EAE
      IF(ITGB_EAE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EAE
      IF((ITGA_EAE*ITGB_EAE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EAE*ITGB_EAE

!EVA
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB+1,ITGA_EVA,
     $     ITGB_EVA,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     NA,NA,1,2)

      IF(ITGA_EVA.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVA
      IF(ITGB_EVA.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVA
      IF((ITGA_EVA*ITGB_EVA).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVA*ITGB_EVA

!EVVAA_2
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA+1,NB+1,
     $     ITGA_EVVAA_2,
     $     ITGB_EVVAA_2,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),
     $     X(LBOX3),NA,NA,0,1)

      IF(ITGA_EVVAA_2.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVVAA_2
      IF(ITGB_EVVAA_2.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVVAA_2
      IF((ITGA_EVVAA_2*ITGB_EVVAA_2).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVVAA_2*ITGB_EVVAA_2

!EVAAE
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA+1,NB-1,
     $     ITGA_EVAAE,
     $     ITGB_EVAAE,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),
     $     X(LBOX3),NA,NA,1,0)

      IF(ITGA_EVAAE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EVAAE
      IF(ITGB_EVAAE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EVAAE
      IF((ITGA_EVAAE*ITGB_EVAAE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EVAAE*ITGB_EVAAE

!EAAEE_2
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA-1,NB-1,
     $     ITGA_EAAEE_2,
     $     ITGB_EAAEE_2,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),
     $     X(LBOX3),NA,NA,1,0)

      IF(ITGA_EAAEE.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_EAAEE
      IF(ITGB_EAAEE.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_EAAEE
      IF((ITGA_EAAEE*ITGB_EAAEE).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_EAAEE*ITGB_EAAEE

!FOR INTERNAL EXCITATIONS
      CALL ORMASPT_ACTIVE_MEMORY(X(IPTAMA),X(IPTAMI),X(IPTBMA),
     $      X(IPTBMI),X(LBOX3),X(LBOX1),X(LBOX2),NA,NB,ITGAPT,ITGBPT)

!INTERNAL
      CALL ORMASPT_CLASS_MEMORY(X(LBOX1),X(LBOX2),NA,NB,ITGA_INT,
     $     ITGB_INT,X(IPTAMA),X(IPTBMA),X(IPTBMI),X(IPTAMI),X(LBOX3),
     $     2,2,2,2)

      IF(ITGA_INT.GT.ITGA_PT_MEM)ITGA_PT_MEM = ITGA_INT
      IF(ITGB_INT.GT.ITGB_PT_MEM)ITGB_PT_MEM = ITGB_INT
      IF((ITGA_INT*ITGB_INT).GT.ITGA_T_ITGB)
     $     ITGA_T_ITGB = ITGA_INT*ITGB_INT

! GET MEMORY FOR INDEXING EXCITED GROUPS
      CALL VALFM(LOADFM)
      NPTAST =LOADFM +1
      NPTBST = NPTAST + ITGAPT/NWDVAR + 1
      LGCOM_PT = NPTBST + ITGBPT/NWDVAR +1
      NAST_PT  = LGCOM_PT + ITGA_T_ITGB/NWDVAR +1
      NBST_PT  = NAST_PT + ITGA_PT_MEM/NWDVAR +1
      IAMI_PT = NBST_PT + ITGB_PT_MEM/NWDVAR +1
      IAMA_PT = IAMI_PT + NSPACE/NWDVAR +1
      IBMI_PT = IAMA_PT + NSPACE/NWDVAR +1
      IBMA_PT = IBMI_PT + NSPACE/NWDVAR +1
      LAST = IBMA_PT + NSPACE/NWDVAR +1
      NEED4 = LAST - LOADFM -1
      CALL GETFM(NEED4)

      CALL VALFM(LOADFM)
      LIFA  = LOADFM + 1
      LAST  = LIFA   + ((NACT+1)*(NACT+1))/NWDVAR + 1
      NEED5 = LAST - LOADFM - 1
      CALL GETFM(NEED5)

      CALL BINOM6(X(LIFA),NACT)

! ALLOCATE MEMORY FOR PT STEP

      MP1 = NACT + NVAL
      MP2 = (MP1*(MP1+1))/2
      MP4 = (MP2*(MP2+1))/2

      L1  = NVAL + NACT + NEXT
      L2  = (L1*(L1+1))/2

      NVO    = MP1*NEXT
      NVOOO  = MP2*NVO
      NVOVO  = (NVO*(NVO+1))/2

      NIA    = MAX(NVO,MP2)

      IVAR1  = NVAL*NVAL*NEXT
      IVAR2  = NVAL*NEXT*NEXT
      NTMPSZ = MAX(IVAR1,IVAR2)
      IF (NVAL.EQ.0) NTMPSZ=NEXT*NEXT
      IF (NEXT.EQ.0) NTMPSZ=NVAL*NVAL

! INTEGRAL BUFFERS FOR DISTRIBUTED/DISK FILE TRANSFORMED INTS

      IF(DDITRF) THEN
        NOCC   = NTOT
        NOTR   = (NOCC*NOCC+NOCC)/2
        NVTR   = NEXT*NEXT
        LENXX  = MAX(NOTR,NVTR)
        LENIXX = 0
      ELSE
        LENXX  = NINTMX
        LENIXX = NINTMX
      END IF

      CALL VALFM(LOADFM)

! INTEGRAL STORAGE ARRAYS
      LSINT1 = LOADFM + 1 
      LSINT2 = LSINT1 + L2
      LSVOOO = LSINT2 + MP4
      LSVOVO = LSVOOO + NVOOO
      LIA    = LSVOVO + NVOVO
      LXX    = LIA    + NIA
      LIXX   = LXX    + LENXX
      
! REAL*8  ARRAYS
      LEL   = LIXX  + LENIXX
      IBO   = LEL   + MAXW1
      LEFCK = IBO   + NTOT
      LINPT = LEFCK + NTOT
      LTMP1 = LINPT + L2
      LTMP2 = LTMP1 + NTMPSZ*NPTST
      LTMP3 = LTMP2 + NTMPSZ*NPTST
      LTMP4 = LTMP3 + NTMPSZ*NPTST
      KCOEF = LTMP4 + NTMPSZ*NPTST
      KB    = KCOEF + NCI*NPTST
      KEF   = KB    + 8*MAXW1
      KF    = KEF   + MAXW1*MAXW1
      KEC   = KF    + (MAXW1*(MAXW1+1))/2      

! ADDITIONAL ORMAS-PT2 INTEGER ARRAYS
      LIWRK2 = KEC    + MAXP*MAXP
      LAST   = LIWRK2 + MAXW1/NWDVAR

      NEED6  = LAST - LOADFM - 1
      NEEDCI = NEED5 + NEED6
      IF(SOME) WRITE(IW,9130) NEEDCI
      CALL GETFM(NEED6)

      IF(EXETYP.EQ.CHECK) THEN
         IF(MASWRK) WRITE(IW,*) 'CHECK RUN SETS E(MP2)=0.0'
         DO IST=1,MIN(K,MXRT)
            SPINS(IST) = S
            ESTATE(IST) = ZERO
         ENDDO
         EMP2 = ZERO         
         GO TO 400
      END IF

! READ SYMMETRIES FOR ACTIVE ORBITALS, THESE ARE USED TO GENERATE
! REFERENCE DETERMINANTAL SYMMETRY DATA IN DETMRPT
      CALL DAREAD(IDAF,IODA,X(IBO),NTOT,262,1)
      CALL CORTRA(X(IBO),NTOT,NCORSV)

! NOW TO READ THE DIAGONAL ELEMENTS OF THE FOCK MATRIX FROM 284
! INDEXING IN THIS ROUTINE WANTS TO SKIP CORE SPACE, BUT THESE
! EIGENVALUES ARE ALSO IN THE DISK RECORD.  SO PUSH THE POINTER.
      CALL DAREAD(IDAF,IODA,X(LEFCK),NTOT,284,0)
      LEFCK = LEFCK + NCORPT

! READ 1-E INTEGRALS FROM DISK
      CALL SEQREW(IJKT)
      CALL SQREAD(IJKT,X(LSINT1),L2)

      IF (.NOT.GOPARR) THEN

! SERIAL CODE, GET 2-E INTEGRALS FROM DISK

! READ PT OOOO INTEGRALS FOR NVAL+NACT NUMBER OF ORBITALS
      CALL M1EGHR(IJKT,X(LSINT2),X(LXX),X(LIXX),X(LIA),NINTMX,
     *            MP1,NOSQUR)

! READ PT VOOO INTEGRALS FOR O=NVAL+NACT, V=NEXT
      CALL SEQREW(IJKT)
      READ(IJKT)
      CALL M1LGRR(IJKT,X(LSVOOO),X(LXX),X(LIXX),X(LIA),NINTMX,
     *            MP1,NEXT,MP2,NOSQUR)

! READ PT VOVO INTEGRALS FOR O=NVAL+NACT, V=NEXT
      CALL SEQREW(IJKT)
      READ(IJKT)
      CALL M1EXCR(IJKT,X(LSVOVO),X(LXX),X(LIXX),X(LIA),NINTMX,
     *            MP1,NVO,NOSQUR)

      ELSE

! PARALLEL CODE, GET 2-E INTEGRALS FROM GLOBAL ARRAY
         
! READ PT OOOO FOR O=NVAL+NACT
      CALL RDOOOO(X(LSINT2),NCORPT,MP1,MP4,X(LXX))

! READ PT VOOO FOR O=NVAL+NACT, V=VIR
      CALL RDVOOO(X(LSVOOO),NCORPT,MP1,NEXT,X(LXX))

! READ PV VOVO FOR O=NVAL+NACT, V=VIR
      CALL RDVOVO(X(LSVOVO),NCORPT,MP1,NEXT,X(LXX))

      IF (MASWRK) WRITE(IW,*) 'PARALLEL EXECUTION IN PROGRESS'

      ENDIF

! ----- COMPUTE ORMAS+PT2 WAVEFUNCTION(S) -----
      NACT = NORB - NCOR

 400  CONTINUE
      CALL ORMASPT_DAVIDSON(SOME,X(LSINT1),X(LSINT2),NACT,0,NCI,NA,NB,
     $     X(KCOEF),X(LEL),MAXP,MAXW1,X(KB),X(KEF),X(KF),X(LIWRK2),
     $     X(KEC),X(LCON),X(LCON1),X(LCON2),X(LCON3),X(LIFA),X(LSYMA),
     $     X(LSYMB),X(LKTAB),X(LGMUL),X(LSPA),X(LSPB),NSYM,X(IBO),IAST,
     $     IBST,ISTAT,X(LSVOOO),X(LSVOVO),X(LEFCK),EPT0,NCORPT,NVAL,
     $     NEXT,NTOTPT,X(LINPT),X(LTMP1),X(LTMP2),X(LTMP3),X(LTMP4),
     $     NTMPSZ,NPTST,IPTST,X(LGCOM),ITGA,ITGB,X(LANDET),X(LBNDET),
     $     X(NAST),X(NBST),X(LDISB),X(LBST(1)),NEED1,X(LBOX1),X(LBOX2),
     $     X(LBOX3),
     $     X(IMXMAP),X(IMIMAP),X(IBELAC),X(IBELAC2),X(IAELAC),
     $     X(IAELAC2),X(ISPA_0),ITGB_EVE,ITGB_EAAEE,ITGB_EVAEE,
     $     ITGB_EVVAE,ITGB_EVVAA,ITGB_EAE,ITGB_EVA,ITGB_EVVAA_2,
     $     ITGB_EVAAE,ITGB_EAAEE_2,X(LGCOM_PT),X(NAST_PT),X(NBST_PT),
     $     X(IAMI_PT),X(IAMA_PT),X(IBMI_PT),X(IBMA_PT),ITGB_INT)


!  400 CONTINUE

      CALL RETFM(NEED6)
      CALL RETFM(NEED5)
      CALL RETFM(NEED4)
      CALL RETFM(NEED3)
      CALL RETFM(NEED2)
      CALL RETFM(NEED1)

! DESTROY GLOBAL ARRAYS

      IF (GOPARR  .AND.  EXETYP.NE.CHECK) THEN
         CALL DDI_DESTROY(D_VVOO)
         CALL DDI_DESTROY(D_OOOO)
         CALL DDI_DESTROY(D_VOOO)
         CALL DDI_DESTROY(D_VOVO)
      ENDIF

      RETURN

 9130 FORMAT(/1X,'THE DETERMINANT MRPT REQUIRES',I12,' WORDS')
      END SUBROUTINE ORMASPT_DET
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_DAVIDSON
      SUBROUTINE ORMASPT_DAVIDSON(SOME,SI1,SI2,NORB,NCOR,NCI,NA,NB,
     $     CI,EL,MAXP,MAXW1,B,EF,F,IWRK2,EC,IACON1,IBCON1,
     $     IACON2,IBCON2,IFA,ISYMA,ISYMB,ITAB,IMUL,ISPA,ISPB,
     $     NSYM,IOB,NALP,NBLP,ISTAT,SVOOO,SVOVO,EFCK,EPT0,
     $     NCORPT,NVAL,NEXT,NTOTPT,INPT,TMP1,TMP2,TMP3,TMP4,
     $     NTMPSZ,NPTST,IPTST,LGCOM,ITGA,ITGB,LANDET,LBNDET,NAST,NBST,
     $     LDISB,X,NX,LABOX1,LBBOX1,ISCBOX,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,
     $     IAELAC2,ISPA_0,ITGB_EVE,ITGB_EAAEE,ITGB_EVAEE,ITGB_EVVAE,
     $     ITGB_EVVAA,ITGB_EAE,ITGB_EVA,ITGB_EVVAA_2,ITGB_EVAAE,
     $     ITGB_EAAEE_2,LGCOM_PT,NAST_PT,NBST_PT,IAMI_PT,IAMA_PT,
     $     IBMI_PT,IBMA_PT,ITGB_INT)
!------------------------------------------------------------------------
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL SOME,GOPARR,DSKWRK,MASWRK,DSKSAV
      PARAMETER (MXRT=100, MXATM=2000)

      COMMON /CIFILS/ NFT11,NFT12,NFT13,NFT14,NFT15,NFT16,IDAF20,NEMEMX
      COMMON /ENRGMP/ EMP2,EMP3,EMP4,EMP2A
      COMMON /ENRGYS/ ENUCR,EELCT,ETOT,STOT,SSQUAR,ECORE,ESCF,EERD,
     *                E1,E2,VEN,VEE,EPOT,EKIN,ESTATE(MXRT),STATN,
     *                EDFT(2),EDISP
      COMMON /FUNCT / E,EGRAD(3,MXATM)

      COMMON /IOFILE/ IR,IW,IP,IS,IJKT,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK

      DIMENSION SI1(*), SI2(*), CI(NCI,NPTST)
      DIMENSION F((MAXW1*(MAXW1+1))/2),EF(MAXW1*MAXW1),EL(MAXW1)
      DIMENSION EC(MAXP*MAXP),IWRK2(MAXW1),B(8*MAXW1)
      DIMENSION IFA(0:NORB-NCOR,0:NORB-NCOR)
      DIMENSION IACON1(NA+NCOR+2),IBCON1(NA+NCOR+2)
      DIMENSION IACON2(NA+NCOR+2),IBCON2(NA+NCOR+2)
      DIMENSION ISYMA(NALP),ISYMB(NBLP)
      DIMENSION ITAB(NSYM),ISPA(NALP),ISPB(NBLP)
      DIMENSION IMUL(NSYM,NSYM)
      DIMENSION IOB(NTOTPT)

      DIMENSION SVOOO(*),SVOVO(*),EFCK(NTOTPT)
      DIMENSION INPT((NTOTPT*(NTOTPT+1))/2)
      DIMENSION TMP1(*),TMP2(*)
      DIMENSION TMP3(*),TMP4(*)

      DIMENSION IPTST(NPTST)
      DIMENSION EPT0(NPTST)

      INTEGER  IMXMAP(*),IMIMAP(*),IBELAC(*),IBELAC2(*),IAELAC(*),
     $     IAELAC2(*),ISPA_0(*)

! DRIVER TO DO ORMAS+PT2 ALMOST COMPLETELY DIRECT
      ISTAT=0
      NACT = NORB-NCOR
      NTOT = NCORPT + NVAL + NORB + NEXT
      L1 = NVAL+NORB+NEXT
      L2 = (L1*(L1+1))/2

      IF (NB+NCOR.EQ.0) NBLP = 1

! SET UP INTEGRAL INDEXING VECTOR  
      DO I=1,L2
         INPT(I) = (I*(I-1))/2
      ENDDO

! READ SYMMETRIES FOR NON-CORE PT ORBITALS
      CALL DAREAD(IDAF,IODA,IOB,NTOT,262,1)
      CALL CORTRA(IOB,NTOT,NCORPT)

! ----- WE MUST HAVE USABLE CI VECTORS ON DISK ALREADY -----
      DSKSAV = DSKWRK
      DSKWRK = .FALSE.
      NSTATE = 0
      NVECS  = 0
      CALL SEQOPN(NFT12,'CIVECTR','UNKNOWN',.FALSE.,'UNFORMATTED')
      CALL SEQREW(NFT12)
      IF(MASWRK) READ(NFT12,ERR=2343,END=2343) NSTATE,NVECS
      GO TO 2344

 2343 CONTINUE
      NSTATE=0
      NVECS =0

! LET OTHER NODES KNOW IF ANYTHING WAS READ
 2344 CONTINUE
      IF (GOPARR) CALL DDI_BCAST(2507,'I',NSTATE,1,MASTER)
      IF (GOPARR) CALL DDI_BCAST(2508,'I',NVECS ,1,MASTER)

! IF NOTHING READ, THERE IS A SERIOUS PROBLEM SOMEWHERE.
      IF (NVECS.NE.NCI) THEN
         IF (SOME) WRITE(IW,9005) NVECS,NCI
         CALL ABRT
      ENDIF

! READ PREVIOUS REFERENCE CI EIGENVECTORS FOR STATES
!  IPTST(I),I=1,NPTST
      IF (SOME) WRITE(IW,*)
      IF (SOME) WRITE(IW,9007) (IPTST(I),I=1,NPTST)

! LOAD DESIRED CI VECTORS INTO MEMORY
      MST = 1
      DO 100 ISTATE = 1,NSTATE
         IF (ISTATE.NE.IPTST(MST)) THEN
            CALL SEQADV(NFT12)
            GOTO 100
         ELSE
            CALL SQREAD(NFT12,CI(1,MST),NVECS)
            MST = MST + 1
            IF (MST.GT.NPTST) GOTO 109
         ENDIF
  100 CONTINUE
  109 CONTINUE

      CALL SEQREW(NFT12)
      DSKWRK = DSKSAV

! ----------------------------------------------------
! NOW TO WORK OUT THE COMPLETE MRPT ENERGY/HAMILTONIAN
! ----------------------------------------------------
      DO I=1,NTMPSZ*NPTST
         TMP1(I) = 0.0D+00
         TMP2(I) = 0.0D+00
         TMP3(I) = 0.0D+00
         TMP4(I) = 1.0D+00
      ENDDO

!      IF (NPTST.GT.1) GOTO 5555

! **** BELOW IS ONLY FOR SINGLE STATE MRPT *****

! INITIALIZE CONTRIBUTIONS FROM ALL POSSIBLE CLASSES OF EXCITED DETS

! 1E- INTERNALLY EXCITED DETERMINANTS
      EVA = 0.0D+00

! 2E- INTERNALLY EXCITED DETERMINANTS
      EVVAA = 0.0D+00

! 1E- EXTERNALLY EXCITED DETERMINANTS
      EVE = 0.0D+00
      EAE = 0.0D+00

! 2E- INTERNALLY-EXTERNALLY EXCITED DETERMINANTS
      EVVAE = 0.0D+00
      EVAAE = 0.0D+00

! 2E- EXTERNALLY EXCITED DETERMINANTS
      EVVEE = 0.0D+00
      EVAEE = 0.0D+00
      EAAEE = 0.0D+00

! 1E- AND 2E- 'INTERNALLY' EXCITED DETERMINATS
      E_CCAS = 0.0D+00

      CALL TSECND(ET0)
      IF (NA.EQ.NB) THEN

      IF(SOME) WRITE(6,9080) NPTST

      CALL HORMPT0(SI1,SI2,SVOOO,SVOVO,EFCK,EPT0,CI,NVAL,NACT,NEXT,
     $     NCI,NA,NB,IACON1,IBCON1,IACON2,IBCON2,NALP,NBLP,ISYMA,
     $     ISYMB,ISPA,ISPB,NSYM,IMUL,ITAB,IOB,INPT,IFA,TMP1,TMP2,
     $     TMP3,TMP4,NTMPSZ,EVA,EVVAA,EVE,EAE,EVVAE,EVAAE,EVVEE,
     $     EVAEE,EAAEE,LGCOM,ITGA,ITGB,LANDET,LBNDET,NAST,NBST,LDISB,
     $     X,NX,LABOX1,LBBOX1,ISCBOX,
     $     NPTST,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,E_CCAS,
     $     ITGB_EVE,ITGB_EAAEE,ITGB_EVAEE,ITGB_EVVAE,ITGB_EVVAA,
     $     ITGB_EAE,ITGB_EVA,ITGB_EVVAA_2,ITGB_EVAAE,ITGB_EAAEE_2,
     $     LGCOM_PT,NAST_PT,NBST_PT,IAMI_PT,IAMA_PT,IBMI_PT,IBMA_PT,
     $     EF,EL,EC,ITGB_INT)

      ELSE
         
      IF(SOME) WRITE(6,9085) NPTST
      WRITE(6,'("MULT>1 ORMAS MRPT CODE NOT ENABLED")')
      CALL ABRT
C$$$      CALL HORMPT0(SI1,SI2,SVOOO,SVOVO,EFCK,EPT0,CI,NVAL,NACT,NEXT,
C$$$     $     NCI,NA,NB,IACON1,IBCON1,IACON2,IBCON2,NALP,NBLP,ISYMA,
C$$$     $     ISYMB,ISPA,ISPB,NSYM,IMUL,ITAB,IOB,INPT,IFA,TMP1,TMP2,
C$$$     $     TMP3,TMP4,NTMPSZ,EVA,EVVAA,EVE,EAE,EVVAE,EVAAE,EVVEE,
C$$$     $     EVAEE,EAAEE,LGCOM,ITGA,ITGB,LANDET,LBNDET,NAST,NBST,LDISB,
C$$$     $     X,NX,LABOX1,LABOX2,LBBOX1,LBBOX2,ISCBOX,
C$$$     $     NPTST,
C$$$     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,E_CCAS,
C$$$     $     ITGB_EVE,ITGB_EAAEE,ITGB_EVAEE,ITGB_EVVAE,ITGB_EVVAA,
C$$$     $     ITGB_EAE,ITGB_EVA,ITGB_EVVAA_2,ITGB_EVAAE,ITGB_EAAEE_2,
C$$$     $     LGCOM_PT,NAST_PT,NBST_PT,IAMI_PT,IAMA_PT,IBMI_PT,IBMA_PT,
C$$$     $     EF,EL,EC,ITGB_INT)
C$$$
C$$$         CALL HORMPT(SI1,SI2,SVOOO,SVOVO,EFCK,EPT0,CI,NVAL,NACT,NEXT,
C$$$     $        NCI,NA,NB,IACON1,IBCON1,IACON2,IBCON2,NALP,NBLP,ISYMA,
C$$$     $        ISYMB,ISPA,ISPB,NSYM,IMUL,ITAB,IOB,INPT,IFA,TMP1,TMP2,
C$$$     $        TMP3,TMP4,NTMPSZ,EVA,EVVAA,EVE,EAE,EVVAE,EVAAE,EVVEE,
C$$$     $        EVAEE,EAAEE,LGCOM,ITGA,ITGB,LANDET,LBNDET,NAST,NBST,LDISB,
C$$$     $        X,NX,IPTAMA,IPTAMI,IPTBMA,IPTBMI,ITGAPT,ITGBPT,LPTCOM,
C$$$     $        NPTAST,NPTBST,NPTST,IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,
C$$$     $        IAELAC2,ISPA_0,E_CCAS)        

      ENDIF

      IF(NPTST.GT.1)GOTO 6666 !MCQDPT CORRECTION

      CALL TSECND(ET1)
      ELAP = ET1 - ET0
      IF (SOME) WRITE(IW,9010) ELAP

      CALL DDI_GSUMF(2504,EVA,1)
      CALL DDI_GSUMF(2504,EVVAA,1)
      CALL DDI_GSUMF(2504,EVE,1)
      CALL DDI_GSUMF(2504,EAE,1)
      CALL DDI_GSUMF(2504,EVVAE,1)
      CALL DDI_GSUMF(2504,EVAAE,1)
      CALL DDI_GSUMF(2504,EVVEE,1)
      CALL DDI_GSUMF(2504,EVAEE,1)
      CALL DDI_GSUMF(2504,EAAEE,1)
      CALL DDI_GSUMF(2504,E_CCAS,1)

      EMRPT=EVA+EVVAA+EVE+EAE+EVVAE+EVAAE+EVVEE+EVAEE+EAAEE+E_CCAS
      ETMRP=ESTATE(IPTST(1))+EMRPT

      IF (MASWRK) WRITE(IW,9015) EMRPT,ETMRP

! PRINT BREAKDOWN ACCORDING TO EXCITED DETERMINANT CLASS
      IF (SOME) THEN
         WRITE(IW,9020)
         WRITE(IW,9030)
     *   EVA,EVE,EAE,EVVAA,EVVAE,EVAAE,EVVEE,EVAEE,EAAEE,E_CCAS,EMRPT
      ENDIF

! SET UP THE RIGHT E FOR POSSIBLE NUMERICAL GEOMETRY OPTIMZATION
      E = ESTATE(IPTST(1)) + EMRPT
      EMP2 = ESTATE(IPTST(1)) + EMRPT

      RETURN

 6666 CONTINUE !FINISHED WITH MULTI-STATE ENERGY MATRIX, NOW FIGURE OUT MCQDPT 

      CALL TSECND(ET1)
      ELAP = ET1 - ET0
      IF(SOME) WRITE(IW,9012) ELAP

! PRINT OUT SECOND-ORDER HAMILTONIAN BETWEEN STATES
      NSEF = NPTST*NPTST
      CALL DDI_GSUMF(2504,EF,NSEF)

      IF (SOME) WRITE(IW,9040)
      DO II=1,NPTST
      DO JJ=1,II-1
      EF((JJ-1)*NPTST+II)=(EF((JJ-1)*NPTST+II)+
     *                     EF((II-1)*NPTST+JJ))/2.0D+00
      ENDDO
      IF (SOME) WRITE(IW,9050) (EF((KK-1)*NPTST+II),KK=1,II)
      ENDDO

! PRINT OUT HAMILTONIAN BETWEEN STATES UP TO SECOND-ORDER
      IF (SOME) WRITE(IW,9060)
      DO II=1,NPTST
         EF((II-1)*NPTST+II)=EF((II-1)*NPTST+II)+ESTATE(IPTST(II))
      IF (SOME) WRITE(IW,9050) (EF((KK-1)*NPTST+II),KK=1,II)
      ENDDO

! DIAGONALIZE HAMILTONIAN TO OBTAIN MCQDPT ENERGIES AND PRINT RESULTS
      IX = 0
      DO II=1,NPTST
         DO JJ=1,II
            IX = IX + 1
            F(IX) = EF((JJ-1)*NPTST+II)
         ENDDO
      ENDDO
      CALL EVVRSP(-1,NPTST,NPTST,(NPTST*(NPTST+1))/2,NPTST,
     *            F,B,IWRK2,EL,EF,0,IERR)

! --- PRINT RESULTS FOR ALL STATES ----
! NOTE THAT THERE ISN'T A MECHANISM IN PLACE TO NAME A SPECIFIC
! STATE'S MP2 ENERGY, SO RETURN A VALUE ANYONE TRYING NUMERICAL
! GRADIENTS ON SHOULD RECOGNIZE AS DAFT.
      IF (SOME) THEN
         WRITE(IW,9065)
         DO II=1,NPTST
            WRITE(IW,9070) IPTST(II),EL(II)
         ENDDO
         WRITE(IW,*)
      END IF
      EMP2 = 0.0D+00

      RETURN

 9005 FORMAT(/1X,'ERROR, NUMBER OF VECTORS STORED=',I5,
     *           ' NOT EQUAL TO NCI=',I5/
     *        1X,'(THIS MAY BE DUE TO A GARBAGE -CIVECTR- FILE',
     *           ' LEFT OVER FROM AN EARLIER RUN.)')
 9007 FORMAT(1X,'INITIAL CI VECTORS READ FROM DISK, STATES =',10I4)
 9010 FORMAT(/1X,'TIME FOR 2ND ORDER ENERGY E(2) CALCULATION :',F11.1)
 9012 FORMAT(/1X,'TIME FOR 2ND ORDER HAMILTONIAN CALCULATION :',F11.1)
 9015 FORMAT(/1X,
     *   '                    2ND ORDER ENERGY CORRECTION  = ',F20.10/
     *1X,'TOTAL MRPT2, E(MP2) 0TH + 1ST + 2ND ORDER ENERGY = ',F20.10)
 9020 FORMAT(/1X,
     * 'BREAKDOWN OF E(2) ACCORDING TO CLASS OF EXCITED DETERMINANT'//
     * 1X,' **** NOTE **** THIS MEANS THAT THE E(2) ENERGY IS SORTED',
     *    ' ACCORDING TO'/
     * 1X,'CONTRIBUTIONS FROM EXCITED DETERMINANTS, NOT ACCORDING TO',
     *    ' EXCITATION TYPES:'/
     * 5X,'V = VALENCE, A = ACTIVE, E = EXTERNAL'//
     * 18X,' EXTERNAL DETERMINANT CREATED BY:',8X,'E(2)')
 9030 FORMAT(/45X,'V -> A ',F15.9/
     *     45X,'V -> E ',F15.9/
     *     45X,'A -> E ',F15.9/
     *     44X,'VV -> AA',F15.9/
     *     44X,'VV -> AE',F15.9/
     *     11X,'(2 ELECTRONS ARE DIFFERENT SPIN) VA -> AE',F15.9/
     *     44X,'VV -> EE',F15.9/
     *     44X,'VA -> EE',F15.9/
     *     44X,'AA -> EE',F15.9/
     *     39X,'INTERNAL CCAS',F15.9/
     *     44X,'------------------------'/
     *     46X,'TOTAL ',F15.9//)
 9040 FORMAT(/1X,'*** 2ND ORDER HAMILTONIAN BETWEEN STATES       ***'/)
 9050 FORMAT(1X,10F16.9)
 9060 FORMAT(/1X,'*** HAMILTONIAN BETWEEN STATES UP TO 2ND ORDER ***'
     *       /1X,'*** DIAGONAL ELEMENTS EQUAL MRPT2 ENERGIES     ***'/)
 9065 FORMAT(/1X,'*** AFTER DIAGONALIZATION, MCQDPT ENERGIES ARE ***'/)
 9070 FORMAT(1X,
     *   '    CI STATE ',I4,'                MCQDPT E(MP2) = ',F20.10)
 9080 FORMAT(/1X,49(1H-)/1X,'COMPUTING MULT=1 ORMAS MRPT',1X,
     *        'ENERGY',1X,'FOR',1X,I3,1X,'STATES'/1X,49(1H-))
 9085 FORMAT(/1X,48(1H-)/
     *        1X,'COMPUTING MULT>1 ORMAS MRPT',1X,'ENERGY',1X,'FOR',
     *        1X,I3,1X,'STATES'/1X,48(1H-))
      END SUBROUTINE ORMASPT_DAVIDSON
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_TABLES
      SUBROUTINE ORMASPT_TABLES(IW,LBOX1,LBOX2,LBOX3,NSPACE,NA,NB,
     *            LBST,X,
     *            NX,IAMA,IAMI,IBMA,IBMI,MNUM,IDIM,MSTA,IBO,
     *            IDSYM,ISYM1,NSYM,
     *            NACT,LWRK,KTAB,LGMUL,
     *            LCON,LCOA,LCOB,
     *            LANDET,LBNDET,NAST,NBST,LSYMA,LSYMB,LGCOM,
     *            MINI,MAXI,LSPA,LSPB,LDISB,
     *            ITGA,ITGB,IAST,IBST,NCI)
!     ------------------------------------------------------------------
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION LBOX1(NSPACE),LBOX2(NSPACE),LBOX3(NSPACE),LBST(NSPACE)
      DIMENSION X(NX)
      DIMENSION IAMA(NSPACE),IAMI(NSPACE),IBMA(NSPACE),IBMI(NSPACE)
      DIMENSION MNUM(NSPACE),IDIM(NSPACE),MSTA(NSPACE+1),IBO(NACT)
      DIMENSION LWRK(43),KTAB(NSYM),LGMUL(NSYM,NSYM)
      DIMENSION LCON(NA)
      DIMENSION LCOA(NSYM,ITGA),LCOB(NSYM,ITGB)
      DIMENSION LANDET(NSPACE,ITGA),LBNDET(NSPACE,ITGB)
      DIMENSION NAST(ITGA+1),NBST(ITGB+1)
      DIMENSION LSYMA(IAST),LSYMB(IBST)
      DIMENSION LGCOM(ITGB,ITGA)
      DIMENSION MINI(NSPACE),MAXI(NSPACE)
      DIMENSION LSPA(IAST),LSPB(IBST)
      DIMENSION LDISB(NSYM,ITGB,ITGA)

! THIS IS A TRUNCATED VERSION OF THE MAKTABS ROUNTINE FROM ORMAS1

! 1/
!   MAKE SYMMETRY TABLES

      IF (IDSYM.GT.0) THEN
      CALL GTAB(IDSYM,ISYM1,KTAB,LWRK(1),LWRK(4),LWRK(7),LWRK(10))
      CALL GMUL(IDSYM,LGMUL,LWRK(1),LWRK(4),LWRK(7),LWRK(10))
      ELSE
      CALL GTAB(1,1,KTAB,LWRK(1),LWRK(4),LWRK(7),LWRK(10))
      CALL GMUL(1,LGMUL,LWRK(1),LWRK(4),LWRK(7),LWRK(10))
      ENDIF

      DO II=1,ITGA
         DO JJ=1,NSYM
            LCOA(JJ,II) = 0
         ENDDO
      ENDDO

      DO II=1,ITGB
         DO JJ=1,NSYM
            LCOB(JJ,II) = 0
         ENDDO
      ENDDO

!  2/
!    MAKE LANDET, LBNDET.  LANDET(I,J) SAYS HOW MANY ALPHA STRINGS
!    THERE ARE FOR GROUP J, SPACE I.  ANALOGOUS FOR LBNDET(I,J).

!    LOOP THROUGH ALL ALPHA GROUPS:

      ISTA1 = LBST(1)
      CALL RESETCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX2)
      DO II=1,ITGA
         DO JJ=1,NSPACE
            ISTA2 = LBST(JJ) - ISTA1 + 1
            LANDET(JJ,II)=ISPADET(X(ISTA2),MNUM(JJ),IDIM(JJ),LBOX1(JJ))
         ENDDO
      CALL PUSHCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX2,IEND)
      ENDDO

!    LOOP THROUGH ALL BETA GROUPS, DO SAME AS ABOVE ESSENTIALLY.

      CALL RESETCO(LBOX1,NSPACE,NB,IBMA,IBMI,LBOX2)
      DO II=1,ITGB
         DO JJ=1,NSPACE
            ISTA2 = LBST(JJ) - ISTA1 + 1
            LBNDET(JJ,II)=ISPADET(X(ISTA2),MNUM(JJ),IDIM(JJ),LBOX1(JJ))
         ENDDO
      CALL PUSHCO(LBOX1,NSPACE,NB,IBMA,IBMI,LBOX2,IEND)
      ENDDO

!  3/
!    MAKE NAST, NBST.  NAST(I) SAYS WHERE ALPHA STRINGS OF GROUP I
!    START IN FULL STRING LIST - 1.  ANALOGOUS FOR NBST.

      NAST(1) = 0
      NBST(1) = 0
      DO II=1,ITGA
         ITOT = 1
         DO JJ=1,NSPACE
            ITOT = ITOT * LANDET(JJ,II)
         ENDDO
         NAST(II+1) = NAST(II) + ITOT
      ENDDO

      DO II=1,ITGB
         ITOT = 1
         DO JJ=1,NSPACE
            ITOT = ITOT * LBNDET(JJ,II)
         ENDDO
         NBST(II+1) = NBST(II) + ITOT
      ENDDO

!  4/
!       MAKE LGCOM.  IF LGCOM(I,J).NE.0 THEN BETA GROUP I
!       AND ALPHA GROUP J ARE COMPATIBLE.

      ICOMP = 0
      CALL RESETCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX3)
      DO JJ=1,ITGA
         CALL RESETCO(LBOX2,NSPACE,NB,IBMA,IBMI,LBOX3)
         DO II=1,ITGB
            LGCOM(II,JJ) = 0
            DO KK=1,NSPACE
               IOC = LBOX1(KK) + LBOX2(KK)
               IF (IOC.GT.MAXI(KK).OR.IOC.LT.MINI(KK)) GO TO 100
            ENDDO

            LGCOM(II,JJ) = 1
            ICOMP = ICOMP + 1
  100       CALL PUSHCO(LBOX2,NSPACE,NB,IBMA,IBMI,LBOX3,IEND)
         ENDDO
         CALL PUSHCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX3,IEND)
      ENDDO


!  5/
!    A) MAKE LSYMB.  LSYMB(I) IS SYMMETRY OF BETA STRING I.
!       MAKE LCOB.  LCOB(I,J) IS NUMBER OF DETERMINANTS
!       OF SYMMETRY I IN GROUP J.
!       MAKE LSPB.  LSPB(I) IS BETA STRING I'S SYMMETRY POSITION IN
!       IT'S OWN GROUP.

      CALL RESETCO(LBOX1,NSPACE,NB,IBMA,IBMI,LBOX2)

!    LOOP THROUGH GROUPS.

      ICOUNT = 0
      DO II=1,ITGB

!    LOOP THROUGH ALL STRINGS IN GROUP II.

         CALL RESETDE(LBOX1,NSPACE,NB,MSTA,LCON)

         ITOT = 1
         DO JJ=1,NSPACE
            ITOT = ITOT * LBNDET(JJ,II)
         ENDDO

         DO KK=1,ITOT
            ICOUNT = ICOUNT + 1
            CALL GETSYM1(IW,LCON,NACT,NB,IBO,IDSYM,ISYM,
     *      LWRK(1),LWRK(4),LWRK(7),LWRK(10))
            LSYMB(ICOUNT) = ISYM
            LCOB(ISYM,II) = LCOB(ISYM,II) + 1
            LSPB(ICOUNT) = LCOB(ISYM,II)

            CALL MOVEUP2(LBOX1,NSPACE,NB,MSTA,LCON)
         ENDDO

         CALL PUSHCO(LBOX1,NSPACE,NB,IBMA,IBMI,LBOX2,IEND)
      ENDDO

!    B) - MAKE LSYMA.  LSYMA(I) IS SYMMETRY OF ALPHA STRING I.
!       - MAKE LCOA.  LCOA(I,J) IS NUMBER OF DETERMINANTS
!         OF SYMMETRY I IN GROUP J.
!       - MAKE LSPA.  LSPA(I) IS WHERE ALPHA STRING I STARTS IN
!         THE FULL LIST OF DETERMINANTS.  EACH ALPHA STRING IS COUPLED
!         WITH RELEVANT BETA STRINGS (IN BETA GROUP AND SYMMETRY ORDER).
!       - MAKE LDISB.  LDISB(ISYM,I,J) SAYS WHERE BETA GROUP I, AND
!         SYMMETRY ISYM STARTS WHEN COUPLED TO ALPHA GROUP J.

      CALL RESETCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX2)

!    LOOP THROUGH GROUPS.

      ICOUNT = 0
      NCI = 0
      DO II=1,ITGA

!    LOOP THROUGH ALL STRINGS IN GROUP II.

         CALL RESETDE(LBOX1,NSPACE,NA,MSTA,LCON)
         ITOT = 1
         DO JJ=1,NSPACE
            ITOT = ITOT * LANDET(JJ,II)
         ENDDO

         DO KK=1,ITOT
            ICOUNT = ICOUNT + 1
            CALL GETSYM1(IW,LCON,NACT,NA,IBO,IDSYM,ISYM,
     *      LWRK(1),LWRK(4),LWRK(7),LWRK(10))
            LSYMA(ICOUNT) = ISYM
            LCOA(ISYM,II) = LCOA(ISYM,II) + 1

            LSPA(ICOUNT) = NCI
            JSYM = KTAB(ISYM)
            DO 200 LL=1,ITGB
               IF (LGCOM(LL,II).EQ.0) GO TO 200
               NCI = NCI + LCOB(JSYM,LL)
  200       CONTINUE

            CALL MOVEUP2(LBOX1,NSPACE,NA,MSTA,LCON)
         ENDDO

         DO KK=1,NSYM
            LWRK(KK) = 0
         ENDDO
         DO 300 JJ=1,ITGB
            DO KK=1,NSYM
               LDISB(KK,JJ,II) = 0
            ENDDO
            IF (LGCOM(JJ,II).EQ.0) GO TO 300
            DO KK=1,NSYM
               LDISB(KK,JJ,II) = LWRK(KK)
               LWRK(KK) = LWRK(KK) + LCOB(KK,JJ)
            ENDDO
  300    CONTINUE

         CALL PUSHCO(LBOX1,NSPACE,NA,IAMA,IAMI,LBOX2,IEND)
      ENDDO

      RETURN

      END SUBROUTINE ORMASPT_TABLES
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_CLASS_MEMORY
      SUBROUTINE ORMASPT_CLASS_MEMORY(IABOX1,IBBOX1,NA,NB,ITGAPT,ITGBPT,
     $     IPTAMA,IPTBMA,IPTBMI,IPTAMI,ISCBOX,IMINA,IMAXA,IMINB,IMAXB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51),
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51),
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI,
     $     IAMI,IAMA,IBMI,IBMA,IDIM,
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES/ARRAYS
      INTEGER NA,NB,ITGAPT,ITGBPT,IMINA,IMAXA,IMAXB,IMINB,IABOX1(*),
     $     IBBOX1(*),ISCBOX(*),IPTAMA(*),IPTAMI(*),IPTBMA(*),IPTBMI(*)
! LOCAL VAIABLES
      INTEGER ISPA,IORBSPAN

! CREATE RESTRICTIONS FOR EXCITATIONS FROM THE GENERAL CAS TO SD SPACE
      DO ISPA = 1,NSPACE
         IPTAMA(ISPA) = IAMA(ISPA) + IMAXA
         IPTAMI(ISPA) = IAMI(ISPA) - IMINA
         IPTBMA(ISPA) = IBMA(ISPA) + IMAXB
         IPTBMI(ISPA) = IBMI(ISPA) - IMINB

         IF(IPTAMI(ISPA).LT.0) IPTAMI(ISPA) = 0
         IF(IPTBMI(ISPA).LT.0) IPTBMI(ISPA) = 0
         IORBSPAN = MSTA(ISPA + 1) - MSTA(ISPA)
         IF(IPTAMA(ISPA).GT.IORBSPAN)IPTAMA(ISPA) = IORBSPAN
         IF(IPTBMA(ISPA).GT.IORBSPAN)IPTBMA(ISPA) = IORBSPAN
      ENDDO

! WORK OUT THE NUMBER OF ALPHA/BETA GROUPS WITH NEW RESTRICTIONS
      CALL TOTALCO(ISCBOX,NSPACE,NA,IPTAMA,IPTAMI,IABOX1,ITGAPT)
      CALL TOTALCO(ISCBOX,NSPACE,NB,IPTBMA,IPTBMI,IBBOX1,ITGBPT)

      RETURN
      END SUBROUTINE ORMASPT_CLASS_MEMORY
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_CLASS_TABLES
      SUBROUTINE ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB,IFA,NACT,
     $     ITGAPT,ITGBPT,NPTAST,NPTBST,LPTCOM,IPTAMA,IPTBMA,IPTBMI,
     $     IPTAMI,ISCBOX,IMINA,IMAXA,IMINB,IMAXB,DEBUG)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51),
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51),
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI,
     $     IAMI,IAMA,IBMI,IBMA,IDIM,
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
! PASSED IN VARIABLES/ARRAYS
      INTEGER NA,NB,NACT,ITGAPT,ITGBPT
      INTEGER NPTAST(*),NPTBST(*),IFA(0:NACT,0:NACT)
      INTEGER IABOX1(NSPACE),IBBOX1(NSPACE),ISCBOX(NSPACE)
      INTEGER IPTAMA(NSPACE),IPTAMI(NSPACE),IPTBMA(NSPACE),
     $     IPTBMI(NSPACE),LPTCOM(ITGBPT,*)
      INTEGER IMINA,IMAXA,IMAXB,IMINB
! LOCAL VAIABLES
      INTEGER IELM,I,IJ,IGA,IGB,NPART,IEND,ISPA,ITOT,NPTACT,IHOLE
      INTEGER IPART,IORBSPAN,ITOTSIGN

! TEMPORARY (FOR PRINTING PURPOSES)
      INTEGER ME,MASTER,NPROC,IBTYP,IPTIM
      LOGICAL GOPARR,DSKWRK,MASWRK
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      LOGICAL SOME,DEBUG

      SOME=.FALSE.
      IF(ME.EQ.MASTER.AND.DEBUG)SOME=.TRUE.

! CREATE RESTRICTIONS FOR EXCITATIONS FROM THE GENERAL CAS TO SD SPACE
      DO ISPA = 1,NSPACE
         IPTAMA(ISPA) = IAMA(ISPA) + IMAXA
         IPTAMI(ISPA) = IAMI(ISPA) - IMINA
         IPTBMA(ISPA) = IBMA(ISPA) + IMAXB
         IPTBMI(ISPA) = IBMI(ISPA) - IMINB

         IF(IPTAMI(ISPA).LT.0) IPTAMI(ISPA) = 0
         IF(IPTBMI(ISPA).LT.0) IPTBMI(ISPA) = 0
         IORBSPAN = MSTA(ISPA + 1) - MSTA(ISPA)
         IF(IPTAMA(ISPA).GT.IORBSPAN)IPTAMA(ISPA) = IORBSPAN
         IF(IPTBMA(ISPA).GT.IORBSPAN)IPTBMA(ISPA) = IORBSPAN
      ENDDO
C$$$      IF(SOME) THEN
C$$$         WRITE(6,6969)IAMI(1:NSPACE),IPTAMI(1:NSPACE)
C$$$         WRITE(6,6969)IAMA(1:NSPACE),IPTAMA(1:NSPACE)
C$$$         WRITE(6,6969)IBMI(1:NSPACE),IPTBMI(1:NSPACE)
C$$$         WRITE(6,6969)IBMA(1:NSPACE),IPTBMA(1:NSPACE)
C$$$      ENDIF
C$$$ 6969 FORMAT(3I4,'-->',3I4)

! WORK OUT THE NUMBER OF ALPHA/BETA GROUPS WITH NEW RESTRICTIONS
      CALL TOTALCO(ISCBOX,NSPACE,NA,IPTAMA,IPTAMI,IABOX1,ITGAPT)
      CALL TOTALCO(ISCBOX,NSPACE,NB,IPTBMA,IPTBMI,IBBOX1,ITGBPT)

C$$$      IF(SOME)WRITE(6,'("PT ALPHAS")')
C$$$      CALL RESETCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX)
C$$$      DO I = 1,ITGAPT
C$$$         IF(SOME)WRITE(6,'(I4,A1,5I3)')I,':',IABOX1(1:NSPACE)
C$$$         CALL PUSHCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX,IEND)
C$$$      ENDDO

C$$$      IF(SOME)WRITE(6,'("PT BETAS")')
C$$$      CALL RESETCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX)
C$$$      DO I = 1,ITGBPT
C$$$         IF(SOME)WRITE(6,'(I4,A1,5I3)')I,':',IBBOX1(1:NSPACE)
C$$$         CALL PUSHCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX,IEND)
C$$$      ENDDO

! INITIALIZE LPTCOM(1:ITGBPT,1:ITGAPT)
      DO IGA = 1,ITGAPT
         DO IGB = 1,ITGBPT
            LPTCOM(IGB,IGA) = 0
         ENDDO
      ENDDO

! LPTCOM(1:ITGBPT,1:ITGAPT) THE VALUE OF EACH ELEMENT DEFINES THE
! EXCITATION TYPE FROM GROUP ITGBPT,ITGAPT :DEFINED BELOW 
!
! ELEMENT: +/- ELEMENT SHOWS WHETHER THERE ARE MORE UNDERLOADED OF OVERLOADED SPACES
!     BOX: +/- FOR BOX(1:NSPACE) REFERS TO UNDERLOADED/OVERLOADED SPACE
!    NOTE:  ELEMENT=4 IS AN EXCEPTION, THERE IS ONLY ONE OF THESE

! ELEMENT |  BOX(1:NSPACE)
!--------------------------------
!   -3    |  -1  0  0  0  0 ... 0
!    3    |   1  0  0  0  0 ... 0
!    4    |   1 -1  0  0  0 ... 0
!   -6    |  -2  0  0  0  0 ... 0
!   -6    |  -1 -1  0  0  0 ... 0
!    6    |   1  1  0  0  0 ... 0
!    6    |   2  0  0  0  0 ... 0
!   -9    |  -2  1  0  0  0 ... 0
!   -9    |  -1 -1  1  0  0 ... 0
!    9    |  -1  1  1  0  0 ... 0
!    9    |  -1  2  0  0  0 ... 0
!   16    |  -1 -1  2  0  0 ... 0
!   16    |  -1 -1  1  1  0 ... 0
!   16    |  -2  1  1  0  0 ... 0
!   16    |  -2  2  0  0  0 ... 0

! FORMULA FOR CALUCLATING ABOVE ELEMENTS FROM BOX OCCUPATIONS BELOW: 
!  X = SUM(BOX(1:NPACE)
!  Y = 2^(SUM(ABS(BOX(1:SPACE))))
! ELEMENT = SIGN(X)*(ABS(X) + ABS*(Y))
!          NOTE: SIGN(1,0) = +1

! POPULATE LPTCOM TABLE
      CALL RESETCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX)
      DO IGA = 1,ITGAPT

         CALL RESETCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX)
         DO IGB = 1,ITGBPT

            IELM = 0
            ITOT = 0
            IHOLE = 0 
            IPART = 0
            DO ISPA = 1,NSPACE
               NPART = IABOX1(ISPA) + IBBOX1(ISPA)
               ISCBOX(ISPA)=0

               IF(NPART.LT.MINI(ISPA))THEN
                  IELM = IELM + NPART - MINI(ISPA)
                  IHOLE = IHOLE + ABS(NPART - MINI(ISPA))
                  ISCBOX(ISPA)=NPART-MINI(ISPA)
               ENDIF

               IF(NPART.GT.MAXI(ISPA))THEN
                  IELM = IELM + NPART - MAXI(ISPA)
                  IPART = IPART + ABS(NPART - MAXI(ISPA))
                  ISCBOX(ISPA)=NPART - MAXI(ISPA)
               ENDIF
                 
           ENDDO
            IF(IHOLE.GT.2.OR.IPART.GT.2) GOTO 1000

            ITOT = IHOLE + IPART
!            IF(ITOT.EQ.0) GOTO 1000
            ITOTSIGN = SIGN(1,IELM)
            LPTCOM(IGB,IGA) = ITOTSIGN*(ABS(IELM) + 2**ITOT)

 1000       CALL PUSHCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX,IEND)
         ENDDO
         CALL PUSHCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX,IEND)
      ENDDO

      IF(SOME)THEN
      WRITE(6,*)'ITGAPT,ITGBPT',ITGAPT,ITGBPT
      DO I=1,ITGBPT
         WRITE(6,'(215I3)')(LPTCOM(I,IJ),IJ=1,ITGAPT)
      ENDDO
      ENDIF

! DETERMINE THE TOTAL NUMBER OF PERTURBED A-STRINGS FOR EACH PERTURBED ALPHA GROUP     
      ITOT = 1
      CALL RESETCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX)
      DO I = 1,ITGAPT
         DO IJ = 1,NSPACE
            NPTACT = MSTA(IJ+1) - MSTA(IJ)
            ITOT = ITOT*IFA(NPTACT,IABOX1(IJ))
         ENDDO
         NPTAST(I) = ITOT
         ITOT = 1
         CALL PUSHCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX,IEND)
      ENDDO

! DETERMINE THE TOTAL NUMBER OF PERTURBED B-STRINGS FOR EACH PERTURBED BETA GROUP     
      ITOT = 1
      CALL RESETCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX)
      DO I = 1,ITGBPT
         DO IJ = 1,NSPACE
            NPTACT = MSTA(IJ+1) - MSTA(IJ)
            ITOT = ITOT*IFA(NPTACT,IBBOX1(IJ))
         ENDDO
         NPTBST(I) = ITOT
         ITOT = 1
         CALL PUSHCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX,IEND)
      ENDDO

      RETURN
      END SUBROUTINE ORMASPT_CLASS_TABLES
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMAS_GET_GROUP
      INTEGER FUNCTION ORMAS_GET_GROUP(NBOX,NR,MAB,MIB,IBOX)

      IMPLICIT INTEGER(A-Z)
      INTEGER NBOX,NR
      INTEGER MAB(NBOX),MIB(NBOX)
      INTEGER IBOX(NBOX)

      INTEGER IBOX2(NBOX),IBOX3(NBOX)

!     IBOX(I),I=1,NBOX STORES NUMBER OF PARTICLES                      
!                          IN EACH BOX I.  SCRATCH.                    
!     NBOX = TOTAL NUMBER OF BOXES.                                    
!     NR   = TOTAL NUMBER OF PARTICLES.                                
!     MAB(I) = MAXIMUM CAPACITY OF BOX I.                              
!     MIB(I) = MINIMUM CAPACITY OF BOX I.                              
!     JBOX = GROUP TO HAVE IT POSITION DETERMINED                      
                                                                      
!     RETURNED -----                                                   
                                                                      
!     IPOS = POSITION OF JBOX IN FULL SET.                             

      NP = NR
      DO I=1,NBOX
         IBOX3(I) = MAB(I) - MIB(I)
         IBOX(I) = IBOX(I) - MIB(I)
         NP = NP - MIB(I)
      ENDDO
      CALL POSIT(IBOX2,NBOX,NP,IBOX3,IBOX,IPOS)
      DO I=1,NBOX
         IBOX(I) = IBOX(I) + MIB(I)
      ENDDO
      ORMAS_GET_GROUP=IPOS
                                                                      
      RETURN
      END FUNCTION ORMAS_GET_GROUP
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMAS_GET_STRPOS
      INTEGER FUNCTION ORMAS_GET_STRPOS(ICON,NA,IBOX,NBOX,MSTA,IDIM,X,
     *                 NX,LBST,LNUM)

      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION MSTA(NBOX)
      DIMENSION ICON(NA),IBOX(NBOX)
      DIMENSION X(NX)
      DIMENSION LNUM(NBOX)
      
      DIMENSION IDIM(NBOX),LBST(NBOX)

      DIMENSION JCON(NA)

!     ICON(I) = ORBITAL OCCUPIED BY ELECTRON I.                          
!     NA      = NO. OF ELECTRONS.                                        
!     IBOX(I),I=1,NBOX STORES NUMBER OF ELECTRONS                        
!                          IN EACH BOX I.                                
!     NBOX = TOTAL NUMBER OF BOXES.                                      
!     MSTA(I) = WHERE ORBITAL SPACE I STARTS.                            
!     IDIM(I) = ROW DIMENSION OF BINOMIAL COEFFICIENTS FOR SPACE I.      
!     LBST(I) = WHERE BINOMIAL COEFFICIENT FOR SPACE I                   
!     START IN X.                                                        
!     NX IS THE SIZE OF X.  THIS IS VERY SPECIFIC.                       
!     LNUM(I) = TOTAL NUMBER OF STRINGS FOR SPACE I.                     
!     IBOX2 = SCRATCH ARRAY.                                             
                                                                        
!     RETURNS POSITION OF STRING ICON IN GROUP STRING LIST.              


      IPOS = 1
      ISTA1 = LBST(1)
      IELES = 0
      DO II=1,NBOX
         NE = IBOX(II)
         ISTA2 = LBST(II) - ISTA1 + 1
         NACT = MSTA(II+1) - MSTA(II)
         DO JJ=1,NE
            JCON(JJ) = ICON(JJ+IELES)-MSTA(II)+1
         ENDDO
         IPOS1 = IDPOS1(NACT,NE,JCON,X(ISTA2),IDIM(II)) - 1
         DO JJ=II+1,NBOX
            IPOS1 = IPOS1 * LNUM(JJ)
         ENDDO
         IPOS = IPOS + IPOS1
         IELES = IELES + NE
      ENDDO

      ORMAS_GET_STRPOS = IPOS
      RETURN
      END FUNCTION ORMAS_GET_STRPOS
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ME0AA1B
      SUBROUTINE ME0AA1B(IA,JA,ICON1,NE1,ICON2,NE2,NVAL,
     $     INPT,SI1,SI2,T)
      IMPLICIT NONE

      DOUBLE PRECISION SI1(*),SI2(*),T
      INTEGER ICON1(*),ICON2(*),INPT(*)
      INTEGER IA,JA,NE1,NE2,NVAL,IK,K,IJ,KK,MA,MI,IJKK,KIA,KJA,KIAKJA

!  IA IS ORBITAL WHERE BETA COMES FROM
!  JA IS ORBITAL WHERE BETA GOES TO

! NEED TO DETERMINE IF JA.GT.IA
      IF(JA.GT.IA) THEN

! 1E PART
         IJ = INPT(JA) + IA
         T = SI1(IJ)

! 2E VALENCE
!JA>IA
         DO K = 1,NVAL
            KK = INPT(K) + K
            IJKK = INPT(IJ) + KK
            KIA  = INPT(IA) + K
            KJA = INPT(JA) + K
            KIAKJA = INPT(KJA) + KIA
            T = T + 2*SI2(IJKK) - SI2(KIAKJA)          
         ENDDO

! 2E ICON1,IA,JA
!JA>IA
         DO IK = 1,NE1
            K = ICON1(IK) + NVAL
            IF(K.EQ.JA) CYCLE
            KK = INPT(K) + K
            MA = MAX(IJ,KK)
            MI = MIN(IJ,KK)
            IJKK = INPT(MA) + MI
            MA = MAX(IA,K)
            MI = MIN(IA,K)
            KIA = INPT(MA) + MI
            MA = MAX(JA,K)
            MI = MIN(JA,K)
            KJA = INPT(MA) + MI
            KIAKJA = INPT(KJA) + KIA
            T = T + SI2(IJKK) - SI2(KIAKJA)
         ENDDO

! 2E ICON2,IA,JA
!JA>IA
         DO IK = 1,NE2
            K = ICON2(IK) + NVAL
            KK = INPT(K) + K
            MA = MAX(IJ,KK)
            MI = MIN(IJ,KK)
            IJKK = INPT(MA) + MI
            T = T + SI2(IJKK)
         ENDDO

      ELSE
         
! 1E PART
!IA>JA
         IJ = INPT(IA) + JA
         T = SI1(IJ)
! 2E VALENCE         
!IA>JA
         DO K = 1,NVAL
            KK = INPT(K) + K
            IJKK = INPT(IJ) + KK
            KIA  = INPT(IA) + K
            KJA = INPT(JA) + K
            KIAKJA = INPT(KIA) + KJA
            T = T + 2*SI2(IJKK) - SI2(KIAKJA)
         ENDDO

! 2E ICON1,IA,JA
!IA>JA
         DO IK = 1,NE1
            K = ICON1(IK) + NVAL
            IF(K.EQ.JA) CYCLE
            KK = INPT(K) + K
            MA = MAX(IJ,KK)
            MI = MIN(IJ,KK)
            IJKK = INPT(MA) + MI
            MA = MAX(IA,K)
            MI = MIN(IA,K)
            KIA = INPT(MA) + MI
            MA = MAX(JA,K)
            MI = MIN(JA,K)
            KJA = INPT(MA) + MI
            KIAKJA = INPT(KIA) + KJA
            T = T + SI2(IJKK) - SI2(KIAKJA)
         ENDDO

! 2E ICON2,IA,JA
!IA>JA
         DO IK = 1,NE2
            K = ICON2(IK) + NVAL
            KK = INPT(K) + K
            MA = MAX(IJ,KK)
            MI = MIN(IJ,KK)
            IJKK = INPT(MA) + MI
            T = T + SI2(IJKK)
         ENDDO

      ENDIF

      RETURN
      END SUBROUTINE ME0AA1B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ORMASPT_ACTIVE_MEMORY
      SUBROUTINE ORMASPT_ACTIVE_MEMORY(IPTAMA,IPTAMI,IPTBMA,IPTBMI,
     $     ISCBOX,IABOX1,IBBOX1,NA,NB,ITGAPT,ITGBPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51),
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51),
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI,
     $     IAMI,IAMA,IBMI,IBMA,IDIM,
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER ISPA,IPTAMA(*),IPTAMI(*),IPTBMA(*),IPTBMI(*),IORBSPAN,
     $     ISCBOX(*),NA,NB,IABOX1(*),IBBOX1(*),ITGAPT,ITGBPT

! WORK OUT PT ALPHA & BETA RANGES (INCLUDES SINGLES AND DOUBLE ACTIVE (DE)EXCITATIONS)
      DO ISPA = 1,NSPACE
         IPTAMA(ISPA) = IAMA(ISPA) + 2
         IPTAMI(ISPA) = IAMI(ISPA) - 2
         IPTBMA(ISPA) = IBMA(ISPA) + 2
         IPTBMI(ISPA) = IBMI(ISPA) - 2
         IF(IPTAMI(ISPA).LT.0) IPTAMI(ISPA) = 0
         IF(IPTBMI(ISPA).LT.0) IPTBMI(ISPA) = 0
         IORBSPAN = MSTA(ISPA + 1) - MSTA(ISPA)
         IF(IPTAMA(ISPA).GT.IORBSPAN)IPTAMA(ISPA) = IORBSPAN
         IF(IPTBMA(ISPA).GT.IORBSPAN)IPTBMA(ISPA) = IORBSPAN
      ENDDO

! WORK OUT HOW MANY PT_A/B GROUPS THERE ARE
      CALL TOTALCO(ISCBOX,NSPACE,NA,IPTAMA,IPTAMI,IABOX1,ITGAPT)
      CALL TOTALCO(ISCBOX,NSPACE,NB,IPTBMA,IPTBMI,IBBOX1,ITGBPT)

      RETURN
      END SUBROUTINE ORMASPT_ACTIVE_MEMORY
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK GETPTBOX
      SUBROUTINE GETPTBOX(IBOX,ICON,NR,MSTA,NSPACE,IEMA,IEMI,GENSPA)

      IMPLICIT INTEGER(A-Z)
      LOGICAL GENSPA
      DIMENSION IBOX(NSPACE),ICON(NR),MSTA(NSPACE+1)
      INTEGER IEMA(NSPACE),IEMI(NSPACE)

      ISTA=1

      DO II=1,NSPACE
         IBOX(II)=0
      ENDDO

      DO 10 II=1,NR
         IA=ICON(II)
         DO JJ=ISTA,NSPACE
            IF (MSTA(JJ+1).GT.IA) THEN
               IBOX(JJ)=IBOX(JJ)+1
               ISTA=JJ
               EXIT
           ENDIF
         ENDDO
 10   CONTINUE
      
      DO I=1,NSPACE
         IF(IBOX(I).LT.IEMI(I).OR.IBOX(I).GT.IEMA(I)) THEN
            GENSPA=.FALSE.
            RETURN
         ENDIF
      ENDDO

      GENSPA=.TRUE.

      RETURN
      END
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK HORMPT0
      SUBROUTINE HORMPT0(SI1,SI2,SVOOO,SVOVO,EFCK,EPT0,CI,NVAL,NACT,
     $     NEXT,NCI,NA,NB,IACON1,IBCON1,IACON2,IBCON2,NALP,NBLP,ISYMA,
     $     ISYMB,LSPA,LSPB,NSYM,IMUL,ITAB,IOB,INPT,IFA,TMP1,TMP2,
     $     TMP3,TMP4,NTMPSZ,EVA,EVVAA,EVE,EAE,EVVAE,EVAAE,EVVEE,
     $     EVAEE,EAAEE,LGCOM,ITGA,ITGB,LANDET,LBNDET,NAST,NBST,LDISB,
     $     X,NX,IABOX1,IBBOX1,ISCBOX,NPTST,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,E_CCAS,
     $     ITGB_EVE,ITGB_EAAEE,ITGB_EVAEE,ITGB_EVVAE,ITGB_EVVAA,
     $     ITGB_EAE,ITGB_EVA,ITGB_EVVAA_2,ITGB_EVAAE,ITGB_EAAEE_2,
     $     LGCOM_PT,NAST_PT,NBST_PT,IAMI_PT,IAMA_PT,IBMI_PT,IBMA_PT,
     $     HPT,COEFF,HINT,ITGB_INT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      LOGICAL GOPARR,DSKWRK,MASWRK

      LOGICAL GENSPA_A

      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK

      DIMENSION SI1(*),SI2(*),SVOOO(NEXT,*),SVOVO(*),EFCK(*),CI(NCI,*)
      DIMENSION IACON1(NA+2),IBCON1(NA+2),IACON2(NA+2),IBCON2(NA+2)
      DIMENSION ISYMA(NALP),ISYMB(NBLP),LSPA(NALP),LSPB(NBLP)
      DIMENSION IMUL(NSYM,NSYM),ITAB(NSYM),IOB(*)
      DIMENSION INPT(*),IFA(0:NACT,0:NACT)
      DIMENSION TMP1(NTMPSZ,*),TMP2(NTMPSZ,*),TMP3(NTMPSZ,*),
     $     TMP4(NTMPSZ,*)

      INTEGER LGCOM(ITGB,*),LDISB(NSYM,ITGB,*),LANDET(NSPACE,*)
      INTEGER LBNDET(NSPACE,*),NAST(*),NBST(*),X(*)
      INTEGER IABOX1(*),IBBOX1(*),ISCBOX(*)
      INTEGER IMXMAP(*),IMIMAP(*),IBELAC(*),IBELAC2(*),IAELAC(*),
     $        IAELAC2(*),ISPA_0(*)
      INTEGER LGCOM_PT(*),NAST_PT(*),NBST_PT(*)
      INTEGER ORMAS_GET_GROUP,ORMAS_GET_STRPOS
      INTEGER IAMI_PT(*),IAMA_PT(*),IBMI_PT(*),IBMA_PT(*)
      INTEGER ITBOX(NSPACE) !CREATED ON STACK (SMALL)


      DIMENSION EPT0(NPTST),HPT(NPTST,NPTST),COEFF(NPTST)
      DIMENSION HINT(NPTST,NPTST)

!FOR DEBUGGING
!      INTEGER IABOX2(NSPACE+2),IBBOX2(NSPACE+2)

      M1 = NVAL+NACT
      M2 = (M1*(M1+1))/2
      NQS = M1 + 1
      NQQ = M1 + NEXT
      DO II=1,NPTST
         DO JJ=1,NPTST
            HPT(II,JJ) = 0.0D+00                                                          
         ENDDO
      ENDDO

      IF (NA.LT.NACT) THEN
         N1A =  IFA(NACT,NA+1)
      ELSE
         N1A = 0
      ENDIF
C$$$      IF (NB.LT.NACT) THEN
C$$$         N1B =  IFA(NACT,NB+1)
C$$$      ELSE
C$$$         N1B = 0
C$$$      ENDIF

C$$$      IF (NB.LT.NACT-1) THEN
C$$$         N2B = IFA(NACT,NB+2)
C$$$      ELSE
C$$$         N2B = 0
C$$$      ENDIF

      IF (NA.GE.2) THEN
         ND1A = IFA(NACT,NA-1)
      ELSEIF (NA.EQ.1) THEN
         ND1A = 1
      ELSEIF (NA.EQ.0) THEN
         ND1A = 0
      ENDIF

C$$$      IF (NB.GE.2) THEN
C$$$         ND1B = IFA(NACT,NB-1)
C$$$      ELSEIF (NB.EQ.1) THEN
C$$$         ND1B = 1
C$$$      ELSEIF (NB.EQ.0) THEN
C$$$         ND1B = 0
C$$$      ENDIF

C$$$      IF (NB.GE.3) THEN
C$$$         ND2B = IFA(NACT,NB-2)
C$$$      ELSEIF(NB.EQ.2) THEN
C$$$         ND2B = 1
C$$$      ELSEIF(NB.LE.1) THEN
C$$$         ND2B = 0
C$$$      ENDIF

      E0V = 0.0D+00
      ISYV = 1
      DO II=1,NVAL
         E0V = E0V + EFCK(II)
         ISYV = IMUL(ISYV,IOB(II))
      ENDDO

      CALL FLSHBF(6)
!  LOOP OVER ALL POSSIBLE EXCITED DETERMINANTS, LOTS OF DIFFERENT TYPES

! ------------------------------------------------------------------
!  FIRST LOOP OVER ZEROTH ORDER ALPHAS, ORBITALS NUMBERED AS ACTIVE,
!  1,2,ETC
! ------------------------------------------------------------------

! LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1 LOOP1
      DO II=1,NA
         IACON1(II) = II
      ENDDO

      E0AV = E0V
      ISYAV = ISYV

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)1
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB+1,IFA,NACT,
     $     ITGA_EVA,ITGB_EVA,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,1,2,.FALSE.)

      DO 0100 IJK=1,IFA(NACT,NA)

         IF (IJK-1.EQ.MY_TASK) THEN
            CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,
     $           GENSPA_A)

            IF(.NOT.GENSPA_A)GOTO 1001
            IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
            JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LANDET(1,IGA))
 1001       CONTINUE

            E0A0 = E0AV
            ISA1 = ISYAV
            DO II=1,NA
               E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
               ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
            ENDDO
            E0AD = - E0A0 - E0V
            ITAS = ITAB(ISA1)
            
            IF (NVAL.EQ.0) GOTO 1002 
! -------------------------------------------
! RELOOP OVER 1ST ORDER BETA VAL -> ACTIVE
! -------------------------------------------

            CALL EVA_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $           ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,GENSPA_A,
     $           IBCON2,IGA,X,NX,LBNDET,ISYMB,
     $           NBST,LSPA,NAST,CI,TMP4,INPT,SI1,SI2,TMP3,IACON2,
     $           LDISB,LSPB,NA,EVA,NCI,NSYM,NTMPSZ,
     $           ITGB,LANDET,JPOSA,
     $           IMIMAP,IMXMAP,IAELAC,IBELAC,ISPA_A,ISPA_B,ISPA_0,
     $           ISPA_B2,IBELAC2,
     $           LGCOM_PT,NBST_PT,ITGB_EVA,IAMI_PT,IAMA_PT,
     $           IBMI_PT,IBMA_PT,ISCBOX,NPTST,HINT,EPT0,COEFF,HPT)
            
! -------------------------------------------
! END OF RELOOP OVER 1ST ORDER BETA VAL -> ACTIVE
! -------------------------------------------

 1002       CALL DDI_DLBNEXT(MY_TASK)
         END IF                 ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1         
         CALL ADVANC(IACON1,NA,NACT)
 0100 CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'V->A  '
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF
      
!LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2 LOOP2
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)2
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB-1,IFA,NACT,
     $     ITGA_EAE,ITGB_EAE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,2,1,.FALSE.)

      DO 0200 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0201
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))
 0201   CONTINUE

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
C$$$        E0AD = EPT0(1) - E0A0 - E0V
        E0AD = - E0A0 - E0V
        ITAS = ITAB(ISA1)

! --------------------------------------------
! 1ST ORDER BETA ACT -> EXTERNAL (IA(?) -> IE)
! --------------------------------------------

      CALL EAE_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $     ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,
     $     IBCON2,IGA,X,NX,LBNDET,ISYMB,
     $     NBST,LSPA,NAST,CI,TMP4,INPT,TMP3,IACON2,
     $     LDISB,LSPB,NACT,NA,EAE,NCI,NALP,NBLP,NSYM,NTMPSZ,
     $     ITGB,LANDET,ISCBOX,JPOSA,NEXT,SVOOO,M1,M2,SI1,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,ISPA_0,
     $     LGCOM_PT,NBST_PT,ITGB_EAE,IAMI_PT,IAMA_PT,
     $     IBMI_PT,IBMA_PT,NPTST,HINT,EPT0,COEFF,HPT)

        CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

!PUSH IACON1
         CALL ADVANC(IACON1,NA,NACT)
 0200 CONTINUE

! -----------------------------------------
!  END OF 1ST ORDER BETA ACT -> EXTERNAL
! -----------------------------------------

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'A->E  '
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF


! LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3 LOOP3
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)3
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB+2,IFA,NACT,
     $     ITGA_EVVAA,ITGB_EVVAA,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,0,2,.FALSE.)

      DO 0300 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0301
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
!        E0AD = EPT0(1) - E0A0 - E0V
        E0AD =  - E0A0 - E0V
        ITAS = ITAB(ISA1)

! ----------------------------------------------------
! RELOOP LOOP OVER 2ND ORDER BETAS, IV1,IV2 -> IA1,IA2
! ----------------------------------------------------

      IF (NVAL.EQ.0) GOTO 0301

      CALL EVVAA_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $     ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,IBCON2,IGA,
     $     X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,CI,TMP4,INPT,TMP3,LDISB,
     $     LSPB,NA,EVVAA,NSYM,ITGB,JPOSA,SI2,IMXMAP,IMIMAP,IBELAC,
     $     LGCOM_PT,NBST_PT,ITGB_EVVAA,IAMI_PT,IAMA_PT,
     $     IBMI_PT,IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)

 0301 CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
         CALL ADVANC(IACON1,NA,NACT)
 0300 CONTINUE

! ----------------------------------------------------
! END RELOOP LOOP OVER 2ND ORDER BETAS, IV1,IV2 -> IA1,IA2
! ----------------------------------------------------

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VV->AA'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

! LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4 LOOP4
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)4
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB+1,IFA,NACT,
     $     ITGA_EVVAE,ITGB_EVVAE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,0,1,.FALSE.)

      DO 0400 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0401
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
!        E0AD = EPT0(1) - E0A0 - E0V
        E0AD = - E0A0 - E0V
        ITAS = ITAB(ISA1)

      IF (NVAL.EQ.0) GOTO 0401

! ----------------------------------------------------
! RELOOP OVER 2ND ORDER BETAS, IV1,IV2 -> IA2,IE
! ----------------------------------------------------
! THESE INCLUDE ALSO IV1(A)<IV2(B) -> IA2(B),IE(A)
!                    IV1(A)=IV2(B) -> IA2(B),IE(A)
!                    IV1(A)>IV2(B) -> IA2(B),IE(A)
! ***

      CALL EVVAE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX,NVAL,  
     $     IOB,IBCON2,IBELAC,IACON1,NA,ITGB,NBST,NAST,NSYM,  
     $     ISYMB,IMUL,LSPA,LSPB,LDISB,ISYB,IGA,X,NX,LBNDET, 
     $     JPOSA,INPT,M2,NEXT,M1,E0AD,EFCK,CI,SVOOO,TMP3,TMP2,TMP1,TMP4,
     $     EVVAE,ISYV,ITAS,IABOX1,
     $     LGCOM_PT,NBST_PT,ITGB_EVVAE,IAMI_PT,IAMA_PT,
     $     IBMI_PT,IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)
! ----------------------------------------------------
! END RELOOP OVER 2ND ORDER BETAS, IV1,IV2 -> IA1,IE
! ----------------------------------------------------

 0401 CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)

      ENDIF
      ENDIF

! PUSH IACON1
         CALL ADVANC(IACON1,NA,NACT)
 0400 CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VV->AE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

! LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5 LOOP5
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)5
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB-1,IFA,NACT,
     $     ITGA_EVAEE,ITGB_EVAEE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,1,0,.FALSE.)

      DO 0500 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0501
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
C$$$        E0AD = EPT0(1) - E0A0 - E0V
        E0AD = - E0A0 - E0V
        ITAS = ITAB(ISA1)



      IF (NVAL.EQ.0) GOTO 0501

! ----------------------------------------------------
! LOOP OVER 2ND ORDER BETAS ( IV,IA -> IE1<IE2 )
! ----------------------------------------------------
! THESE EXCITATIONS ALSO INCLUDE IV(A),IA(B) -> IE1(A)<IE2(B)
! AND                            IV(A),IA(B) -> IE1(B)<IE2(A)
! AND                            IV(A),IA(B) -> IE1(A),IE1(B)

      CALL EVAEE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX, 
     $     IBELAC,ISYMB,IMUL,NSYM,ITGB,NAST,LSPA,LSPB,      
     $     LDISB,ISYV,IOB,NVAL,ITAS,IMS,X,NX,JPOSA,IGA,M1,NQS,NQQ,     
     $     NACT,E0V,EFCK,EPT0,E0A0,CI,TMP1,TMP2,TMP3,TMP4,SVOVO,EVAEE, 
     $     IBCON2,LBNDET,NBST,IABOX1,IACON1,NA,
     $     LGCOM_PT,NBST_PT,ITGB_EVAEE,IAMI_PT,IAMA_PT,
     $          IBMI_PT,IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)
 
! ------------------------------------------------
! END OF LOOP OVER 2ND ORDER BETAS (IV,IA -> IE1,IE2)
! ------------------------------------------------

 0501 CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK


! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF
       
       IF(ME.EQ.MASTER)CALL FLSHBF(6)

! PUSH IACON1
         CALL ADVANC(IACON1,NA,NACT)
 0500 CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VA->EE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

! LOOP6 LOOP6 LOOP6 LOOP6 LOOP6 LOOP6 LOOP6 LOOP6 LOOP6 LOOP6
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)6
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB-2,IFA,NACT,
     $     ITGA_EAAEE,ITGB_EAAEE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,2,0,.FALSE.)

      DO 0600 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0601
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
C$$$        E0AD = EPT0(1) - E0A0 - E0V
        E0AD = - E0A0 - E0V
        ITAS = ITAB(ISA1)

! ------------------------------------------------
! LOOP OVER 2ND ORDER BETAS (IA1<IA2 -> IE1<IE2)
! ------------------------------------------------

      CALL EAAEE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX,
     $     IABOX1,IBELAC,ITGB,NBST,NAST,NSYM,ISYMB,IMUL,LSPA,LSPB,
     $     LDISB,ISYV,IOB,NVAL,IBCON2,ITAS,IACON2,IGA,X,NX,
     $     LBNDET,JPOSA,NQQ,NQS,M1,IBELAC2,EPT0,E0V,E0A0,EFCK,CI,TMP4,
     $     TMP3,SVOVO,INPT,EAAEE,IACON1,NA,ISCBOX,
     $     ITGB_EAAEE,LGCOM_PT,NBST_PT,IAMI_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)
         
! -----------------------------------------------------
! END OF LOOP OVER 2ND ORDER BETAS (IA1<IA2 -> IE1<IE2)
! -----------------------------------------------------

 0601 CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
       CALL ADVANC(IACON1,NA,NACT)
 0600 CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'AA->EE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

! LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7 LOOP7
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA
         IACON1(II) = II
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)7
      CALL FLSHBF(6)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB,IFA,NACT,
     $     ITGA_EVE,ITGB_EVE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,1,1,.FALSE.)
!      CALL FLSHBF(6)
!      CALL ABRT
      
      DO 0700 IJK=1,IFA(NACT,NA)

        IF (IJK-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

        IF(.NOT.GENSPA_A)GOTO 0701
        IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
        JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $       IDIM,X,NX,LBST,LANDET(1,IGA))

        E0A0 = E0AV
        ISA1 = ISYAV
        DO II=1,NA
           E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
           ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
        ENDDO
C$$$        E0AD = EPT0(1) - E0A0 - E0V
        E0AD = - E0A0 - E0V
        ITAS = ITAB(ISA1)

         IF (NVAL.EQ.0) GOTO 0701
! ---------------------------------------------------------
! LOOP OVER 1ST ORDER ALPHAS, VAL(IV1) -> EXT(IE1)
! THIS LOOP INCLUDES A LOOP OVER 0TH ORDER ALPHAS, SO WE'LL
! TRY TO PUT IT IN THE MAIN 0TH ORDER ALPHA LOOP, IE, HERE
! ---------------------------------------------------------

! I BELIEVE THE BELOW INCLUDES VAL(B) -> EXT(B) ALSO....

! ---------------------------------------------------------
! LOOP OVER 0TH ORDER BETA STRINGS
! ---------------------------------------------------------

      CALL EVE_TERM(NB,IBCON1,NACT,IBBOX1,IMXMAP,IMIMAP,IAELAC,
     $     IBELAC,IACON1,NA,ITGB,NSYM,ISYMB,IMUL,ITAB,LSPA,LSPB,LDISB,
     $     ISYV,X,NX,LBNDET,NBST,NAST,IGA,JPOSA,NVAL,IOB,NEXT,M1,INPT,
     $     M2,ITAS,ISA1,LANDET,IBCON2,IACON2,IABOX1,E0AD,EFCK,CI,TMP4,
     $     TMP3,SI1,SVOOO,EVE,ITBOX,
     $     LGCOM_PT,NBST_PT,ITGB_EVE,IAMI_PT,IAMA_PT,IBMI_PT,
     $     IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)

! ---------------------------------------------------------
! END OF LOOP OVER 0TH ORDER BETA STRINGS
! ---------------------------------------------------------

 0701 CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! PROGRESS REPORT
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
         CALL ADVANC(IACON1,NA,NACT)
 0700 CONTINUE

! END LOOP OVER ZEROTH ORDER ALPHAS

! -------------------------------------------
! *******************************************
! -------------------------------------------

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'V->E  '
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

! LOOP OVER 1ST ORDER ALPHAS, ORBITALS NUMBERED AS ACTIVE, 1,2,ETC

! --------------------------------------------------
! **************************************************
! --------------------------------------------------

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA+1)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)8
      CALL FLSHBF(6)


      IF (NVAL.EQ.0) THEN
         WRITE(6,'("ZERO VALENCE ORBITALS: SKIPPING LOOPS 8 AND 9")')
         GOTO 3401
      ENDIF

! LOOP OVER 1ST ORDER ALPHAS (IV -> IA)

! OUTER LOOP OVER 1 UP ALPHAS


! LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8 LOOP8
! RESET COUNTER
      CALL DDI_DLBRESET()

      DO II=1,NA+1
         IACON1(II) = II
      ENDDO
C$$$      E0A0 = EPT0(1) - 2*E0V
      E0A0 = - 2*E0V

      ISA0 = ISYV

      CALL DDI_DLBNEXT(MY_TASK)

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA+1,NB+1,IFA,NACT,
     $     ITGA_EVVAA_2,ITGB_EVVAA_2,NAST_PT,NBST_PT,LGCOM_PT,
     $     IAMA_PT,IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,0,1,.FALSE.)

      DO 0800 IJK2=1,N1A

        IF (IJK2-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA+1,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

         ISA1 = ISA0
         E0AD1 = E0A0
         DO II=1,NA+1
            E0AD1 = E0AD1 - EFCK(IACON1(II)+NVAL)
            ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
         ENDDO

! ----------------------------------------------
! NOW TO LOOP OVER 1ST ORDER BETAS IV2 -> IA2
! ----------------------------------------------

      CALL EVVAA_TERM_2(E0AD1,EFCK,CI,TMP4,TMP3,EVVAA,NB,IBCON1,
     $     ISYV,IMUL,NSYM,IOB,NVAL,ISA1,ITAB,NA,IACON1,IACON2,
     $     X,NX,LANDET,IBCON2,ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,
     $     LDISB,INPT,SI2,LSPB,IMIMAP,IMXMAP,IBBOX1,
     $     ITBOX,IAELAC,IBELAC,IABOX1,ISPA_0,
     $     LGCOM_PT,NBST_PT,ITGB_EVVAA_2,IAMI_PT,
     $     IAMA_PT,IBMI_PT,IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)

! -----------------------------------
! END OF LOOP OVER 1 UP BETAS
! END LOOP OVER 1ST ORDER BETAS IV2 -> IA2
! -----------------------------------

      CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK


! PROGRESS
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK2,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK2)/FLOAT(IFA(NACT,NA+1)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
         CALL ADVANC(IACON1,NA+1,NACT)
 0800    CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VV->AA'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF


! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA+1)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)9
      CALL FLSHBF(6)


! LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9 LOOP9
! RESET COUNTER
      CALL DDI_DLBRESET()
      CALL DDI_DLBNEXT(MY_TASK)

      DO II=1,NA+1
         IACON1(II) = II
      ENDDO
C$$$      E0A0 = EPT0(1) - 2*E0V
      E0A0 = - 2*E0V
      ISA0 = ISYV

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA+1,NB-1,IFA,NACT,
     $     ITGA_EVAAE,ITGB_EVAAE,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,
     $     IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,1,0,.FALSE.)

      DO 0900 IJK2=1,N1A

        IF (IJK2-1.EQ.MY_TASK) THEN
        CALL GETPTBOX(IABOX1,IACON1,NA+1,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

         ISA1 = ISA0
         E0AD1 = E0A0
         DO II=1,NA+1
            E0AD1 = E0AD1 - EFCK(IACON1(II)+NVAL)
            ISA1 = IMUL(ISA1,IOB(IACON1(II)+NVAL))
         ENDDO


! ------------------------------------------
! NOW TO LOOP OVER 1ST ORDER BETAS IA2 -> IE
! ------------------------------------------

      CALL EVAAE_TERM(NB,IBCON1,ISYV,E0AD1,EFCK,NVAL,IMUL,
     $     IOB,ITAB,ISA1,NA,IACON1,IACON2,X,NX,LANDET,
     $     IBCON2,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $     CI,INPT,NEXT,M1,M2,SVOOO,TMP3,TMP4,EVAAE,NSYM,ITGB,
     $     IBBOX1,IMXMAP,IMIMAP,ITBOX,IAELAC,
     $     IBELAC,IABOX1,
     $     LGCOM_PT,NBST_PT,ITGB_EVAAE,IAMI_PT,
     $     IAMA_PT,IBMI_PT,IBMA_PT,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)
! ------------------------------------------
! END OF LOOP OVER 1ST ORDER BETAS IA2 -> IE
! ------------------------------------------

      CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK


! PROGRESS
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK2,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK2)/FLOAT(IFA(NACT,NA+1)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
         CALL ADVANC(IACON1,NA+1,NACT)
 0900 CONTINUE


 3401 CONTINUE

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VA->AE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF


! END OF RELOOP OVER 1ST ORDER ALPHAS, VAL (IV) -> ACTIVE

! --------------------------------------------------
! **************************************************
! --------------------------------------------------

! -------------------------------------------
! *******************************************
! -------------------------------------------

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA-1)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)10
      CALL FLSHBF(6)

! EXPERIMENT, RELOOP OVER ALPHA ACT (IA?)  -> EXTERNAL (IE)

! LOOP10 LOOP10 LOOP10 LOOP10 LOOP10 LOOP10 LOOP10 LOOP10 LOOP10 LOOP10
      CALL DDI_DLBRESET()
      CALL DDI_DLBNEXT(MY_TASK)

      DO II=1,NA-1
         IACON1(II) = II
      ENDDO

      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA-1,NB-1,IFA,NACT,
     $     ITGA_EAAEE_2,ITGB_EAAEE_2,NAST_PT,NBST_PT,LGCOM_PT,
     $     IAMA_PT,IBMA_PT,IBMI_PT,IAMI_PT,ISCBOX,NA,NA,1,0,.FALSE.)


         DO 1000 IJK3=1,ND1A

        IF (IJK3-1.EQ.MY_TASK) THEN

! DETERMINE SYMMETRY OF ALPHA STRING

        CALL GETPTBOX(IABOX1,IACON1,NA-1,MSTA,NSPACE,IAMA,IAMI,GENSPA_A)

            ISA0 = ISYV
            E0A0 = E0V
            DO II=1,NA-1
               E0A0 = E0A0 + EFCK(IACON1(II)+NVAL)
               ISA0 = IMUL(ISA0,IOB(IACON1(II)+NVAL))
            ENDDO

! ---------------
! NOW TO LOOP OVER 1ST ORDER OVER BETA (IA2) -> (IE2)
! ---------------

      CALL EAAEE_TERM_2(EAAEE,EPT0,E0V,E0A0,EFCK,CI,TMP4,TMP3,TMP1,
     $     SVOVO,NB,IBCON1,ISYV,IMUL,NSYM,IOB,NVAL,NA,ISA0,
     $     ITAB,IACON1,IACON2,X,NX,LANDET,IBCON2,ITGB,
     $     LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,NQS,NQQ,M1,INPT,
     $     IABOX1,IBBOX1,IAELAC,IBELAC,
     $     IMIMAP,IMXMAP,ISPA_0,
     $     LGCOM_PT,NBST_PT,ITGB_EAAEE_2,IAMI_PT,
     $     IAMA_PT,IBMI_PT,IBMA_PT,ISCBOX,ITBOX,
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)

! ------
! END OF LOOP OVER 1-DOWN BETA
! ------

         CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK



! PROGRESS
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK3,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK3)/FLOAT(IFA(NACT,NA-1)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

! PUSH IACON1
            CALL ADVANC(IACON1,NA-1,NACT)
 1000    CONTINUE


! END OF LOOP OVER 1-DOWN ALPHA

! END OF EXPERIMENT

! -------------------------------------------
! *******************************************
! -------------------------------------------

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'AA->EE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

      IF (NVAL.EQ.0) THEN
         WRITE(6,'("ZERO VALENCE ORBITALS: SKIPPING LOOP 11")')
         CALL DDI_DLBRESET
         GOTO 9600
      END IF

! ------------------------------------------------------------
! NOW FOR THE FINAL CONTRIBUTION, WHICH IS IV1,IV2 -> IE1,IE2
! AS DAVIDSON ET AL POINTED OUT (J. CHEM. PHYS. 1994,100,3672)
! FOR EACH EXCITATION, THERE IS ONLY ONE VIRTUAL DETERMINANT
! WHICH SIMPLIFIES THINGS INCREDIBLY !!!!!!!!!!!!!!!!!!!!!!!!
! ------------------------------------------------------------

! STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+IFA(NACT,NA)/10.0D+00)
      IF(ME.EQ.MASTER)WRITE(6,7122)11
      CALL FLSHBF(6)

! LOOP OVER 0TH ORDER ALPHAS FIRST
! LOOP11 LOOP11 LOOP11 LOOP11 LOOP11 LOOP11 LOOP11 LOOP11 LOOP11 LOOP11
      CALL DDI_DLBRESET()
      CALL DDI_DLBNEXT(MY_TASK)

      
!      E0A0 = EPT0(1) - E0V - E0V
      E0A0 = - E0V - E0V

      CALL RESETCO(IABOX1,NSPACE,NA,IAMA,IAMI,ISCBOX)
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)

      DO 9500 IGA = 1,ITGA                     
         DO 9505 IJK4 = NAST(IGA)+1,NAST(IGA+1)
            IF (IJK4-1.EQ.MY_TASK) THEN

         ISA0 = ISYMA(IJK4)
         ITAS = ITAB(ISA0)
         E0A2 = E0A0
         DO II=1,NA
            E0A2 = E0A2 - EFCK(IACON1(II)+NVAL)
         ENDDO

! LOOP OVER CORRECT 0TH ORDER BETAS

         CALL RESETCO(IBBOX1,NSPACE,NB,IBMA,IBMI,ISCBOX)
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)

         DO 9510 IGB = 1,ITGB
            IF(LGCOM(IGB,IGA).NE.1)GOTO 9507
            DO 9515 INB1 = NBST(IGB) +1,NBST(IGB +1) 
               
            IF (ISYMB(INB1).NE.ITAS) GOTO 9509
            E0B0 = E0A2
            DO II=1,NB
               E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
            ENDDO

            ITP0 = LSPA(IJK4)+LDISB(ITAS,IGB,IGA) +LSPB(INB1)

C$$$            COEFF(1) = 2.0D+00*CI(ITP0)*CI(ITP0)
C$$$            EINT = 0.0D+00

            DO JJ=1,NPTST
               DO KK=1,NPTST
                  TMP1(JJ,KK) = 2.0D+00*CI(ITP0,JJ)*CI(ITP0,KK)
                  HINT(JJ,KK) = 0.0D+00
               ENDDO
            ENDDO

! LOOP OVER ALL POSSIBLE EXCITATIONS

            IE1T = -M1
            DO 9542 JE1=NQS,NQQ
               IS1 = IOB(JE1)
               E0B0E = E0B0 - EFCK(JE1)
               IE1T = IE1T + M1
            DO 9544 IV1=1,NVAL
               IS2 = IOB(IV1)
               IP1 = IMUL(IS1,IS2)
               E0B0EV = E0B0E + EFCK(IV1)
               IE1V1 = IE1T + IV1

            IE2T = -M1
            DO 9552 JE2=NQS,JE1-1
               IS3 = IOB(JE2)
               IPT  = IMUL(IS3,IP1)
               E0B0EVE = E0B0EV - EFCK(JE2)
               IE2T = IE2T + M1
               IE2V1 = IE2T + IV1
               INT1T = INPT(IE1V1) + IE2T
            DO 9553 IV2 = 1,IV1-1
               IS4 = IOB(IV2)
               IF (IS4.NE.IPT) GOTO 9553
               E0B0EVEV = E0B0EVE + EFCK(IV2)
               IE1V2 = IE1T + IV2

               INT1 = INT1T + IV2
               INT2 = INPT(IE1V2) + IE2V1
               T1 = SVOVO(INT1)
               T2 = SVOVO(INT2)
               TT = T1 - T2
!        EINT = EINT + (T1*T1 + T2*T2 + TT*TT)/E0B0EVEV
        DO JJ=1,NPTST
        DO KK=1,NPTST
           HINT(JJ,KK)=HINT(JJ,KK) +
     *   (T1*T1 + T2*T2 + TT*TT)/(E0B0EVEV+EPT0(JJ))
        ENDDO
        ENDDO

 9553       CONTINUE

! IV2 = IV1, JE1>JE2

            IF (IS2.NE.IPT) GOTO 9552
            E0B0EVEV = E0B0EVE + EFCK(IV1)
            INT1 = INPT(IE1V1) + IE2V1
            T1 = SVOVO(INT1)
!            EINT = EINT + (T1*T1)/E0B0EVEV
            DO JJ=1,NPTST
            DO KK=1,NPTST
            HINT(JJ,KK)=HINT(JJ,KK) + (T1*T1)/
     *              (E0B0EVEV+EPT0(JJ))
            ENDDO                                                                         
            ENDDO

 9552       CONTINUE

! NOW FOR JE1=JE2, IV1>IV2

            IPT = IMUL(IS1,IP1)
            E0B0EVE = E0B0EV - EFCK(JE1)
            DO 9554 IV2 = 1,IV1-1
               IS4 = IOB(IV2)
               IF (IS4.NE.IPT) GOTO 9554
               E0B0EVEV = E0B0EVE + EFCK(IV2)
               IE1V2 = IE1T + IV2
               INT1 = INPT(IE1V1) + IE1V2
               T1 = SVOVO(INT1)
!               EINT = EINT + (T1*T1)/E0B0EVEV
               DO JJ=1,NPTST
               DO KK=1,NPTST
               HINT(JJ,KK)=HINT(JJ,KK) + (T1*T1)/
     *                 (E0B0EVEV+EPT0(JJ))
               ENDDO
               ENDDO

 9554       CONTINUE

! NOW FOR JE1=JE2,IV1=IV2

             E0B0EVEV = E0B0EV + EFCK(IV1) - EFCK(JE1)
             INT1 = INPT(IE1V1+1)
             T1 = SVOVO(INT1)
!             EINT = EINT + 0.5D+00*(T1*T1)/E0B0EVEV
             DO JJ=1,NPTST
             DO KK=1,NPTST
             HINT(JJ,KK)=HINT(JJ,KK) +
     *       0.5D+00*(T1*T1)/(E0B0EVEV+EPT0(JJ))
             ENDDO
             ENDDO

 9544       CONTINUE
 9542       CONTINUE


!        EVVEE = EVVEE + COEFF(1)*EINT
         DO JJ=1,NPTST
         DO KK=1,NPTST
            HPT(JJ,KK) = HPT(JJ,KK) + TMP1(JJ,KK)*HINT(JJ,KK)
            EVVEE = EVVEE + TMP1(JJ,KK)*HINT(JJ,KK)
         ENDDO
         ENDDO

! NEXT B-STRING                                          
 9509                    CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 9515                 CONTINUE
! NEXT B-GROUP                                           
 9507                CALL PUSHCO(IBBOX1,NSPACE,NB,IBMA,IBMI,ISCBOX,IEND)
                     CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 9510              CONTINUE

! END OF 0TH ORDER BETAS

        CALL DDI_DLBNEXT(MY_TASK)
      END IF     ! MY TASK

! NEXT A-STRING                                          
                CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)

! PROGRESS
      IF(ME.EQ.MASTER)THEN
      IF(MOD(IJK4,ITOP_MOD).EQ.0)THEN
       WRITE(6,6777)((FLOAT(IJK4)/FLOAT(IFA(NACT,NA)))*100)
       CALL FLSHBF(6)
      ENDIF
      ENDIF

 9505        CONTINUE
! NEXT A-GROUP                                           
             CALL PUSHCO(IABOX1,NSPACE,NA,IAMA,IAMI,ISCBOX,IEND)
             CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
 9500     CONTINUE

! END OF LOOP OVER 0TH ORDER ALPHAS

! ----------------------------------------
! END OF ALL VV -> EE EXCITATIONS
! ----------------------------------------

! STATUS UPDATE
      IF(ME.EQ.MASTER)THEN
         WRITE(6,7123)'VV->EE'
         CALL TIMIT(1)
         CALL FLSHBF(6)
      ENDIF

      CALL DDI_DLBRESET         ! HMRPT0

 9600 CONTINUE 
!     DO INTERNAL EXCITATIONS (IF APPLICABLE)
      IF(NSPACE.EQ.1)RETURN

      IF(ME.EQ.MASTER)WRITE(6,"(/'WORKING ON INTERNAL MRPT TERMS')")
     
      CALL ORMASPT_CLASS_TABLES(IABOX1,IBBOX1,NA,NB,IFA,NACT,ITGA_INT,
     $     ITGB_INT,NAST_PT,NBST_PT,LGCOM_PT,IAMA_PT,IBMA_PT,IBMI_PT,
     $     IAMI_PT,ISCBOX,2,2,2,2,.FALSE.)

      CALL INTERNAL_MRPT(IABOX1,IBBOX1,ISCBOX,
     $     NA,NB,NVAL,ITGB,IBMA_PT,IBMI_PT,NAST,LGCOM,LGCOM_PT,
     $     NBST_PT,ITGB_INT,IACON1,IACON2,IBCON1,IBCON2,SI1,SI2,INPT,
     $     E0V,EFCK,EPT0,LSPA,LDISB,LBNDET,LANDET,X,NX,NSYM,CI,
     $     ITGA_INT,NAST_PT,IAMI_PT,IAMA_PT,NPTST,NCI,E_CCAS,TMP1,TMP2,
     $     TMP3,
     $     NBST,IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,
     $     LSPB,IMUL,ISYV,IOB,ISYMB,ITAB(1))

      IF(ME.EQ.MASTER)THEN
         WRITE(6,'("...FINSIHED WITH INTERNAL TERMS...")')
         CALL TIMIT(1)
      ENDIF

      CALL DDI_DLBRESET   ! HMRPT0

      RETURN

 6777 FORMAT(10X,F8.1,' % DONE')
 7122 FORMAT(/X,'WORKING ON LOOP',X,I2,X,'OF 11')
 7123 FORMAT(X,'...FINISHED WITH',X,A6,X,'TERMS...')

      END SUBROUTINE 
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVA_TERM
      SUBROUTINE EVA_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $     ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,GENSPA_A,
     $     IBCON2,IGA,X,NX,LBNDET,ISYMB,
     $     NBST,LSPA,NAST,CI,TMP4,INPT,SI1,SI2,TMP3,IACON2,
     $     LDISB,LSPB,NA,EVA,NCI,NSYM,NTMPSZ,
     $     ITGB,LANDET,JPOSA,
     $     IMIMAP,IMXMAP,IAELAC,IBELAC,ISPA_A,ISPA_B,ISPA_0,
     $     ISPA_B2,IBELAC2,
     $     LGCOM_EVA,NBST_EVA,ITGB_EVA,IPTAMI,IPTAMA,
     $     IPTBMI,IPTBMA,ISCBOX,NPTST,HINT,EPT0,COEFF,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      LOGICAL GENSPA_A
      INTEGER NSYM,ITGB,ITGB_EVA
      INTEGER IACON1(*),IBCON1(*),IACON2(*),IBCON2(*),ISYMB(*),
     $     LSPA(*),LSPB(*),IMUL(NSYM,*),IOB(*),INPT(*),ISYV,
     $     LDISB(NSYM,ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),NAST(*),NBST(*),X(*),IABOX1(*),
     $     IBBOX1(*),IMXMAP(*),IMIMAP(*),IBELAC(*),IAELAC(*),
     $     IBELAC2(*),ISPA_0(*),NB,NA,NVAL,ITAS,IGA,NX,
     $     NCI,NTMPSZ,JPOSA,ISPA_A,ISPA_B,ISPA_B2,
     $     I,IEXTYP,II,IJB,INDEX,ISPA_CRIT,ISYB,
     $     ISYL,NSPA_0,ITBOX(*),ORMAS_GET_GROUP,
     $     NPTST,JJ,KK
      DOUBLE PRECISION E0AD,SI1(*),SI2(*),EFCK(*),CI(NCI,*),
     $     HINT(NPTST,*),TMP3(NTMPSZ,NPTST),TMP4(NTMPSZ,NPTST),EVA,E0B0,
     $     EPT0(*),COEFF(NPTST)
      DOUBLE PRECISION HPT(NPTST,*)

      INTEGER LGCOM_EVA(ITGB_EVA,*),NBST_EVA(*),IPTAMI(*),
     $     IPTAMA(*),IPTBMI(*),IPTBMA(*),
     $     IEND,IGA_EVA,
     $     IGB_EVA,ISCBOX(*)

!!!CREATED ON THE STACK
       INTEGER ISPA_OVER(2),ISPA_UNDER(2)

! TYPE OF EXCITATIONS
!X    2  0  0  ...  0    :6
!X    1  1  0  ...  0    :6
!X    0  0  0  ...  0    :1
!X    1 -1  0  ...  0    :4
!X    2 -1  0  ...  0    :9
!X    1  1 -1  ...  0    :9
!X   -1  0  0  ...  0    :-3
!X    1  0  0  ...  0    :3
! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

      IGA_EVA = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)

! LOOP OVER 1 UP BETAS

      CALL RESETCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
      DO IGB_EVA = 1,ITGB_EVA
         IEXTYP = LGCOM_EVA(IGB_EVA,IGA_EVA)

         IF (IEXTYP.GT.9.OR.IEXTYP.LT.(-3))GOTO 123
!        IF (IEXTYP.NE.9)GOTO 123
!         IF (IEXTYP.NE.3)GOTO 123

         IAELAC(1) = 0                                                  !
         IBELAC(1) = 0                                                  !
         DO I = 1,NSPACE                                                !
            ITBOX(I) = IABOX1(I) + IBBOX1(I)
            IAELAC(I+1)=IAELAC(I)+IABOX1(I)                             !
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I)                             !
            IMIMAP(I)=ITBOX(I)-MINI(I)                                  !
            IMXMAP(I)=ITBOX(I)-MAXI(I)                                  ! 
         ENDDO                                                          !

         DO IJB = 1,NBST_EVA(IGB_EVA)

C$$$         IAELAC(1) = 0                                                  !
C$$$         IBELAC(1) = 0                                                  !
C$$$         DO I = 1,NSPACE                                                !
C$$$            ITBOX(I) = IABOX1(I) + IBBOX1(I)
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I)                             !
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I)                             !
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I)                                  !
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I)                                  ! 
C$$$         ENDDO                                                          !

C$$$      DO II=1,NB+1
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2900 IJB=1,N1B
C$$$
C$$$!NEWER!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!X    2  0  0  ...  0    :6
C$$$!X    1  1  0  ...  0    :6
C$$$!X    0  0  0  ...  0    :1
C$$$!X    1 -1  0  ...  0    :4
C$$$!X    2 -1  0  ...  0    :9
C$$$!X    1  1 -1  ...  0    :9
C$$$!X   -1  0  0  ...  0    :-3
C$$$!X    1  0  0  ...  0    :3
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!
C$$$
C$$$         CALL GETBOX(IBBOX1,IBCON1,NB+1,MSTA,NSPACE)                    !
C$$$         ISUM = 0                                                       !
C$$$         IABSUM = 0                                                     !
C$$$         DO I = 1,NSPACE                                                !
C$$$            IMXMAP(I)=0                                                 !
C$$$            IMIMAP(I)=0                                                 !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I)                                !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I)           !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I)           !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I)                               !
C$$$            ISUM = ISUM + ITMAP(I)                                      !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I))                              !
C$$$         ENDDO                                                          !
C$$$         ISUMSN = ISIGN(1,ISUM)                                         !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM))                      !
C$$$
C$$$         IF (IEXTYP.GT.9.OR.IEXTYP.LT.(-3))GOTO 2902                   
C$$$C$$$         IF (IEXTYP.NE.(3))GOTO 2902                   
C$$$
C$$$         IAELAC(1) = 0                                                  !
C$$$         IBELAC(1) = 0                                                  !
C$$$         DO I = 1,NSPACE                                                !
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I)                             !
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I)                             !
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I)                                  !
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I)                                  ! 
C$$$         ENDDO                                                          !

      ISYB = ISYV
      E0B0 = E0AD
      DO II=1,NB+1
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
         ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
      ENDDO
      ISYL = IMUL(ITAS,ISYB)

C$$$         WRITE(6,'(40(1H=))')                                         
C$$$         WRITE(6,"('BUP',2I3,' | ',3I3)")IACON1(1:NA),IBCON1(1:NB+1)
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB+1,                       
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,                 
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),                             
C$$$     $        LSPA,LSPB,LDISB,2,1)                                    
C$$$      CALL FLSHBF(6)
! START IEXTYP  3:     1  0  0 ... 0
      IF(IEXTYP.EQ.(3))THEN
         
         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMXMAP(I).GT.0)THEN
               ISPA_OVER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0)=I
            ENDIF
         ENDDO                  !!!I   

         ISPA_B = ISPA_OVER(1)
      CALL EVA_DETACH_B(NB,EFCK,IBCON1,NVAL,IOB,
     $    IBCON2,X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,
     $    JPOSA,IGA,LDISB,LSPB,CI,TMP4,IACON1,NA,SI1,SI2,TMP3,NSYM,
     $    ITGB,INPT,IBBOX1,IBELAC,ISPA_B,
     $    E0B0,ISYL,EPT0,NPTST,NCI,NTMPSZ,COEFF)
         
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
         DO I = 1,NSPACE
            ISPA_B2 = I

            IF(IMIMAP(ISPA_B2).LT.1)THEN

               ISPA_CRIT = ISPA_B2
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)
               
            ELSE                !!!(IMIMAP(ISPA_B2).LT.1)
               
               IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) -1
               DO II = 1,NSPACE
                  ISPA_CRIT = II
                  IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

               ENDDO            !!!II
               
               IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) +1

            ENDIF               !!!(IMIMAP(ISPA_B2).LT.1)
            
         ENDDO                  !!!I
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1


         ISPA_B = ISPA_OVER(1)
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
         DO I = 1,NSPACE
            ISPA_A = I
            IF(IMIMAP(ISPA_A).LT.1)THEN
               ISPA_CRIT = ISPA_A

      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ELSE                !!!(IMIMAP(ISPA_A).LT.1)

               IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
               DO II = 1,NSPACE
                  ISPA_CRIT = II
                  IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ENDDO               !!!II
               IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
            ENDIF               !!!(IMIMAP(ISPA_A).LT.1)

         ENDDO                  !!!I
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1

         ISPA_A = ISPA_OVER(1)
         DO I = 1,NSPA_0
            ISPA_B = ISPA_0(I)
            IF(IMIMAP(ISPA_B).LT.1)THEN
               ISPA_CRIT = ISPA_B

      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ELSE                !!!(IMIMAP(ISPA_B).LT.1)

               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
               DO II = 1,NSPA_0
                  ISPA_CRIT = ISPA_0(II)
                  IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ENDDO               !!!II
               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1

            ENDIF               !!!(IMIMAP(ISPA_B).LT.1)

         ENDDO                  !!!I

      GOTO 777
         
      ENDIF                     !!!(IEXTYP.EQ.(3))
! END IEXTYP  3

! START IEXTYP  -3:    -1  0  0 ... 0
      IF(IEXTYP.EQ.(-3))THEN

         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMIMAP(I).LT.0)THEN
               ISPA_UNDER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0)=I
            ENDIF
         ENDDO                  !!!I

         ISPA_CRIT = ISPA_UNDER(1)
         DO I = 1,NSPACE-1
            IF(IMIMAP(ISPA_0(I)).LT.1)CYCLE
            ISPA_B = ISPA_0(I)
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
            
            DO II = I,NSPACE-1
               IF(IMIMAP(ISPA_0(II)).LT.1)CYCLE
               ISPA_B2 = ISPA_0(II)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ENDDO               !!!II
            
            DO II = 1,NSPACE-1
               IF(IMIMAP(ISPA_0(II)).LT.1)CYCLE
               ISPA_A = ISPA_0(II)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ENDDO               !!!II
            
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
         ENDDO                  !!!I
         
      GOTO 777

      ENDIF                     !!!(IEXTYP.EQ.(-3))
!END IEXTYP  -3



! START IEXTYP  4:     1 -1  0 ... 0
      IF(IEXTYP.EQ.4)THEN

         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMXMAP(I).GT.0)THEN
               ISPA_OVER(1) = I
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = I
            ELSEIF(IMIMAP(I).LT.0)THEN
               ISPA_UNDER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO
         
         IMIMAP(ISPA_OVER(1)) = IMIMAP(ISPA_OVER(1)) -1
         DO I = 1,NSPACE-1
            ISPA_B = ISPA_OVER(1)
            IF(IMIMAP(ISPA_0(I)).LT.1)CYCLE
            ISPA_B2 = ISPA_0(I)
            ISPA_CRIT = ISPA_UNDER(1)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

         ENDDO                  !!!I

         DO I = 1,NSPACE-1
            IF(IMIMAP(ISPA_0(I)).LT.1)CYCLE
            ISPA_B = ISPA_0(I)
            ISPA_CRIT = ISPA_UNDER(1)
            ISPA_A = ISPA_OVER(1)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            IF(ISPA_B.EQ.ISPA_A)CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

         ENDDO                  !!!I
         IMIMAP(ISPA_OVER(1)) = IMIMAP(ISPA_OVER(1)) +1
         GOTO 777
      ENDIF                     !!!(IEXTYP.EQ.4)
!END IEXTYP  4

! START IEXTYP  9:     2 -1  0 ... 0
!                      1  1 -1 ... 0
      IF(IEXTYP.EQ.9)THEN

         ISPA_OVER(1) = 0
         ISPA_OVER(2) = 0

         INDEX = 0
         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMXMAP(I).EQ.1)THEN
               INDEX = INDEX +1
               ISPA_OVER(INDEX) = I
            ELSEIF(IMXMAP(I).EQ.2)THEN
               ISPA_OVER(1) = I
               ISPA_OVER(2) = I
            ELSEIF(IMIMAP(I).LT.0)THEN
               ISPA_UNDER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO

         ISPA_B = ISPA_OVER(1)
         ISPA_B2 = ISPA_OVER(2)
         ISPA_A = ISPA_OVER(2)
         ISPA_CRIT = ISPA_UNDER(1)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_B2,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

         IF(ISPA_B.NE.ISPA_B2)THEN
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B2,0,ISPA_CRIT,ISPA_B,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)
         ENDIF                  !!!(ISPA_B.NE.ISPA_B2)
      GOTO 777

      ENDIF                     !!!(IEXTYP.EQ.9)
!END IEXTYP  9

! START IEXTYP  6:     2  0  0 ... 0
!                      1  1  0 ... 0
      IF(IEXTYP.EQ.6)THEN

         ISPA_OVER(1) = 0
         ISPA_OVER(2) = 0
         
         INDEX = 0
         NSPA_0 = 0
         
         DO I = 1,NSPACE
            IF(IMXMAP(I).EQ.1)THEN
               INDEX = INDEX +1
               ISPA_OVER(INDEX) = I
            ELSEIF(IMXMAP(I).EQ.2)THEN
               ISPA_OVER(1) = I
               ISPA_OVER(2) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO
         
         ISPA_B = ISPA_OVER(1)
         ISPA_B2 = ISPA_OVER(2)
         DO I = 1,NSPA_0
            ISPA_CRIT = ISPA_0(I)
            IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
            
            IF(.NOT.GENSPA_A) GOTO 2000
            
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

 2000       CONTINUE            !!!(.NOT.GENSPA_A)
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            IF(ISPA_B.NE.ISPA_B2)THEN
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

         ENDIF                  !!!(ISPA_B.NE.ISPA_B2)
      ENDDO                     !!!I

      GOTO 777
      ENDIF                     !!!(IEXTYP.EQ.6)
!END IEXTYP  6

       
! START IEXTYP  1:     0  0  0 ... 0
      IF(IEXTYP.EQ.1)THEN

!SINGLES FIRST
      IF(.NOT.GENSPA_A) GOTO 1000
      DO ISPA_B = 1,NSPACE
         IF(IMIMAP(ISPA_B).LT.1)CYCLE
      CALL EVA_DETACH_B(NB,EFCK,IBCON1,NVAL,IOB,
     $    IBCON2,X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,
     $    JPOSA,IGA,LDISB,LSPB,CI,TMP4,IACON1,NA,SI1,SI2,TMP3,NSYM,
     $    ITGB,INPT,IBBOX1,IBELAC,ISPA_B,
     $    E0B0,ISYL,EPT0,NPTST,NCI,NTMPSZ,COEFF)

      ENDDO                     !!!ISPA_B
 1000 CONTINUE 
         
!DOUBLES NEXT (BB)
      IF(.NOT.GENSPA_A) GOTO 1010
      DO ISPA_B = 1,NSPACE
         IF(IMIMAP(ISPA_B).LT.1)CYCLE
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
         DO ISPA_B2 = ISPA_B,NSPACE
            IF (IMIMAP(ISPA_B2).LT.1)THEN
               ISPA_CRIT = ISPA_B2
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ELSE                !!!(IMIMAP(ISPA_B2).LT.1)
               IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) -1
               IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) -1
               DO ISPA_CRIT = 1,NSPACE
                  IF (IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.FALSE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

               ENDDO            !!!ISPA_CRIT
               IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) +1
               IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) +1
            ENDIF               !!!(IMIMAP(ISPA_B2).LT.1)
         ENDDO                  !!!ISPA_B2
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
      ENDDO                     !!!ISPA_B
 1010 CONTINUE 

!NOW FOR (BA)
      DO ISPA_B = 1,NSPACE
         IF(IMIMAP(ISPA_B).LT.1)THEN
            ISPA_CRIT = ISPA_B           
            DO ISPA_A = 1,NSPACE
               IF(ISPA_A.EQ.ISPA_B)CYCLE
               IF(IMIMAP(ISPA_A).LT.1)CYCLE
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

            ENDDO               !!!ISPA_A
         ELSE                   !!!(IMIMAP(ISPA_B).LT.1)
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
            DO ISPA_A = 1,NSPACE
               IF (IMIMAP(ISPA_A).LT.1)THEN
                  ISPA_CRIT = ISPA_A
      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

               ELSE             !!!(IMIMAP(ISPA_A).LT.1)
                  IMIMAP(ISPA_A) = IMIMAP(ISPA_A) -1
                  IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
                  DO ISPA_CRIT = 1,NSPACE
                     IF (IMXMAP(ISPA_CRIT).GT.(-1))CYCLE

      CALL  EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,.TRUE.,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)

                  ENDDO         !!!ISPA_CRIT
                  IMIMAP(ISPA_A) = IMIMAP(ISPA_A) +1
                  IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
               ENDIF            !!!(IMIMAP(ISPA_A).LT.1)
            ENDDO               !!!ISPA_A
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
         ENDIF                  !!!(IMIMAP(ISPA_B).LT.1)
      ENDDO                     !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
!END IEXTYP  1
      

! END OF SINGLE DEXCITES IA -> IV
 777  CONTINUE 

C$$$         EINT = 0.0D+00
C$$$         DO II=1,NVAL
C$$$            EINT = EINT + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO
C$$$
C$$$         EVA = EVA + 2.0D+00*EINT

         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,NVAL
         HINT(JJ,KK)=HINT(JJ,KK) + (TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO II=1,NVAL
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
               EVA = EVA + 2.0D+00*HINT(JJ,KK) 
            ENDDO
         ENDDO


C$$$ 2902    CALL ADVANC(IBCON1,NB+1,NACT)
C$$$ 2900 CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)

      ENDDO                     !!!IGB_EVA

      RETURN
      END SUBROUTINE EVA_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAE_TERM
      SUBROUTINE  EAE_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $     ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,
     $     IBCON2,IGA,X,NX,LBNDET,ISYMB,
     $     NBST,LSPA,NAST,CI,TMP4,INPT,TMP3,IACON2,
     $     LDISB,LSPB,NACT,NA,EAE,NCI,NALP,NBLP,NSYM,NTMPSZ,
     $     ITGB,LANDET,ISCBOX,JPOSA,NEXT,SVOOO,M1,M2,SI1,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,ISPA_0,
     $     LGCOM_EAE,NBST_EAE,ITGB_EAE,IPTAMI,IPTAMA,
     $          IPTBMI,IPTBMA,NPTST,HINT,EPT0,COEFF,HPT)


      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER NPTST,NEXT,NCI,NTMPSZ
      INTEGER NA,NB,ISYV,NVAL,NSYM,ITAS,ITGB,IGA,NX,NBLP,
     $     NALP,NACT,JPOSA,M1,M2,I
      DOUBLE PRECISION HPT(NPTST,*)
      DOUBLE PRECISION SVOOO(NEXT,*),EFCK(*),CI(NCI,*),SI1(*),
     $     HINT(NPTST,*),EPT0(*),COEFF(*)
      DOUBLE PRECISION TMP3(NTMPSZ,*),TMP4(NTMPSZ,*),E0AD,EAE,E0B0
      INTEGER IACON1(NA+2),IBCON1(NA+2),IACON2(NA+2),IBCON2(NA+2)
      INTEGER ISYMB(NBLP),LSPA(NALP),LSPB(NBLP)
      INTEGER IMUL(NSYM,NSYM),IOB(*),KK
      INTEGER INPT(*),ISPA_B,ISYB1,NSPA_0,ISPA_A,ISPA_B2,ISPA_CRIT


      INTEGER LDISB(NSYM,ITGB,*),LANDET(NSPACE,*)
      INTEGER LBNDET(NSPACE,*),NAST(*),NBST(*),X(*)
      INTEGER IABOX1(*),IBBOX1(*),ISCBOX(*)
      INTEGER IMXMAP(*),IMIMAP(*),IBELAC(*),IBELAC2(*),IAELAC(*),
     $     ISPA_0(*),IEXTYP,II,IJB,ISYL,
     $     JJ,III
      INTEGER ORMAS_GET_GROUP
      INTEGER ITBOX(*)

      INTEGER ITGB_EAE,LGCOM_EAE(ITGB_EAE,*),NBST_EAE(*),IPTAMI(*),
     $     IPTAMA(*),IPTBMI(*),IPTBMA(*),
     $     IEND,IGA_EAE,
     $     IGB_EAE

!!!CREATED ON THE STACK
      INTEGER ISPA_OVER(3),ISPA_UNDER(3),NSPA_D

      ISPA_A = 0 !SET TO KEEP FTNCHEK FROM COMPLAINING
      IGA_EAE = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)

! LOOP OVER DOWN 1 BETAS FIRST

      CALL RESETCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      DO IGB_EAE = 1,ITGB_EAE
         IEXTYP = LGCOM_EAE(IGB_EAE,IGA_EAE)

         IF (IEXTYP.GT.4.OR.IEXTYP.LT.(-9))GOTO 123

         IAELAC(1) = 0                                                  !
         IBELAC(1) = 0                                                  !
         DO I = 1,NSPACE                                                !
            ITBOX(I) = IABOX1(I) + IBBOX1(I)
            IAELAC(I+1)=IAELAC(I)+IABOX1(I)                             !
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I)                             !
            IMIMAP(I)=ITBOX(I)-MINI(I)                                  !
            IMXMAP(I)=ITBOX(I)-MAXI(I)                                  ! 
         ENDDO                                                          !

         DO IJB = 1,NBST_EAE(IGB_EAE)

C$$$      DO II=1,NB-1
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2230 IJB=1,ND1B


C$$$!NEWER!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!X   -2  1  0  ...  0    :-9
C$$$!X   -1 -1  1  ...  0    :-9
C$$$!X   -2  0  0  ...  0    :-6
C$$$!X   -1 -1  0  ...  0    :-6
C$$$!X   -1  1  0  ...  0    :4
C$$$!X   -1  0  0  ...  0    :-3
C$$$!X    1  0  0  ...  0    :3
C$$$!X    0  0  0  ...  0    :1
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

C$$$         CALL GETBOX(IBBOX1,IBCON1,NB-1,MSTA,NSPACE)                    !
C$$$         ISUM = 0                                                       !
C$$$         IABSUM = 0                                                     !
C$$$         DO I = 1,NSPACE                                                !
C$$$            IMXMAP(I)=0                                                 !
C$$$            IMIMAP(I)=0                                                 !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I)                                !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I)           !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I)           !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I)                               !
C$$$            ISUM = ISUM + ITMAP(I)                                      !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I))                              !
C$$$         ENDDO                                                          !
C$$$         ISUMSN = ISIGN(1,ISUM)                                         !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM))                      !

C$$$         IF (IEXTYP.GT.4.OR.IEXTYP.LT.(-9))GOTO 2232                   
 
C$$$C$$$      IF(IEXTYP.EQ.(-3))GOTO 2232
C$$$C$$$      IF(IEXTYP.EQ.(-9))GOTO 2232
C$$$C$$$      IF(IEXTYP.EQ.(3))GOTO 2232
C$$$C$$$      IF(IEXTYP.EQ.(4))GOTO 2232
C$$$C$$$      IF(IEXTYP.EQ.(1))GOTO 2232
C$$$C$$$      IF(IEXTYP.NE.(-9))GOTO 2232

C$$$C$$$      WRITE(6,'(40(1H=))')                                         
C$$$C$$$C$$$      WRITE(6,"('BUP',6I3,' | ',5I3)")IACON1(1:NA),IBCON1(1:NB-1)
C$$$C$$$      WRITE(6,"('BUP',13I3,' | ',12I3)")IACON1(1:NA),IBCON1(1:NB-1)
C$$$C$$$      WRITE(6,*)'IEXTYP',IEXTYP


         IAELAC(1) = 0                                                  !
         IBELAC(1) = 0                                                  !
         DO I = 1,NSPACE                                                !
            IAELAC(I+1)=IAELAC(I)+IABOX1(I)                             !
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I)                             !
            IMIMAP(I)=ITBOX(I)-MINI(I)                                  !
            IMXMAP(I)=ITBOX(I)-MAXI(I)                                  ! 
         ENDDO                                                          !

      ISYB1 = ISYV
      E0B0 = E0AD
      DO II=1,NB-1
         ISYB1 = IMUL(ISYB1,IOB(IBCON1(II)+NVAL))
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
      ENDDO
      ISYL = IMUL(ISYB1,ITAS)

C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB-1,                       
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,                 
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),                             
C$$$     $     LSPA,LSPB,LDISB,2,1)                                    

! START IEXTYP  -6:    -2  0  0 ... 0 
!                      -1 -1  0 ... 0
      IF(IEXTYP.EQ.(-6))THEN
         
         NSPA_0 = 0
         NSPA_D = 0
         DO I = 1,NSPACE
            IF(IMIMAP(I).LT.(0))THEN
               NSPA_D = NSPA_D +1
               ISPA_UNDER(NSPA_D) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO
         
         DO I = 1,NSPA_D
            ISPA_B = ISPA_UNDER(I)
            DO II = 1,NSPA_0
               ISPA_B2 = ISPA_0(II)
               IF(IMIMAP(ISPA_B2).EQ.0)CYCLE
               DO III = 1,NSPA_D-1
                  ISPA_CRIT = ISPA_UNDER(III)
                  CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                 IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                 IACON2,ISYMB,JPOSA,LDISB,LSPA,
     $                 LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                 IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,
     $                 IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,ISPA_B,
     $                 ISPA_B2,ISPA_CRIT,ISPA_B2,.TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
               ENDDO
               DO III = I,NSPA_D
                  ISPA_CRIT = ISPA_UNDER(III)
                  CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                 IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                 IACON2,ISYMB,JPOSA,LDISB,LSPA,
     $                 LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                 IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,
     $                 IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,ISPA_B,
     $                 ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
                  CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                 IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                 IACON2,ISYMB,JPOSA,LDISB,LSPA,
     $                 LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                 IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,
     $                 IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,ISPA_B,
     $                 ISPA_B2,ISPA_CRIT,ISPA_B2,.TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
               ENDDO
            ENDDO
         ENDDO
      GOTO 777          
      ENDIF                     !!!(IEXTYP.EQ.(1))
!END IEXTYP  -6


! START IEXTYP  1:     0  0  0 ... 0
      IF(IEXTYP.EQ.(1))THEN

         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).EQ.0)CYCLE
            CALL EAE_ATTACH_B(IOB,IBCON1,NVAL,EFCK,
     $           NACT,NB,IBCON2,LBNDET,X,NX,
     $           ISYMB,NBST,NAST,JPOSA,IGA,CI,NEXT,M1,TMP4,IACON1,NA,
     $           INPT,SI1,SVOOO,M2,TMP3,NSYM,ITGB,LDISB,
     $           LSPA,LSPB,IBELAC,IBBOX1,E0B0,ISYL,ISPA_B,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ENDDO                  !!!ISPA_B

         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).LT.0)THEN
               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
               IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
               DO ISPA_B2 = 1,NSPACE
                  IF(IMIMAP(ISPA_B2).LT.1)THEN
                     IF(ISPA_B2.LT.ISPA_B)CYCLE
                     ISPA_CRIT = ISPA_B2
                     CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                    IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                    IACON2,ISYMB,JPOSA,LDISB,LSPA,
     $                    LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                    IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,
     $                    IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,ISPA_B,
     $                    ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
                  ELSE          !!!(IMIMAP(ISPA_B2).LT.1)
                     IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) -1
                     IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) -1
                     DO ISPA_CRIT = ISPA_B,NSPACE
                        IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
                        CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,
     $                       TMP3,IBCON1,X,NX,LBNDET,IMUL,NSYM,
     $                       ISYL,IACON2,ISYMB,JPOSA,LDISB,
     $                       LSPA,LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                       IBCON2,IOB,NBST,IACON1,INPT,EFCK,
     $                       LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,
     $                       ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,
     $                       E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
                     ENDDO      !!!ISPA_CRIT
                     IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) +1
                     IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) +1
                  ENDIF         !!!(IMIMAP(ISPA_B2).LT.1)
               ENDDO            !!!ISPA_B2
               DO ISPA_A = 1,NSPACE
                  IF(IMIMAP(ISPA_A).LT.1)THEN
                     ISPA_CRIT = ISPA_A
                     CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                    IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                    IACON2,ISYMB,JPOSA,LDISB,LSPA,
     $                    LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                    IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,
     $                    IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,ISPA_B,
     $                    ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
                  ELSE          !!!(IMIMAP(ISPA_A).LT.1)
                     IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
                     IMIMAP(ISPA_A) = IMIMAP(ISPA_A) -1
                     DO ISPA_CRIT = 1,NSPACE
                        IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
                        CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,
     $                       TMP3,IBCON1,X,NX,LBNDET,IMUL,NSYM,
     $                       ISYL,IACON2,ISYMB,JPOSA,LDISB,
     $                       LSPA,LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $                       IBCON2,IOB,NBST,IACON1,INPT,EFCK,
     $                       LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,IAELAC,
     $                       ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,
     $                       E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
                     ENDDO      !!!ISPA_CRIT
                     IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
                     IMIMAP(ISPA_A) = IMIMAP(ISPA_A) +1
                  ENDIF         !!!(IMIMAP(ISPA_A).LT.1)
               ENDDO            !!!ISPA_A
               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
               IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
            ELSE                !!!(IMXMAP(ISPA_B).LT.0)
               ISPA_B2 = ISPA_B
               ISPA_A = ISPA_B
               DO ISPA_CRIT = ISPA_B +1,NSPACE
                  IF(IMXMAP(ISPA_CRIT).EQ.0)CYCLE
                  CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                 IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                 IACON2,ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,
     $                 IGA,NA,NB,M2,M1,NEXT,ITGB,IBCON2,IOB,
     $                 NBST,IACON1,INPT,EFCK,LANDET,IABOX1,IBBOX1,
     $                 IBELAC,IBELAC2,IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,
     $                 ISPA_A,.FALSE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
               ENDDO            !!!ISPA_CRIT
               DO ISPA_CRIT = 1,NSPACE
                  IF(IMXMAP(ISPA_CRIT).EQ.0)CYCLE
                  CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,
     $                 IBCON1,X,NX,LBNDET,IMUL,NSYM,ISYL,
     $                 IACON2,ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,
     $                 IGA,NA,NB,M2,M1,NEXT,ITGB,IBCON2,IOB,
     $                 NBST,IACON1,INPT,EFCK,LANDET,IABOX1,IBBOX1,
     $                 IBELAC,IBELAC2,IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,
     $                 ISPA_A,.TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
               ENDDO            !!!ISPA_CRIT
            ENDIF               !!!(IMXMAP(ISPA_B).LT.0)
         ENDDO                  !!!ISPA_B
      GOTO 777         
      ENDIF                     !!!(IEXTYP.EQ.(1))
!END IEXTYP  1


! START IEXTYP  4:    -1  1  0 ... 0
      IF(IEXTYP.EQ.(4))THEN

         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMXMAP(I).EQ.1)THEN
               ISPA_OVER(1) = I
            ELSEIF(IMIMAP(I).EQ.(-1))THEN
               ISPA_UNDER(1) = I
               ISPA_0(NSPACE-1) = I
            ELSE
               NSPA_0 = NSPA_0 +1               
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO

         ISPA_B = ISPA_UNDER(1)
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B ) +1
         DO I = 1,NSPACE-1
            ISPA_CRIT = ISPA_0(I)
            IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_UNDER(1),ISPA_OVER(1),ISPA_CRIT,ISPA_A,
     $           .FALSE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ENDDO                  !!!I
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B ) -1

         ISPA_A  = ISPA_OVER(1)
         ISPA_B = ISPA_UNDER(1)
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B ) +1
         DO I = 1,NSPACE-1
            ISPA_CRIT = ISPA_0(I)
            IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,
     $           .TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ENDDO                  !!!I
         IMXMAP(ISPA_B) = IMXMAP(ISPA_B ) -1

         ISPA_A = ISPA_OVER(1)
         ISPA_CRIT = ISPA_UNDER(1)
         DO I = 1,NSPACE-2
            ISPA_B = ISPA_0(I)
            IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,
     $           .TRUE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ENDDO                  !!!I
      GOTO 777
      ENDIF                     !!!(IEXTYP.EQ.(4))
!END IEXTYP  4


! START IEXTYP  3:     1  0  0 ... 0
      IF(IEXTYP.EQ.(3))THEN
         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMXMAP(I).EQ.1)THEN
               ISPA_OVER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1               
               ISPA_0(NSPA_0) = I
            ENDIF
         ENDDO
         DO I = 1,NSPACE-1
            ISPA_B = ISPA_0(I)
            IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
            DO II = I,NSPACE-1
               ISPA_CRIT = ISPA_0(II)
               IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
               CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $              X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $              ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $              M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $              INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $              IAELAC,ISPA_B,ISPA_OVER(1),ISPA_CRIT,ISPA_A,.FALSE.,
     $              E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
            ENDDO
            DO II = 1,NSPACE-1
               ISPA_CRIT = ISPA_0(II)
               IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
               CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $              X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $              ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $              M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $              INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $              IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_OVER(1),.TRUE.,
     $              E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
            ENDDO
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
         ENDDO
      GOTO 777
      ENDIF                     !!!(IEXTYP.EQ.(3))
!END IEXTYP  3

!A -> E
! START IEXTYP -9:    -1 -1  1 ... 0
!                     -2  1  0 ... 0
      IF(IEXTYP.EQ.(-9))THEN

         NSPA_D = 0
         DO I = 1,NSPACE
            IF(IMIMAP(I).LT.0)THEN
               NSPA_D = NSPA_D +1
               ISPA_UNDER(NSPA_D) = I
            ELSEIF(IMXMAP(I).GT.0)THEN
               ISPA_OVER(1) = I
            ENDIF
         ENDDO
         ISPA_UNDER(NSPA_D +1) = ISPA_UNDER(1)

         ISPA_B = ISPA_UNDER(1)
         ISPA_CRIT = ISPA_UNDER(2)
         ISPA_B2 = ISPA_OVER(1)
         CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $        X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $        ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $        M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $        INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $        IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)

         DO I = 1,NSPA_D
            ISPA_B = ISPA_UNDER(I)
            ISPA_CRIT = ISPA_UNDER(I+1)
            ISPA_A = ISPA_OVER(1)
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,
     $           NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ENDDO
         GOTO 777
      ENDIF                     !!!(IEXTYP.EQ.(-9))
!END IEXTYP -9


! START IEXTYP -3:    -1  0  0 ... 0
      IF(IEXTYP.EQ.(-3))THEN
         NSPA_0 = 0
         DO I = 1,NSPACE
            IF(IMIMAP(I).LT.0)THEN
               ISPA_UNDER(1) = I
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0)=I
            ENDIF
         ENDDO                  !!!I
      ISPA_B = ISPA_UNDER(1)

      CALL EAE_ATTACH_B(IOB,IBCON1,NVAL,EFCK,
     $     NACT,NB,IBCON2,LBNDET,X,NX,
     $     ISYMB,NBST,NAST,JPOSA,IGA,CI,NEXT,M1,TMP4,IACON1,NA,
     $     INPT,SI1,SVOOO,M2,TMP3,NSYM,ITGB,LDISB,LSPA,
     $     LSPB,IBELAC,IBBOX1,E0B0,ISYL,ISPA_B,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)

      IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
      IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
      DO ISPA_B2 = 1,NSPACE
         IF(IMIMAP(ISPA_B2).LT.1)THEN
            ISPA_CRIT = ISPA_B2
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,E0B0,
     $           NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ELSE                   !!!(IMIMAP(ISPA_B2).LT.1)
            IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) -1
            IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) -1
            DO ISPA_CRIT = 1,NSPACE !!!ISPA_B,NSPACE
               IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
               CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $              X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $              ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $              M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $              INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $              IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.FALSE.,
     $              E0B0,NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
            ENDDO               !!!ISPA_CRIT
            IMIMAP(ISPA_B2) = IMIMAP(ISPA_B2) +1
            IMXMAP(ISPA_B2) = IMXMAP(ISPA_B2) +1
         ENDIF                  !!!(IMIMAP(ISPA_B2).LT.1)
      ENDDO                     !!!ISPA_B2
      DO ISPA_A = 1,NSPACE
         IF(IMIMAP(ISPA_A).EQ.0)THEN
            ISPA_CRIT = ISPA_A
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,
     $           NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ELSE                   !!!(IMIMAP(ISPA_A).EQ.0)
            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
            DO ISPA_CRIT = 1,NSPACE
               IF(IMXMAP(ISPA_CRIT).EQ.0)CYCLE
               CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $              X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $              ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $              M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $              INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $              IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,
     $              NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
            ENDDO               !!!ISPA_CRIT
            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
         ENDIF                  !!!(IMIMAP(ISPA_A).EQ.0)
      ENDDO                     !!!ISPA_A
      IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
      IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1

      ISPA_CRIT = ISPA_UNDER(1)      
      DO II = 1,NSPACE-1
         ISPA_B = ISPA_0(II)
         IF(IMXMAP(ISPA_B).EQ.0)THEN
            ISPA_A = ISPA_B
            CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $           X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $           ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $           M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $           INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $           IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,
     $           NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
         ELSE                   !!!(IMXMAP(ISPA_B).EQ.0)
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
            DO JJ = 1,NSPACE-1
               ISPA_A = ISPA_0(JJ)
               IF(IMIMAP(ISPA_A).LT.1)CYCLE
               CALL EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $              X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,
     $              ISYMB,JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,
     $              M2,M1,NEXT,ITGB,IBCON2,IOB,NBST,IACON1,
     $              INPT,EFCK,LANDET,IABOX1,IBBOX1,IBELAC,IBELAC2,
     $              IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,.TRUE.,E0B0,
     $              NVAL,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
            ENDDO               !!!ISPA_CRIT
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
         ENDIF                  !!!(IMXMAP(ISPA_B).EQ.0)
      ENDDO                     !!!II

      ENDIF                     !!!(IEXTYP.EQ.(-3))

!END IEXTYP -3

! END OF 1ST EXCITATION BETA IE -> IA(?)
 777  CONTINUE 

C$$$         EINT = 0.0D+00
C$$$         DO II=1,NEXT
C$$$            EINT = EINT + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO
C$$$
C$$$         EAE = EAE + 2.0D+00*EINT


         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,NEXT
         HINT(JJ,KK)=HINT(JJ,KK) + (TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO II=1,NEXT
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
               EAE = EAE + 2.0D+00*HINT(JJ,KK)
            ENDDO
         ENDDO

C$$$ 2232    CALL ADVANC(IBCON1,NB-1,NACT)
C$$$ 2230      CONTINUE


            CALL MOVEUP2(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      ENDDO                     !!!IGB_EAE

      RETURN
      END SUBROUTINE EAE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAE_ATTACH_B
      SUBROUTINE EAE_ATTACH_B(IOB,IBCON1,NVAL,EFCK,
     $     NACT,NB,IBCON2,LBNDET,X,NX,
     $     ISYMB,NBST,NAST,JPOSA,IGA,CI,NEXT,M1,TMP4,IACON1,NA,
     $     INPT,SI1,SVOOO,M2,TMP3,NSYM,ITGB,LDISB,LSPA,LSPB,
     $     IBELAC,IBBOX1,E0B0,ISYL,ISPA_B,
     $                 EPT0,NPTST,NCI,NTMPSZ,COEFF)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER NB,IBCON1(*),NVAL,ISYL,
     $     IST,IEN,NACT,KKJ,JJ,JJE,IS2,IOB(*),IBCON2(*),IPER,
     $     IGB2,ORMAS_GET_GROUP,NSYM,ITGB,
     $     LDISB(NSYM,ITGB,*),JPOSB2,ORMAS_GET_STRPOS,
     $     X(*),NX,LBNDET(NSPACE,*),KSYM,ISYMB(*),NBST(*),
     $     NAST(*),LSPA(*),IGA,JPOSA,LSPB(*),ITP0,IACON1(*),IE,NEXT,JE,
     $     M1,IS1,INPT(*),M2,NA,IBELAC(*),IBBOX1(*),
     $     ISPA_B,NPTST,NCI,NTMPSZ,III
      DOUBLE PRECISION E0B0,EFCK(*),CI(NCI,*),COEFF(*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),SI1(*),SVOOO(NEXT,*),T,EPT0(*)

! SINGLE DEXCITATIONS, BETA IE -> IA (?)
      IST = MSTA(ISPA_B)
      IEN = IBCON1(IBELAC(ISPA_B) +1) -1
      IF (IBBOX1(ISPA_B).EQ.0) IEN = MSTA(ISPA_B +1) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

      DO 2240 KKJ=IBELAC(ISPA_B) +1,IBELAC(ISPA_B +1) +1
         DO 2242 JJ=IST,IEN
            JJE = JJ + NVAL
            IS2 = IOB(JJE)
            IF (IS2.NE.ISYL) GOTO 2242

! DETERMINE 0TH ORDER BETA STRING, POSITION/PERM AND MATRIX ELEMENT

            CALL STR0AE(IBCON1,IBCON2,NB,KKJ,JJ,IPER)
            IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))
            KSYM = ISYMB(JPOSB2+NBST(IGB2))
            ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGB2,IGA) + 
     $           LSPB(JPOSB2+NBST(IGB2))
C$$$            COEFF = CI(ITP0)*IPER
          DO III=1,NPTST
             COEFF(III) = CI(ITP0,III)*IPER
          ENDDO
            
! LOOP OVER EXTERNAL ORBS

            DO 2215 IE=1,NEXT
               JE = IE + M1
               IS1 = IOB(JE)
               IF (IS1.NE.IS2) GOTO 2215
C$$$               TMP4(IE) = E0B0 - EFCK(JE)
               
               CALL ME0AE1B(JJE,IE,IBCON1,NB,IACON1,NA,NVAL,NACT,NEXT,
     *              INPT,SI1,SVOOO,M2,T)
               
C$$$               TMP3(IE) = TMP3(IE) + COEFF*T
          DO III=1,NPTST
             TMP3(IE,III) = TMP3(IE,III) + COEFF(III)*T
             TMP4(IE,III) = E0B0 - EFCK(JE) + EPT0(III)
          ENDDO
               
 2215       CONTINUE

 2242    CONTINUE
         IST = IBCON1(KKJ)+1
         IEN = IBCON1(KKJ+1)-1
         IF (KKJ.EQ.IBELAC(ISPA_B +1)) IEN=MSTA(ISPA_B +1) -1


 2240 CONTINUE

      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

      RETURN 
      END SUBROUTINE EAE_ATTACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAE_ATTACH_B_SHIFT_B_OR_A
      SUBROUTINE EAE_ATTACH_B_SHIFT_B_OR_A(CI,TMP4,SVOOO,TMP3,IBCON1,
     $     X,NX,LBNDET,IMUL,NSYM,ISYL,IACON2,ISYMB,
     $     JPOSA,LDISB,LSPA,LSPB,NAST,IGA,NA,NB,M2,M1,NEXT,ITGB,
     $     IBCON2,IOB,NBST,IACON1,INPT,EFCK,LANDET,IABOX1,IBBOX1,
     $     IBELAC,IBELAC2,IAELAC,ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,
     $     DOALPHA,E0B0,NVAL,EPT0,NPTST,NCI,NTMPSZ,COEFF)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      LOGICAL DOALPHA
      INTEGER IST,IEN,IBCON1(*),KKJ,NB,JJ,IA,NVAL,IS1,IOB(*),
     $     IBCON2(*),IPER,IGB2,ORMAS_GET_GROUP,JPOSB2,NSYM,ITGB,
     $     ORMAS_GET_STRPOS,X(*),NX,LBNDET(NSPACE,*),IEL,IA2,IS2,IP1,
     $     IMUL(NSYM,*),IST2,IEN2,KKJ2,JJ2,JJA,IS3,IPT,ISYL,
     $     IACON2(*),ISWAP2,IPER2,IPERT,IGA2,
     $     JPOSA2,KSYM,ISYMB(*),JPOSA,LDISB(NSYM,ITGB,*),LSPA(*),
     $     LSPB(*),NAST(*),IGA,ITP0,NA,MA,MI,IAA2,IA2A3,IAA2A3,IA3AA2,
     $     M2,M1,JE,IE,NEXT,IS4,IP2,IEL2,NBST(*),IACON1(*),
     $     INPT(*),LANDET(NSPACE,*),II,IBELAC(*),IBBOX1(*),
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC2(*),IAELAC(*),
     $     IABOX1(*),IB2_FIN2,IB2_INT2,KKJ_FIN2,KKJ_INT2,NPTST,NCI,
     $     NTMPSZ,III
      DOUBLE PRECISION COEFF(*),CI(NCI,*),TMP4(NTMPSZ,*),T,
     $     SVOOO(NEXT,*),TMP3(NTMPSZ,*),E0B0,EFCK(*),EPT0(*)

! NOW FOR DOUBLE DEXCITATIONS
! DOUBLE DEXCITATIONS MUST !!!!! INCLUDE THE SINGLES ABOVE !!!!!
! START WITH THIS TYPE FIRST, IE BETA IE -> IA(?)

      IST = MSTA(ISPA_B)
      IEN = IBCON1(IBELAC(ISPA_B) +1) -1
      IF (IBBOX1(ISPA_B).EQ.0) IEN = MSTA(ISPA_B +1) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

      DO 2250 KKJ=IBELAC(ISPA_B) +1,IBELAC(ISPA_B +1) +1
         DO 2252 JJ=IST,IEN
            IA = JJ + NVAL
            IS1 = IOB(IA)
            CALL STR0AE(IBCON1,IBCON2,NB,KKJ,JJ,IPER)
            IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))

            IF(DOALPHA)GOTO 2254

! 2ND EXCITATION: BETA ACT (IA2.NE.IA) -> ACT (JJA > IA)
! TOTAL = BETA (IE,IA2 -> IA < JJA )

      IBELAC2(1) = 0
      DO II = 1,NSPACE
         IBELAC2(II +1) = IBELAC2(II) + IBBOX1(II)
      ENDDO

      DO 2255 IEL=IBELAC2(ISPA_B2) +1,IBELAC2(ISPA_B2 +1)
         IF (IEL.EQ.KKJ) GOTO 2255
         IA2 = IBCON2(IEL)+NVAL
         IS2 = IOB(IA2)
         IP1 = IMUL(IS1,IS2)

!  HAVE ENSURED THAT IA2.NE.IA, NOW TO ENSURE THAT JJA > IA

         IB2_INT2 = MSTA(ISPA_CRIT)
         IB2_FIN2 = IBCON2(IBELAC2(ISPA_CRIT) +1) -1
         IF(IBBOX1(ISPA_CRIT).EQ.0)IB2_FIN2 = MSTA(ISPA_CRIT +1) -1
         KKJ_INT2 = IBELAC2(ISPA_CRIT) +1
         KKJ_FIN2 = IBELAC2(ISPA_CRIT +1) +1

         IF(ISPA_CRIT.EQ.ISPA_B) THEN
            IB2_INT2 = JJ+1
            IB2_FIN2 = IBCON2(KKJ +1) -1
            IF(KKJ.EQ.IBELAC2(ISPA_CRIT+1))IB2_FIN2=MSTA(ISPA_CRIT+1)-1
            KKJ_INT2 = KKJ +1
            KKJ_FIN2 = IBELAC2(ISPA_CRIT +1)+1
         ENDIF

         IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) -1
         IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) +1
         DO 2258 KKJ2 = KKJ_INT2,KKJ_FIN2
            DO 2257 JJ2=IB2_INT2,IB2_FIN2
               JJA = JJ2 + NVAL
               IS3 = IOB(JJA)
               IPT = IMUL(IP1,IS3)
               IF (IPT.NE.ISYL) GOTO 2257

!  DETERMINE NEW 0TH ORDER BETA, POS/PERM AND MATRIX ELEMENT

               CALL RET1DET(IBCON2,IACON2,NB,IEL,JJ2,0,KKJ2,ISWAP2)
               IPER2 = (-1)**ISWAP2
               IPERT = IPER*IPER2
               IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGA2))
               KSYM = ISYMB(JPOSA2+NBST(IGA2))
               ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGA2,IGA) + 
     $              LSPB(JPOSA2+NBST(IGA2))
C$$$               COEFF = CI(ITP0)*IPERT
          DO III=1,NPTST
             COEFF(III) = CI(ITP0,III)*IPERT
          ENDDO

               MA = MAX(IA,IA2)
               MI = MIN(IA,IA2)
               IAA2 = INPT(MA) + MI
               MA = MAX(IA2,JJA)
               MI = MIN(IA2,JJA)
               IA2A3 = INPT(MA) + MI
               IAA2A3 = (IA-1)*M2 + IA2A3
               IA3AA2 = (JJA-1)*M2 + IAA2

               DO 2217 IE=1,NEXT
                  JE = IE + M1
                  IS4 = IOB(JE)
                  IP2 = IMUL(IS4,IS3)
                  IF (IP1.NE.IP2) GOTO 2217
C$$$                  TMP4(IE) = E0B0 - EFCK(JE)

!  ME = [IE,IA | IA2,JJA] - [IE,JJA | IA2,IA]

                  T = SVOOO(IE,IAA2A3) - SVOOO(IE,IA3AA2)
                  
C$$$                  TMP3(IE) = TMP3(IE) + COEFF*T
              DO III=1,NPTST
                 TMP3(IE,III) = TMP3(IE,III) + COEFF(III)*T
                 TMP4(IE,III) = E0B0 - EFCK(JE) + EPT0(III)
              ENDDO
              
 2217          CONTINUE

 2257       CONTINUE
            IB2_INT2 = IBCON2(KKJ2)+1
            IB2_FIN2 = IBCON2(KKJ2+1)-1
            IF(KKJ2.EQ.(KKJ_FIN2-1))IB2_FIN2=MSTA(ISPA_CRIT+1) -1

 2258    CONTINUE
         IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) -1
         IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) +1
         
 2255 CONTINUE


! END OF 2ND EXCITATION: BETA ACT (IA2 -> JJA)
      GOTO 2252


 2254 CONTINUE                  !!!(DOALPHA)
! 2ND EXCITATION: ALPHA ACT (IA2 -> JJA)
!  TOTAL = ( IE(B),IA2(A) -> IA(B),JJA(A) )

      DO 2260 IEL2 = IAELAC(ISPA_A) +1,IAELAC(ISPA_A +1)
         IA2 = IACON1(IEL2)+NVAL
         IS2 = IOB(IA2)
         IP1 = IMUL(IS1,IS2)

         IST2 = MSTA(ISPA_CRIT)
         IEN2 = IACON1(IAELAC(ISPA_CRIT) +1) -1
         IF(IABOX1(ISPA_CRIT).EQ.0)IEN2 = MSTA(ISPA_CRIT +1) -1
         IABOX1(ISPA_A) = IABOX1(ISPA_A) -1
         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) +1

         DO 2268 KKJ2 = IAELAC(ISPA_CRIT)+1,IAELAC(ISPA_CRIT+1) +1
            DO 2267 JJ2=IST2,IEN2
               JJA = JJ2 + NVAL
               IS3 = IOB(JJA)
               IPT = IMUL(IP1,IS3)
               IF (IPT.NE.ISYL) GOTO 2267

! DETERMINE NEW 0TH ORDER ALPHA, POS/PERM AND MATRIX ELEMENT

               CALL RET1DET(IACON1,IACON2,NA,IEL2,JJ2,0,KKJ2,ISWAP2)
               IPER2 = (-1)**ISWAP2
               IPERT = IPER*IPER2
               IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
     $              LSPB(JPOSB2+NBST(IGB2))
C$$$               COEFF = CI(ITP0)*IPERT
            DO III=1,NPTST
               COEFF(III) = CI(ITP0,III)*IPERT
            ENDDO

               MA = MAX(IA2,JJA)
               MI = MIN(IA2,JJA)
               IA2A3 = INPT(MA) + MI
               IAA2A3 = (IA-1)*M2 + IA2A3

               DO 2219 IE=1,NEXT
                  JE = IE+M1
                  IS4 = IOB(JE)
                  IP2 = IMUL(IS4,IS3)
                  IF (IP1.NE.IP2) GOTO 2219
C$$$                  TMP4(IE) = E0B0 - EFCK(JE)
                  
! ME = [IE,IA | IA2,JJA]

                  T = SVOOO(IE,IAA2A3)
C$$$                  TMP3(IE) = TMP3(IE) + COEFF*T
            DO III=1,NPTST
               TMP3(IE,III) = TMP3(IE,III) + COEFF(III)*T
               TMP4(IE,III) = E0B0 - EFCK(JE) + EPT0(III)
            ENDDO

 2219          CONTINUE

 2267       CONTINUE
            IST2 = IACON1(KKJ2)+1
            IEN2 = IACON1(KKJ2+1)-1
            IF(KKJ2.EQ.IAELAC(ISPA_CRIT+1))IEN2=MSTA(ISPA_CRIT+1)-1

 2268    CONTINUE

         IABOX1(ISPA_A) = IABOX1(ISPA_A) +1
         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) -1

 2260 CONTINUE

! END OF 2ND EXCITATION: ALPHA ACT (IA2 -> JJA)

 2252 CONTINUE
      IST = IBCON1(KKJ)+1
      IEN = IBCON1(KKJ+1)-1
      IF (KKJ.EQ.IBELAC(ISPA_B +1)) IEN=MSTA(ISPA_B +1) -1

 2250 CONTINUE

      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

! END OF 1ST EXCITATION BETA IE -> IA(?)

      RETURN
      END SUBROUTINE EAE_ATTACH_B_SHIFT_B_OR_A
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAA_TERM
      SUBROUTINE  EVVAA_TERM(NB,IBCON1,IBBOX1,IACON1,ITBOX,IABOX1,
     $     ISYV,E0AD,EFCK,IOB,NVAL,IMUL,ITAS,IBCON2,IGA,
     $     X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,CI,TMP4,INPT,TMP3,LDISB,
     $     LSPB,NA,EVVAA,NSYM,ITGB,JPOSA,SI2,IMXMAP,IMIMAP,IBELAC,
     $     LGCOM_EVVAA,NBST_EVVAA,ITGB_EVVAA,IPTAMI,IPTAMA,
     $     IPTBMI,IPTBMA,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER II,NB,IBCON1(*),IJB,IBBOX1(*),IMXMAP(*),
     $     IMIMAP(*),ITBOX(*),IABOX1(*),IEXTYP,NSYM,
     $     IBELAC(*),I,ISPA_B,ISPA_B2,NVAL,IOB(*),INPT(*),IMUL(NSYM,*),
     $     ISYL,IBCON2(*),ITGB,X(*),NX,
     $     LBNDET(NSPACE,*),ISYMB(*),NAST(*),IGA,JPOSA,
     $     LDISB(NSYM,ITGB,*),LSPA(*),NBST(*),LSPB(*),IACON1(*),NA,
     $     ICOUNT,ISYB,ISYV,ITAS,
     $     NPTST,JJ,KK,NTMPSZ,NCI
      DOUBLE PRECISION HPT(NPTST,*)

      INTEGER ITGB_EVVAA,LGCOM_EVVAA(ITGB_EVVAA,*),NBST_EVVAA(*),
     $     IPTAMI(*),IPTAMA(*),IPTBMI(*),IPTBMA(*),
     $     ISCBOX(*),IGA_EVVAA,IEND,IGB_EVVAA,ORMAS_GET_GROUP

      DOUBLE PRECISION SI2(*),E0B0,EFCK(*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),EVVAA,
     $     CI(NCI,*),E0AD,EPT0(*),HINT(NPTST,*),COEFF(*)


      ICOUNT = 0

      IGA_EVVAA = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)
! LOOP OVER 2 UP BETAS
      CALL RESETCO(IBBOX1,NSPACE,NB+2,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB+2,MSTA,IBCON1)
      DO IGB_EVVAA = 1,ITGB_EVVAA
         IEXTYP = LGCOM_EVVAA(IGB_EVVAA,IGA_EVVAA)

         IF(IEXTYP.GT.6.OR.IEXTYP.LT.1)GOTO 123
         IF(IEXTYP.EQ.4)GOTO 123

         IBELAC(1)=0
         DO I = 1,NSPACE         
            ITBOX(I)=IBBOX1(I)+IABOX1(I) 
            IBELAC(I+1) = IBELAC(I) + IBBOX1(I)
            IMIMAP(I)=ITBOX(I)-MINI(I)  
            IMXMAP(I)=ITBOX(I)-MAXI(I)  
         ENDDO                  

         DO IJB = 1,NBST_EVVAA(IGB_EVVAA)

C$$$         IBELAC(1)=0
C$$$         DO I = 1,NSPACE         
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) 
C$$$            IBELAC(I+1) = IBELAC(I) + IBBOX1(I)
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I)  
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I)  
C$$$         ENDDO                  

C$$$      DO II=1,NB+2
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2100 IJB=1,N2B

C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!X    0  0  0  ...  0    :1
C$$$!X    1  0  0  ...  0    :3
C$$$!X    1  1  0  ...  0    :6
C$$$!X    2  0  0  ...  0    :6
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

C$$$      CALL GETBOX(IBBOX1,IBCON1,NB+2,MSTA,NSPACE) !
C$$$      ISUM = 0                  !
C$$$      IABSUM = 0                !
C$$$      DO I = 1,NSPACE           !
C$$$         IMXMAP(I)=0            !
C$$$         IMIMAP(I)=0            !
C$$$         ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$         IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$         IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$         ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$         ISUM = ISUM + ITMAP(I) !
C$$$         IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$      ENDDO                     !
C$$$      ISUMSN = ISIGN(1,ISUM)    !
C$$$      IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !

C$$$      IF(IEXTYP.GT.6.OR.IEXTYP.LT.1)GOTO 2103
C$$$      IF(IEXTYP.EQ.4)GOTO 2103


C$$$      IBELAC(1) = 0             ! 
C$$$      DO I = 1,NSPACE           ! 
C$$$         IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$         IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$         IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$      ENDDO                     !

C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',13I3,' | ',15I3)")IACON1(1:NA),IBCON1(1:NB+2)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB+2,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$     $     LSPA,LSPB,LDISB,2,2)

      ISYB = ISYV
      E0B0 = E0AD
      DO II=1,NB+2
         ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
      ENDDO
      ISYL = IMUL(ISYB,ITAS)

! START IEXTYP  6:     2  0  0 ... 0
!                      1  1  0 ... 0
      IF(IEXTYP.EQ.6)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).GT.0)THEN
               IMXMAP(ISPA_B)=IMXMAP(ISPA_B) -1
               DO ISPA_B2 = ISPA_B,NSPACE
                  IF(IMXMAP(ISPA_B2).GT.0)EXIT
               ENDDO            !!!ISPA_B2
               IMXMAP(ISPA_B)=IMXMAP(ISPA_B) +1
               EXIT             !!!ISPA_B
            ENDIF               !!!(IMXMAP(ISPA_B).GT.0)
         ENDDO                  !!!ISPA_B
         CALL EVVAA_DETACH_BB(NB,IBCON1,NVAL,IOB,INPT,IMUL,ISYL,
     $        IBCON2,IBBOX1,NSYM,X,NX,LBNDET,ISYMB,NAST,IGA,
     $        JPOSA,LDISB,LSPA,NBST,LSPB,CI,E0B0,EFCK,
     $        ITGB,TMP4,SI2,TMP3,ICOUNT,IBELAC,ISPA_B,ISPA_B2,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      ENDIF                     !!!(IEXTYP.EQ.6)
! END IEXTYP  1

! START IEXTYP  1:     0  0  0 ... 0
      IF(IEXTYP.EQ.1)THEN
         DO ISPA_B = 1,NSPACE
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
            DO ISPA_B2 = ISPA_B,NSPACE
               IF(IMIMAP(ISPA_B2).LT.1)CYCLE
               CALL EVVAA_DETACH_BB(NB,IBCON1,NVAL,IOB,INPT,IMUL,ISYL,
     $              IBCON2,IBBOX1,NSYM,X,NX,LBNDET,ISYMB,NAST,IGA,
     $              JPOSA,LDISB,LSPA,NBST,LSPB,CI,E0B0,EFCK,
     $              ITGB,TMP4,SI2,TMP3,ICOUNT,IBELAC,ISPA_B,ISPA_B2,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ENDDO               !!!ISPA_B2
            IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

! START IEXTYP  3:     1  0  0 ... 0      
      IF(IEXTYP.EQ.3)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).EQ.1)EXIT
         ENDDO                  !!!ISPA_B
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
         DO ISPA_B2 = 1,NSPACE
            IF(IMIMAP(ISPA_B2).LT.1)CYCLE
            IF(ISPA_B.GT.ISPA_B2)THEN
               CALL EVVAA_DETACH_BB(NB,IBCON1,NVAL,IOB,INPT,IMUL,ISYL,
     $              IBCON2,IBBOX1,NSYM,X,NX,LBNDET,ISYMB,NAST,IGA,
     $              JPOSA,LDISB,LSPA,NBST,LSPB,CI,E0B0,EFCK,
     $              ITGB,TMP4,SI2,TMP3,ICOUNT,IBELAC,ISPA_B2,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ELSE                !!!(ISPA_B.GT.ISPA_B2)
               CALL EVVAA_DETACH_BB(NB,IBCON1,NVAL,IOB,INPT,IMUL,ISYL,
     $              IBCON2,IBBOX1,NSYM,X,NX,LBNDET,ISYMB,NAST,IGA,
     $              JPOSA,LDISB,LSPA,NBST,LSPB,CI,E0B0,EFCK,
     $              ITGB,TMP4,SI2,TMP3,ICOUNT,IBELAC,ISPA_B,ISPA_B2,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ENDIF               !!!(ISPA_B.GT.ISPA_B2)
         ENDDO                  !!!ISPA_B2
         IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
      ENDIF                     !!!(IEXTYP.EQ.3)
! END IEXTYP  3


! END OF DOUBLE BETA DEXCITATIONS FROM ACTIVE IA1 < IA2

C$$$         EINT = 0.0D+00
C$$$         DO II=1,ICOUNT
C$$$            EINT = EINT + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO
C$$$
C$$$         EVVAA = EVVAA + 2.0D+00*EINT

         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
         HINT(JJ,KK)=HINT(JJ,KK) + (TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO II=1,ICOUNT
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO

         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + HINT(JJ,KK)*2.0D+00
               EVVAA = EVVAA + HINT(JJ,KK)*2.0D+00
            ENDDO
         ENDDO



         ICOUNT = 0


C$$$ 2103    CALL ADVANC(IBCON1,NB+2,NACT)
C$$$ 2100 CONTINUE


            CALL MOVEUP2(IBBOX1,NSPACE,NB+2,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB+2,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB+2,MSTA,IBCON1)
      ENDDO                     !!!IGB_EVVAA

! END OF LOOP OVER 2 UP BETAS
      RETURN
      END SUBROUTINE EVVAA_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAA_DETACH_BB
      SUBROUTINE EVVAA_DETACH_BB(NB,IBCON1,NVAL,IOB,INPT,IMUL,ISYL,
     $     IBCON2,IBBOX1,NSYM,X,NX,LBNDET,ISYMB,NAST,IGA,
     $     JPOSA,LDISB,LSPA,NBST,LSPB,CI,E0B0,EFCK,
     $     ITGB,TMP4,SI2,TMP3,ICOUNT,IBELAC,ISPA_B,ISPA_B2,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER IEL1,NB,IA1,IBCON1(*),NVAL,IS1,IOB(*),INPT(*),IA1T,IEL2,
     $     NSYM,IA2,IS2,IP1,IMUL(NSYM,*),ISYL,IA2T,IBCON2(*),IPER,
     $     IGB2,ORMAS_GET_GROUP,IGA,JPOSB2,IBBOX1(*),ITGB,
     $     ORMAS_GET_STRPOS,X(*),NX,LBNDET(NSPACE,*),KSYM,ISYMB(*),
     $     NBST(*),NAST(*),LSPA(*),JPOSA,LDISB(NSYM,ITGB,*),LSPB(*),
     $     IV1,IS3,IA1V1,IA2V1,IA2V1T,IV2,ICOUNT,IS4,IP2,IA1V2,IA2V2,
     $     INT1,INT2,ITP0,IBELAC(*),ISPA_B,
     $     ISPA_B2,IEL2_INT,IEL2_FIN,NTMPSZ,NCI,III,NPTST
      DOUBLE PRECISION CI(NCI,*),E0B0V,E0B0,EFCK(*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),T,
     $     SI2(*),COEFF(*),EPT0(*)

! LOOP OVER DEXCITATIONS FROM BETA ACTIVE IA1 < IA2
      IBBOX1(ISPA_B)  = IBBOX1(ISPA_B) -1
      IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) -1
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

      DO 2110 IEL1 = IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1)
         IA1 = IBCON1(IEL1)+NVAL
         IS1 = IOB(IA1)
         IA1T = INPT(IA1)
         
         IEL2_INT = IBELAC(ISPA_B2) +1
         IEL2_FIN = IBELAC(ISPA_B2 +1)
         IF(ISPA_B.EQ.ISPA_B2)THEN
            IEL2_INT = IEL1 +1
            IEL2_FIN = IBELAC(ISPA_B2 +1)
         ENDIF
         
         DO 2120 IEL2=IEL2_INT,IEL2_FIN
            IA2 = IBCON1(IEL2)+NVAL
            IS2 = IOB(IA2)
            IP1 = IMUL(IS1,IS2)
            IF (IP1.NE.ISYL) GOTO 2120
            IA2T = INPT(IA2)
            CALL STR0VVAA(IBCON1,IBCON2,NB+2,IEL1,IEL2,NVAL,
     *           NVAL,NVAL,IPER)

            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))
            KSYM = ISYMB(JPOSB2+NBST(IGB2))
            ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGB2,IGA) + 
     $           LSPB(JPOSB2+NBST(IGB2))
C$$$            COEFF = CI(ITP0)*IPER
      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
      ENDDO
            
! LOOP OVER BETA VALENCE IV1 < IV2

            ICOUNT = 0 
            DO 2130 IV1=1,NVAL
               IS3 = IOB(IV1)
               E0B0V = E0B0 + EFCK(IV1)
               IA1V1 = IA1T + IV1
               IA2V1 = IA2T + IV1
               IA2V1T = INPT(IA2V1)
               
               DO 2140 IV2=1,IV1-1
                  ICOUNT = ICOUNT + 1
                  IS4 = IOB(IV2)
                  IP2 = IMUL(IS4,IS3)
                  IF (IP1.NE.IP2) GOTO 2140
C$$$                  TMP4(ICOUNT) = E0B0V + EFCK(IV2)

! MATRIX ELEMENT

                  IA1V2 = IA1T + IV2
                  IA2V2 = IA2T + IV2
                  INT1 = INPT(IA2V2) + IA1V1
                  INT2 = IA2V1T + IA1V2
C$$$                  T = (SI2(INT1) - SI2(INT2))*COEFF
C$$$                  TMP3(ICOUNT) = TMP3(ICOUNT) + T
                  T = (SI2(INT1) - SI2(INT2))
            DO III=1,NPTST
               TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T*COEFF(III)
               TMP4(ICOUNT,III) = E0B0V + EFCK(IV2) + EPT0(III)
            ENDDO

 2140          CONTINUE
 2130       CONTINUE

!     END OF LOOP OVER BETA VALENCE IV1 < IV2

 2120    CONTINUE
 2110 CONTINUE

      IBBOX1(ISPA_B)  = IBBOX1(ISPA_B) +1
      IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) +1

      RETURN
      END SUBROUTINE EVVAA_DETACH_BB
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAE_TERM
      SUBROUTINE EVVAE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX,NVAL,
     $     IOB,IBCON2,IBELAC,IACON1,NA,ITGB,NBST,NAST,NSYM,
     $     ISYMB,IMUL,LSPA,LSPB,LDISB,ISYB,IGA,X,NX,LBNDET,
     $     JPOSA,INPT,M2,NEXT,M1,E0AD,EFCK,CI,SVOOO,TMP3,TMP2,TMP1,TMP4,
     $     EVVAE,ISYV,ITAS,IABOX1,
     $     LGCOM_EVVAE,NBST_EVVAE,ITGB_EVVAE,IPTAMI,IPTAMA,
     $     IPTBMI,IPTBMA,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER II,NB,IBCON1(*),IJB,IBBOX1(*),IMXMAP(*),
     $     IMIMAP(*),ITBOX(*),IEXTYP,IBELAC(*),IABOX1(*),
     $     IACON1(*),NA,ITGB,NBST(*),NAST(*),NSYM,
     $     ISYMB(*),IMUL(NSYM,*),LSPA(*),LSPB(*),I,
     $     LDISB(NSYM,ITGB,*),ISYB,ISYV,ISYL,IGA,X(*),NX,
     $     LBNDET(NSPACE,*),JPOSA,ICOUNT,INPT(*),M2,NEXT,M1,IBCON2(*),
     $     NVAL,ITAS,IOB(*),ISPA_B,NTMPSZ,NPTST,NCI,JJ,KK
      DOUBLE PRECISION HPT(NPTST,*)

      INTEGER ITGB_EVVAE,LGCOM_EVVAE(ITGB_EVVAE,*),NBST_EVVAE(*),
     $     IPTAMI(*),IPTAMA(*),IPTBMI(*),IPTBMA(*),
     $     ISCBOX(*),IGA_EVVAE,IEND,IGB_EVVAE,ORMAS_GET_GROUP

      DOUBLE PRECISION E0B0,E0AD,EFCK(*),CI(NCI,*),SVOOO(NEXT,*),
     $     TMP3(NTMPSZ,*),TMP2(NTMPSZ,*),TMP1(NTMPSZ,*),TMP4(NTMPSZ,*),
     $     EVVAE,EPT0(*),HINT(NPTST,*),COEFF(*)



      IGA_EVVAE = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)

! LOOP OVER 1 UP BETAS
      CALL RESETCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
      DO IGB_EVVAE = 1,ITGB_EVVAE
         IEXTYP = LGCOM_EVVAE(IGB_EVVAE,IGA_EVVAE)
         IF(IEXTYP.GT.3.OR.IEXTYP.LT.1)GOTO 123

         IBELAC(1)=0
         DO I = 1,NSPACE         
            ITBOX(I)=IBBOX1(I)+IABOX1(I) 
            IBELAC(I+1) = IBELAC(I) + IBBOX1(I)
            IMIMAP(I)=ITBOX(I)-MINI(I)  
            IMXMAP(I)=ITBOX(I)-MAXI(I)  
         ENDDO                  

         DO IJB = 1,NBST_EVVAE(IGB_EVVAE)

C$$$      DO II=1,NB+1
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2810 IJB=1,N1B

C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!X    0  0  0  ...  0    :1
C$$$!X    1  0  0  ...  0    :3
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

C$$$      CALL GETBOX(IBBOX1,IBCON1,NB+1,MSTA,NSPACE) !
C$$$      ISUM = 0                  !
C$$$      IABSUM = 0                !
C$$$      DO I = 1,NSPACE           !
C$$$         IMXMAP(I)=0            !
C$$$         IMIMAP(I)=0            !
C$$$         ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$         IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$         IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$         ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$         ISUM = ISUM + ITMAP(I) !
C$$$         IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$      ENDDO                     !
C$$$      ISUMSN = ISIGN(1,ISUM)    !
C$$$      IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !

C$$$      IF(IEXTYP.GT.3.OR.IEXTYP.LT.1)GOTO 2802

C$$$      IBELAC(1) = 0             ! 
C$$$      DO I = 1,NSPACE           ! 
C$$$         IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$         IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$         IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$      ENDDO                     !

C$$$C$$$      WRITE(6,'("IEXTYP",I4)')IEXTYP
C$$$C$$$      WRITE(6,'("IMIMAP",10I4)')IMIMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("IMXMAP",10I4)')IMXMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("ITMAP",10I4)')ITMAP(1:NSPACE)


C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',13I3,' | ',14I3)")IACON1(1:NA),IBCON1(1:NB+1)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB+1,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$     $     LSPA,LSPB,LDISB,1,1)

      ICOUNT = 0
      ISYB=ISYV
      E0B0 = E0AD
      DO II=1,NB+1
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
         ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
      ENDDO
      ISYL = IMUL(ITAS,ISYB)

! DOUBLE EXCITATIONS MUST INCLUDE ALPHA IE -> IV SPECIFIED ABOVE
! SECOND EXCITATION BETA (IA2 -> IV2)
! TOTAL = ( IE(A),IA2(B) -> IV(A),IV2(B) )

! START IEXTYP  3:     1  0  0 ... 0      
      IF(IEXTYP.EQ.3)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).EQ.1)EXIT
         ENDDO                  !!!ISPA_B
         CALL EVVAE_DETACH_B(NB,IBCON1,NVAL,IOB,ISYL,IBCON2,
     $        IGA,X,NX,LBNDET,NBST,LSPA,NAST,JPOSA,LDISB,NSYM,ITGB,LSPB,
     $        ICOUNT,IMUL,INPT,M2,NEXT,M1,CI,E0B0,EFCK,SVOOO,
     $        TMP3,TMP1,TMP2,TMP4,ISYMB,IBELAC,IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      ENDIF                     !!!(IEXTYP.EQ.3)
! END IEXTYP  3

! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).EQ.0)CYCLE
            CALL EVVAE_DETACH_B(NB,IBCON1,NVAL,IOB,ISYL,IBCON2,
     $           IGA,X,NX,LBNDET,NBST,LSPA,NAST,JPOSA,LDISB,NSYM,ITGB,
     $           LSPB,ICOUNT,IMUL,INPT,M2,NEXT,M1,CI,E0B0,
     $           EFCK,SVOOO,TMP3,TMP1,TMP2,TMP4,ISYMB,IBELAC,
     $           IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

! END OF DOUBLE DEXCITATIONS

C$$$         EINT = 0.0D+00
C$$$         DO II=1,ICOUNT
C$$$            EINT = EINT + (TMP3(II)*TMP3(II)+
C$$$     *  TMP1(II)*TMP1(II)+
C$$$     *  TMP2(II)*TMP2(II))/TMP4(II)
C$$$            TMP1(II) = 0.0D+00
C$$$            TMP2(II) = 0.0D+00
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO
C$$$
C$$$         EVVAE = EVVAE + 2.0D+00*EINT
C$$$         ICOUNT = 0


         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
            HINT(JJ,KK) = HINT(JJ,KK) + (TMP3(II,JJ)*TMP3(II,KK)+
     *  TMP1(II,JJ)*TMP1(II,KK)+TMP2(II,JJ)*TMP2(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO II=1,ICOUNT
               TMP1(II,JJ) = 0.0D+00
               TMP2(II,JJ) = 0.0D+00
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
               EVVAE = EVVAE + 2.0D+00*HINT(JJ,KK)
            ENDDO
         ENDDO

         ICOUNT = 0

C$$$ 2802    CALL ADVANC(IBCON1,NB+1,NACT)
C$$$ 2810    CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
      ENDDO                     !!!IGB_EVVAE
! END OF 1 UP BETAS

      RETURN
      END SUBROUTINE EVVAE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAE_DETACH_B
      SUBROUTINE EVVAE_DETACH_B(NB,IBCON1,NVAL,IOB,ISYL,IBCON2,
     $     IGA,X,NX,LBNDET,NBST,LSPA,NAST,JPOSA,LDISB,NSYM,ITGB,LSPB,
     $     ICOUNT,IMUL,INPT,M2,NEXT,M1,CI,E0B0,EFCK,SVOOO,
     $     TMP3,TMP1,TMP2,TMP4,ISYMB,IBELAC,IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER IEL,NB,IA2,IBCON1(*),NVAL,IS1,IOB(*),ISYL,IBCON2(*),IPER,
     $     ORMAS_GET_GROUP,IGB2,IGA,JPOSB2,ORMAS_GET_STRPOS,
     $     X(*),NX,LBNDET(NSPACE,*),KSYM,NBST(*),ITP0,LSPA(*),NAST(*),
     $     JPOSA,NSYM,ITGB,LDISB(NSYM,ITGB,*),LSPB(*),
     $     ICOUNT,IV1,IP1,IMUL(NSYM,*),IA2V1,INPT(*),IV2,IS3,IS2,IPT,
     $     IA2V2,IV2A2V1,M2,IV1A2V2,IE,NEXT,M1,JE,
     $     ISYMB(*),IBBOX1(*),ISPA_B,IBELAC(*),NTMPSZ,NCI,III,NPTST


      DOUBLE PRECISION COEFF(*),CI(NCI,*),E0BV,EFCK(*),E0B0,E0BVV,T1,T2,
     $     SVOOO(NEXT,*),TMP3(NTMPSZ,*),TMP1(NTMPSZ,*),TMP2(NTMPSZ,*),
     $     TMP4(NTMPSZ,*),EPT0(*),TT

      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

      DO 2820 IEL=IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1)
         IA2 = IBCON1(IEL)+NVAL
         IS1 = IOB(IA2)
         IF (IS1.NE.ISYL) GOTO 2820
         
! DETERMINE NEW 0TH ORDER BETA, POS/PERM

         CALL STR0VA(IBCON1,IBCON2,NB+1,IEL,NVAL,NVAL,IPER)
         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $        IDIM,X,NX,LBST,LBNDET(1,IGB2))
         KSYM = ISYMB(JPOSB2+NBST(IGB2))
         ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGB2,IGA) + 
     $        LSPB(JPOSB2+NBST(IGB2))
!         COEFF = CI(ITP0)*IPER
        DO III=1,NPTST
           COEFF(III) = CI(ITP0,III)*IPER
        ENDDO

! LOOP OVER BETA VALENCE

         ICOUNT = 0
         DO 2830 IV1=1,NVAL
            IS2 = IOB(IV1)
            IP1 = IMUL(IS1,IS2)
            E0BV = E0B0 + EFCK(IV1)
            IA2V1 = INPT(IA2) + IV1

! LOOP OVER ALPHA VALENCE AND EXTERNAL

            DO 2840 IV2=1,IV1-1
               IS3 = IOB(IV2)
               IPT = IMUL(IS3,IP1)
               E0BVV = E0BV + EFCK(IV2)
               IA2V2 = INPT(IA2) + IV2
               IV2A2V1 = (IV2-1)*M2 + IA2V1
               IV1A2V2 = (IV1-1)*M2 + IA2V2

               DO 2850 IE=1,NEXT
                  JE = IE + M1
                  IF (IOB(JE).NE.IPT) GOTO 2850
                  ICOUNT = ICOUNT + 1
C$$$                  TMP4(ICOUNT) = E0BVV - EFCK(JE)
                  
C$$$                  T1 = SVOOO(IE,IV2A2V1)*COEFF
C$$$                  T2 = SVOOO(IE,IV1A2V2)*COEFF
C$$$                  TMP3(ICOUNT) = TMP3(ICOUNT) + T1
C$$$                  TMP1(ICOUNT) = TMP1(ICOUNT) + T2
C$$$                  TMP2(ICOUNT) = TMP2(ICOUNT) + (T1-T2)

       T1 = SVOOO(IE,IV2A2V1)
       T2 = SVOOO(IE,IV1A2V2)
       TT = T1 - T2
       DO III=1,NPTST                                                                     
          TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T1*COEFF(III)
          TMP1(ICOUNT,III) = TMP1(ICOUNT,III) + T2*COEFF(III)
          TMP2(ICOUNT,III) = TMP2(ICOUNT,III) + TT*COEFF(III)
          TMP4(ICOUNT,III) = E0BVV - EFCK(JE) + EPT0(III)
       ENDDO
                 
 2850          CONTINUE
 2840       CONTINUE
            
! FOR IV2.EQ.IV1

            IS3 = IOB(IV1)
            IPT = IMUL(IS3,IP1)
            E0BVV = E0BV + EFCK(IV1)
            IV2A2V1 = (IV1-1)*M2 + IA2V1
            DO 2870 IE=1,NEXT
               JE = IE + M1
               IF (IOB(JE).NE.IPT) GOTO 2870
               ICOUNT = ICOUNT + 1
C$$$               TMP4(ICOUNT) = E0BVV - EFCK(JE)

C$$$               T1 = SVOOO(IE,IV2A2V1)*COEFF
C$$$               TMP3(ICOUNT) = TMP3(ICOUNT) + T1

       T1 = SVOOO(IE,IV2A2V1)                                                             
       DO III=1,NPTST
          TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T1*COEFF(III)
          TMP4(ICOUNT,III) = E0BVV - EFCK(JE) + EPT0(III)
       ENDDO

 2870       CONTINUE

! END OF IV2.GE.IV1

 2830    CONTINUE

 2820 CONTINUE

      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

            RETURN
            END SUBROUTINE EVVAE_DETACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVAEE_TERM
      SUBROUTINE EVAEE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX,
     $     IBELAC,ISYMB,IMUL,NSYM,ITGB,NAST,LSPA,LSPB,
     $     LDISB,ISYV,IOB,NVAL,ITAS,IMS,X,NX,JPOSA,IGA,M1,NQS,NQQ,
     $     NACT,E0V,EFCK,EPT0,E0A0,CI,TMP1,TMP2,TMP3,TMP4,SVOVO,EVAEE,
     $     IBCON2,LBNDET,NBST,IABOX1,IACON1,NA,
     $     LGCOM_EVAEE,NBST_EVAEE,ITGB_EVAEE,IPTAMI,IPTAMA,
     $          IPTBMI,IPTBMA,ISCBOX,               
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER II,NB,IBCON1(*),IJB,IBBOX1(*),IMXMAP(*),
     $     IMIMAP(*),ITBOX(*),IEXTYP,IBELAC(*),
     $     ISYMB(*),NSYM,IMUL(NSYM,*),ITGB,NAST(*),
     $     LSPA(*),LSPB(*),LDISB(NSYM,ITGB,*),ISYV,ISYB0,
     $     IOB(*),NVAL,ITAS,IMS,ISPA_B,ICOUNT,X(*),NX,JPOSA,IGA,
     $     M1,NQS,NQQ,NACT,IBCON2,I,LBNDET(NSPACE,*),NBST(*),IABOX1(*),
     $     NTMPSZ,NPTST,NCI,JJ,KK,IEND
      DOUBLE PRECISION HPT(NPTST,*)
      DOUBLE PRECISION E0V,E0B0,EFCK(*),EPT0(*),E0B1,E0A0,CI(NCI,*),
     $     TMP1(NTMPSZ,*),TMP2(NTMPSZ,*),TMP3(NTMPSZ,*),TMP4(NTMPSZ,*),
     $     SVOVO(*),EVAEE,HINT(NPTST,*),COEFF(*)

      INTEGER IACON1(*),NA,ITGB_EVAEE
      INTEGER LGCOM_EVAEE(ITGB_EVAEE,*),NBST_EVAEE(*),IPTAMI(*),
     $     IPTAMA(*),IPTBMI(*),IPTBMA(*),ISCBOX(*),
     $     IGA_EVAEE,ORMAS_GET_GROUP,
     $     IGB_EVAEE


!TESTING
!      DOUBLE PRECISION EINT

      IGA_EVAEE = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)

! LOOP OVER 1 DOWN BETAS
      CALL RESETCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      DO IGB_EVAEE = 1,ITGB_EVAEE

         IEXTYP = LGCOM_EVAEE(IGB_EVAEE,IGA_EVAEE)

         IF(IEXTYP.EQ.0)GOTO 123
         IF(IEXTYP.GT.1.OR.IEXTYP.LT.(-3))GOTO 123

         IBELAC(1)=0
         DO I = 1,NSPACE         
            ITBOX(I)=IBBOX1(I)+IABOX1(I) 
            IBELAC(I+1) = IBELAC(I) + IBBOX1(I)
            IMIMAP(I)=ITBOX(I)-MINI(I)  
            IMXMAP(I)=ITBOX(I)-MAXI(I)  
         ENDDO                  

         DO IJB = 1,NBST_EVAEE(IGB_EVAEE)
 
C$$$      DO II=1,NB-1
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2530 IJB=1,ND1B

C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!    0  0  0  ...  0    :1
C$$$!   -1  0  0  ...  0    :-3
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

C$$$         CALL GETBOX(IBBOX1,IBCON1,NB-1,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !
         
C$$$         IF(IEXTYP.GT.1.OR.IEXTYP.LT.(-3))GOTO 2532
         
C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !
         
C$$$C$$$      WRITE(6,'("IEXTYP",I4)')IEXTYP
C$$$C$$$      WRITE(6,'("IMIMAP",10I4)')IMIMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("IMXMAP",10I4)')IMXMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("ITMAP",10I4)')ITMAP(1:NSPACE)

C$$$         WRITE(6,'(40(1H=))')
C$$$         WRITE(6,"('BUP',13I3,' | ',12I3)")IACON1(1:NA),IBCON1(1:NB-1)              
C$$$         CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB-1,
C$$$     $        NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $        NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$     $        LSPA,LSPB,LDISB,1,1)

      ICOUNT = 0
      ISYB0 = ISYV
      E0B0 = E0V
      DO II=1,NB-1
         E0B0 = E0B0 + EFCK(IBCON1(II)+NVAL)
         ISYB0 = IMUL(ISYB0,IOB(IBCON1(II)+NVAL))
      ENDDO
      IMS = IMUL(ISYB0,ITAS)
C$$$      E0B1 = EPT0(1)-E0B0-E0A0
      E0B1 = -E0B0-E0A0

! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).EQ.0)CYCLE
            CALL EVAEE_ATTACH_B(IBCON1,NB,NACT,NVAL,IOB,IMS,IBCON2,
     $           ITGB,X,NX,LBNDET,ISYMB,LSPA,NAST,IGA,
     $           JPOSA,LDISB,NSYM,LSPB,NBST,ICOUNT,M1,NQS,NQQ,IMUL,CI,
     $           E0B1,EFCK,TMP1,TMP2,TMP3,TMP4,SVOVO,IBELAC,
     $           IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

! START IEXTYP -3:    -1  0  0 ... 0      
      IF(IEXTYP.EQ.(-3))THEN
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).LT.0)EXIT
         ENDDO                  !!!ISPA_B
         CALL EVAEE_ATTACH_B(IBCON1,NB,NACT,NVAL,IOB,IMS,IBCON2,
     $        ITGB,X,NX,LBNDET,ISYMB,LSPA,NAST,IGA,
     $        JPOSA,LDISB,NSYM,LSPB,NBST,ICOUNT,M1,NQS,NQQ,IMUL,CI,
     $        E0B1,EFCK,TMP1,TMP2,TMP3,TMP4,SVOVO,IBELAC,
     $        IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      ENDIF                     !!!(IEXTYP.EQ.-3)
! END IEXTYP -3

C$$$      EINT = 0.0D+00
C$$$      DO II=1,ICOUNT
C$$$         EINT = EINT +
C$$$     *        (TMP1(II)*TMP1(II)+TMP2(II)*TMP2(II)+TMP3(II)*TMP3(II))
C$$$     *        /TMP4(II)
C$$$          TMP1(II) = 0.0D+00
C$$$          TMP2(II) = 0.0D+00
C$$$          TMP3(II) = 0.0D+00
C$$$          TMP4(II) = 1.0D+00
C$$$       ENDDO
C$$$       
C$$$       EVAEE = EVAEE + 2.0D+00*EINT


       DO JJ=1,NPTST
       DO KK=1,NPTST
       HINT(JJ,KK) = 0.0D+00
       DO II=1,ICOUNT
          HINT(JJ,KK) = HINT(JJ,KK) +
     *    (TMP1(II,JJ)*TMP1(II,KK)+
     *     TMP2(II,JJ)*TMP2(II,KK)+
     *     TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
       ENDDO
       ENDDO
       ENDDO
C                                                                                         
       DO JJ=1,NPTST
          DO II=1,ICOUNT
             TMP1(II,JJ) = 0.0D+00
             TMP2(II,JJ) = 0.0D+00
             TMP3(II,JJ) = 0.0D+00
             TMP4(II,JJ) = 1.0D+00
          ENDDO
       ENDDO
C                                                                                         
       DO JJ=1,NPTST
          DO KK=1,NPTST
             HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
             EVAEE = EVAEE + 2.0D+00*HINT(JJ,KK)
          ENDDO
       ENDDO
C         

       ICOUNT = 0

C$$$ 2532  CALL ADVANC(IBCON1,NB-1,NACT)
C$$$ 2530 CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      ENDDO                     !!!IGB_EVAEE

! END OF 1 DOWN BETAS

      RETURN
      END SUBROUTINE EVAEE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVAEE_ATTACH_B
      SUBROUTINE EVAEE_ATTACH_B(IBCON1,NB,NACT,NVAL,IOB,IMS,IBCON2,
     $     ITGB,X,NX,LBNDET,ISYMB,LSPA,NAST,IGA,JPOSA,
     $     LDISB,NSYM,LSPB,NBST,ICOUNT,M1,NQS,NQQ,IMUL,CI,E0B1,EFCK,
     $     TMP1,TMP2,TMP3,TMP4,SVOVO,IBELAC,IBBOX1,ISPA_B,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER IST,IEN,IBCON1(*),NB,NACT,KKJ,JJ,IA,NVAL,IS3,IOB(*),IMS,
     $     IBCON2(*),IPER2,IGB2,ITGB,JPOSB2,
     $     ORMAS_GET_STRPOS,ORMAS_GET_GROUP,X(*),NX,LBNDET(NSPACE,*),
     $     KSYM,ISYMB(*),ITP0,LSPA(*),NAST(*),IGA,JPOSA,III,NSYM,
     $     LDISB(NSYM,ITGB,*),LSPB(*),NBST(*),ICOUNT,JDV,JDA,M1,
     $     JE1,NQS,NQQ,IS1,IP2,IMUL(NSYM,*),JDAV,JDAT,JDVT,IV,IS2,IPT,
     $     INT1,INT2,JE2,IBELAC(*),IBBOX1(*),ISPA_B,NTMPSZ,NCI,NPTST

      DOUBLE PRECISION COEFF(*),CI(NCI,*),E0B1,EFCK(*),TMP4(NTMPSZ,*),
     $     T1,T2,TT,
     $     TMP1(NTMPSZ,*),TMP2(NTMPSZ,*),TMP3(NTMPSZ,*),SVOVO(*),
     $     E0BE,E0BEV,EPT0(*)

! LOOP OVER DEXCITATIONS INTO ACTIVE (IE2 -> IA)

      IST = MSTA(ISPA_B)
      IEN = IBCON1(IBELAC(ISPA_B) +1) -1
      IF(IBBOX1(ISPA_B).EQ.0)IEN = MSTA(ISPA_B +1) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

      DO 2540 KKJ=IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1) +1
         DO 2542 JJ=IST,IEN
            IA = JJ + NVAL
            IS3 = IOB(IA)
            IF (IS3.NE.IMS) GOTO 2542
                  
! DETERMINE 0TH ORDER BETA STRING, POS/PERM

            CALL STR0AE(IBCON1,IBCON2,NB,KKJ,JJ,IPER2)
            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))
            KSYM = ISYMB(JPOSB2+NBST(IGB2))
            ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGB2,IGA) + 
     $           LSPB(JPOSB2+NBST(IGB2))
C$$$            COEFF = CI(ITP0)*IPER2
       DO III=1,NPTST
          COEFF(III) = CI(ITP0,III)*IPER2
       ENDDO

! LOOP OVER DOUBLE BETA DEXCITATIONS ( IE1<IE2 -> IV,IA )

            ICOUNT = 0
            JDV = 0
            JDA = -M1 + IA
            DO 2500 JE1=NQS,NQQ
               IS1 = IOB(JE1)
               IP2 = IMUL(IS3,IS1)
               E0BE = E0B1 - EFCK(JE1)
               JDA = JDA + M1
               JDAV = (JDA*(JDA-1))/2
               JDAT = JDAV
               JDVT = (JDV*(JDV-1))/2 + IA
               
               DO 2510 IV=1,NVAL
                  IS2 = IOB(IV)
                  IPT = IMUL(IS2,IP2)
                  E0BEV = E0BE + EFCK(IV)
                  JDAT = JDAT + 1
                  JDV = JDV + 1
                  JDVT = JDVT + JDV - 1
                  
                  INT1 = -M1 + JDVT
                  INT2 = -M1 + JDAT
                  DO 2520 JE2=NQS,JE1-1
                     INT1 = INT1 + M1
                     INT2 = INT2 + M1
                     IF (IOB(JE2).NE.IPT) GOTO 2520
                     
                     ICOUNT = ICOUNT + 1
C$$$                     TMP4(ICOUNT) = E0BEV-EFCK(JE2)

! DETERMINE MATRIX ELEMENT

! ME = [IE1,IV | IE2,IA] - [IE1,IA | IE2,IV]

C$$$                     T1 = SVOVO(INT1)*COEFF
C$$$                     T2 = SVOVO(INT2)*COEFF
C$$$                     TT = T1 - T2
               
C$$$                     TMP1(ICOUNT) = TMP1(ICOUNT) + T1
C$$$                     TMP2(ICOUNT) = TMP2(ICOUNT) + T2
C$$$                     TMP3(ICOUNT) = TMP3(ICOUNT) + TT

       T1 = SVOVO(INT1)
       T2 = SVOVO(INT2)
       TT = T1 - T2
C             
       DO III=1,NPTST
          TMP1(ICOUNT,III) = TMP1(ICOUNT,III) + T1*COEFF(III)
          TMP2(ICOUNT,III) = TMP2(ICOUNT,III) + T2*COEFF(III)
          TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + TT*COEFF(III)
          TMP4(ICOUNT,III) = E0BEV-EFCK(JE2) + EPT0(III)
       ENDDO
       
 2520             CONTINUE

! IE1 = IE2

                  IF (IS3.NE.IS2) GOTO 2510
                  ICOUNT = ICOUNT + 1
C$$$                  TMP4(ICOUNT) = E0BEV-EFCK(JE1)
                  INT2 = INT2 + M1
C$$$                  T1 = SVOVO(INT2)*COEFF
C$$$                  TMP1(ICOUNT) = TMP1(ICOUNT) + T1
         T1 = SVOVO(INT2)
         DO III=1,NPTST
            TMP1(ICOUNT,III) = TMP1(ICOUNT,III) + T1*COEFF(III)
            TMP4(ICOUNT,III) = E0BEV-EFCK(JE1)+EPT0(III)
         ENDDO            
 2510          CONTINUE
               JDV = JDV + NACT
 2500       CONTINUE
            
! END OF DOUBLE BETA DEXCITATIONS ( IE1<IE2 -> IV,IA )

 2542    CONTINUE
         IST = IBCON1(KKJ)+1
         IEN = IBCON1(KKJ+1)-1
         IF(KKJ.EQ.IBELAC(ISPA_B +1)) IEN=MSTA(ISPA_B +1) -1
      
 2540 CONTINUE
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

! END OF EXCITATION INTO BETA ACTIVE

            RETURN
            END SUBROUTINE EVAEE_ATTACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAAEE_TERM
      SUBROUTINE  EAAEE_TERM(NB,IBCON1,IBBOX1,IMXMAP,IMIMAP,ITBOX,
     $     IABOX1,IBELAC,ITGB,NBST,NAST,NSYM,ISYMB,IMUL,LSPA,LSPB,
     $     LDISB,ISYV,IOB,NVAL,IBCON2,ITAS,IACON2,IGA,X,NX,
     $     LBNDET,JPOSA,NQQ,NQS,M1,IBELAC2,EPT0,E0V,E0A0,EFCK,CI,TMP4,
     $     TMP3,SVOVO,INPT,EAAEE,IACON1,NA,ISCBOX,
     $     ITGB_EAAEE,LGCOM_EAAEE,NBST_EAAEE,IAMI_EAAEE,IAMA_EAAEE,
     $     IBMA_EAAEE,IBMI_EAAEE,
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER II,NB,IBCON1(*),IJB,IBBOX1(*),I,
     $     IMXMAP(*),IMIMAP(*),ITBOX(*),IABOX1(*),
     $     IEXTYP,IBELAC(*),ITGB,NBST(*),
     $     NAST(*),NSYM,ISYMB(*),IMUL(NSYM,*),INPT(*),
     $     LSPA(*),LSPB(*),LDISB(NSYM,ITGB,*),ISB0,ISYV,IOB(*),
     $     ISPA_B,ISPA_B2,NVAL,IBCON2(*),ITAS,IACON2(*),
     $     IGA,X(*),NX,LBNDET(NSPACE,*),JPOSA,JJ,KK,
     $     NQQ,NQS,M1,ICOUNT,IBELAC2(*),NTMPSZ,NPTST,NCI
      DOUBLE PRECISION HPT(NPTST,*)

      INTEGER ITGB_EAAEE,LGCOM_EAAEE(ITGB_EAAEE,*),NBST_EAAEE(*),
     $     IAMA_EAAEE(*),IAMI_EAAEE(*),IBMA_EAAEE(*),IBMI_EAAEE(*)
      DOUBLE PRECISION E0B0,EPT0(*),E0V,E0A0,EFCK(*),CI(NCI,*),
     $     TMP4(NTMPSZ,*),TMP3(NTMPSZ,*),SVOVO(*),EAAEE,
     $     COEFF(*),HINT(NPTST,*)
      INTEGER IACON1(*),NA
      INTEGER IGB_EAAEE,IEND,IGA_EAAEE
      INTEGER ORMAS_GET_GROUP


      INTEGER ISCBOX(*)


C$$$      DO II=1,NB-2
C$$$         IBCON1(II) = II
C$$$      ENDDO
C$$$      DO 2620 IJB=1,ND2B

      IGA_EAAEE = ORMAS_GET_GROUP(NSPACE,NA,IAMA_EAAEE,IAMI_EAAEE,
     $     IABOX1)      
      CALL RESETCO(IBBOX1,NSPACE,NB-2,IBMA_EAAEE,IBMI_EAAEE,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB-2,MSTA,IBCON1)
      DO IGB_EAAEE = 1,ITGB_EAAEE
         IEXTYP =LGCOM_EAAEE(IGB_EAAEE,IGA_EAAEE)

         IF(IEXTYP.EQ.4)GOTO 123
         IF(IEXTYP.GT.1.OR.IEXTYP.LT.(-6))GOTO 123         

C$$$            IF(IEXTYP.NE.(-6))GOTO 123
         IBELAC(1) = 0          ! 
         DO I = 1,NSPACE        ! 
            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
         ENDDO                  !
         DO IJB =1,NBST_EAAEE(IGB_EAAEE)

! DETERMINE THE TYPE OF EXCITATION 
!    0  0  0  ...  0    :1
!   -1  0  0  ...  0    :-3
!   -2  0  0  ...  0    :-6
!   -1 -1  0  ... 0     :-6
! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT !!!!

C$$$         CALL GETBOX(IBBOX1,IBCON1,NB-2,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !

C$$$         IF(IEXTYP.EQ.4)GOTO 2622         
C$$$         IF(IEXTYP.GT.1.OR.IEXTYP.LT.(-6))GOTO 2622



C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !

C$$$C$$$      WRITE(6,'("IEXTYP",I4)')IEXTYP
C$$$C$$$      WRITE(6,'("IMIMAP",10I4)')IMIMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("IMXMAP",10I4)')IMXMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("ITMAP",10I4)')ITMAP(1:NSPACE)


C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',13I3,' | ',14I3)")IACON1(1:NA),IBCON1(1:NB-2)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB-2,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$     $     LSPA,LSPB,LDISB,2,2)

      ICOUNT = 0
      E0B0 = -E0V-E0A0
C$$$      E0B0 = EPT0(1)-E0V-E0A0
      ISB0 = ISYV
      DO II=1,NB-2
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
         ISB0 = IMUL(ISB0,IOB(IBCON1(II)+NVAL))
      ENDDO

! START IEXTYP -6:    -2  0  0 ... 0      
!                     -1 -1  0 ... 0      
      IF(IEXTYP.EQ.(-6))THEN
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).LT.0)THEN
               IMIMAP(ISPA_B) = IMIMAP(ISPA_B) +1
               DO ISPA_B2 = ISPA_B,NSPACE
                  IF(IMIMAP(ISPA_B2).GT.(-1))CYCLE
                  CALL EAAEE_ATTACH_BB(IBCON1,NB,NVAL,ISB0,IBCON2,
     $                 IOB,IMUL,NSYM,ITAS,IACON2,ITGB,IGA,
     $                 X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,JPOSA,LDISB,
     $                 LSPB,NQS,NQQ,INPT,M1,CI,E0B0,EFCK,TMP4,SVOVO,
     $                 TMP3,ISPA_B,ISPA_B2,IBELAC,IBBOX1,IBELAC2,ICOUNT,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
                  EXIT          !!!ISPA_B2
               ENDDO            !!!ISPA_B2
               IMIMAP(ISPA_B) = IMIMAP(ISPA_B) -1
            EXIT                !!!ISPA_B
            ENDIF               !!!(IMIMAP(ISPA_B).EQ.(-1))
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP -6

! START IEXTYP -3:    -1  0  0 ... 0      
      IF(IEXTYP.EQ.(-3))THEN
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).EQ.(-1))THEN
               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
               DO ISPA_B2 = 1,NSPACE
                  IF(IMXMAP(ISPA_B2).EQ.0)CYCLE
                  CALL EAAEE_ATTACH_BB(IBCON1,NB,NVAL,ISB0,IBCON2,
     $                 IOB,IMUL,NSYM,ITAS,IACON2,ITGB,IGA,
     $                 X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,JPOSA,LDISB,
     $                 LSPB,NQS,NQQ,INPT,M1,CI,E0B0,EFCK,TMP4,SVOVO,
     $                 TMP3,ISPA_B,ISPA_B2,IBELAC,IBBOX1,IBELAC2,ICOUNT,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
               ENDDO            !!!ISPA_B2
               IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
            EXIT                !!!ISPA_B
            ENDIF               !!!(IMIMAP(ISPA_B).EQ.(-1))
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP -3
      
! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) +1
            DO ISPA_B2 = ISPA_B,NSPACE
               IF(IMXMAP(ISPA_B2).GT.(-1))CYCLE
               CALL EAAEE_ATTACH_BB(IBCON1,NB,NVAL,ISB0,IBCON2,IOB,
     $              IMUL,NSYM,ITAS,IACON2,ITGB,IGA,X,NX,
     $              LBNDET,ISYMB,NBST,LSPA,NAST,JPOSA,LDISB,LSPB,NQS,
     $              NQQ,INPT,M1,CI,E0B0,EFCK,TMP4,SVOVO,TMP3,ISPA_B,
     $              ISPA_B2,IBELAC,IBBOX1,IBELAC2,ICOUNT,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ENDDO               !!!ISPA_B2
            IMXMAP(ISPA_B) = IMXMAP(ISPA_B) -1
         ENDDO                  !!!ISPA_B
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1
 
!FORNOW
C$$$         EINT = 0.0D+00
C$$$         DO II=1,ICOUNT
C$$$            EINT = EINT + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO

C$$$         EAAEE = EAAEE + 2.0D+00*EINT

         DO JJ=1,NPTST                                                                    
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
         HINT(JJ,KK)=HINT(JJ,KK)+(TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO II=1,ICOUNT
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
               EAAEE = EAAEE + 2.0D+00*HINT(JJ,KK)
            ENDDO
         ENDDO


         ICOUNT = 0

! END OF DOUBLE BETA DEXCITATIONS ( IE1<IE2 -> IA1<IA2 )

            CALL MOVEUP2(IBBOX1,NSPACE,NB-2,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123   CALL PUSHCO(IBBOX1,NSPACE,NB-2,IBMA_EAAEE,IBMI_EAAEE,ISCBOX,IEND)
       CALL RESETDE(IBBOX1,NSPACE,NB-2,MSTA,IBCON1)
      ENDDO                     !!!IGB_EAAEE


C$$$ 2622    CALL ADVANC(IBCON1,NB-2,NACT)
C$$$ 2620    CONTINUE

      RETURN
      END SUBROUTINE EAAEE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAAEE_ATTACH_BB
      SUBROUTINE EAAEE_ATTACH_BB(IBCON1,NB,NVAL,ISB0,IBCON2,IOB,
     $     IMUL,NSYM,ITAS,IACON2,ITGB,IGA,X,NX,LBNDET,
     $     ISYMB,NBST,LSPA,NAST,JPOSA,LDISB,LSPB,NQS,NQQ,INPT,M1,
     $     CI,E0B0,EFCK,TMP4,SVOVO,TMP3,ISPA_B,ISPA_B2,IBELAC,IBBOX1,
     $     IBELAC2,ICOUNT,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER IST,IEN,IBCON1(*),NB,KKJ,JJ,IA1,NVAL,IS3,ISYBE1,
     $     ISB0,IBCON2(*),IPER,IST2,IEN2,KKJ2,JJ2,IA2,IS4,IOB(*),
     $     ISYBE2,NSYM,IMUL(NSYM,*),ITAS,IP2,IACON2(*),IPER2,IPERT,
     $     IGA2,ORMAS_GET_GROUP,ITGB,IGA,
     $     JPOSA2,ORMAS_GET_STRPOS,X(*),NX,LBNDET(NSPACE,*),KSYM,
     $     ISYMB(*),NBST(*),ITP0,LSPA(*),NAST(*),JPOSA,
     $     LDISB(NSYM,ITGB,*),LSPB(*),ICOUNT,JE1,NQS,NQQ,IS1,IPT,
     $     IE1A1,IE1A2,IE1A1T,IE1A2T,INPT(*),INT1,INT2,M1,JE2,
     $     ISPA_B,ISPA_B2,IBELAC(*),IBBOX1(*),IBELAC2(*),I,KKJ2_INT,
     $     NTMPSZ,NCI,NPTST,III
      DOUBLE PRECISION COEFF(*),CI(NCI,*),E0B0,EFCK(*),E0BE1,
     $     TMP4(NTMPSZ,*),T,SVOVO(*),TMP3(NTMPSZ,*),EPT0(*)

! LOOP OVER DOUBLE BETA DEXCTIATIONS ( IE1<IE2 -> IA1<IA2 )

      IST = MSTA(ISPA_B)
      IEN = IBCON1(IBELAC(ISPA_B) +1) -1
      IF(IBBOX1(ISPA_B).EQ.0)IEN = MSTA(ISPA_B +1) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1
      IBELAC2(1) = 0
      DO I =1,NSPACE
         IBELAC2(I+1) = IBELAC2(I) + IBBOX1(I)
      ENDDO
      DO 2630 KKJ = IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1) +1
         DO 2632 JJ=IST,IEN
            IA1 = JJ + NVAL
            IS3 = IOB(IA1)
            ISYBE1 = IMUL(ISB0,IS3)
            CALL STR0AE(IBCON1,IBCON2,NB-1,KKJ,JJ,IPER)
            
            IST2 = MSTA(ISPA_B2)
            IEN2 = IBCON2(IBELAC2(ISPA_B2) +1) -1
            IF(IBBOX1(ISPA_B2).EQ.0)IEN2 = MSTA(ISPA_B2 +1) -1
            KKJ2_INT = IBELAC2(ISPA_B2) +1
            IF(ISPA_B.EQ.ISPA_B2)THEN
               IST2 = JJ +1
               IEN2 = IBCON2(KKJ +1) -1
               IF(IBELAC2(ISPA_B2 +1).EQ.KKJ)IEN2 = MSTA(ISPA_B2 +1) -1
               KKJ2_INT = KKJ +1
            ENDIF               !!!(ISPA_B.EQ.ISPA_B2)
            IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) +1
            IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
            DO 2640 KKJ2=KKJ2_INT,IBELAC2(ISPA_B2 +1) +1
               
               DO 2642 JJ2=IST2,IEN2
                  IA2 = JJ2 + NVAL
                  IS4 = IOB(IA2)
                  ISYBE2 = IMUL(ISYBE1,IS4)
                  IF (ISYBE2.NE.ITAS) GOTO 2642
                  IP2 = IMUL(IS4,IS3)
                  
! DETERMINE NEW 0TH ORDER BETA, POS/PERM AND MATRIX ELEMENT
                  CALL STR0AE(IBCON2,IACON2,NB,KKJ2,JJ2,IPER2)
                  IPERT = IPER*IPER2
                  JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,
     $                 MSTA,IDIM,X,NX,LBST,LBNDET(1,IGA2))
                  KSYM = ISYMB(JPOSA2+NBST(IGA2))
                  ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGA2,IGA) + 
     $                 LSPB(JPOSA2+NBST(IGA2))
C$$$                  COEFF = CI(ITP0)*IPERT
         DO III=1,NPTST
            COEFF(III) = CI(ITP0,III)*IPERT
         ENDDO

! LOOP OVER EXTERNAL ORBITALS

                  ICOUNT = 0
                  DO 2600 JE1=NQS,NQQ
                     IS1 = IOB(JE1)
                     IPT = IMUL(IS1,IP2)
                     E0BE1 = E0B0 - EFCK(JE1)
                     IE1A1 = (JE1-M1-1)*M1 + IA1
                     IE1A2 = IE1A1 - IA1 + IA2
                     IE1A1T = INPT(IE1A1)
                     IE1A2T = INPT(IE1A2)
                     
                     INT1 = IE1A1T + IA2 - M1
                     INT2 = IE1A2T + IA1 - M1
                     DO 2610 JE2=NQS,JE1-1
                        INT1 = INT1 + M1
                        INT2 = INT2 + M1
                        ICOUNT = ICOUNT + 1
                        IF (IOB(JE2).NE.IPT) GOTO 2610
C$$$                        TMP4(ICOUNT) = E0BE1 - EFCK(JE2)
                        
! ME = [IE2,IA2 | IE1,IA1] - [IE2,IA1 | IE1,IA2]

                        T = SVOVO(INT1) - SVOVO(INT2)
C$$$                        TMP3(ICOUNT) = TMP3(ICOUNT) + COEFF*T
         DO III=1,NPTST
            TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + COEFF(III)*T
            TMP4(ICOUNT,III) = E0BE1 - EFCK(JE2) + EPT0(III)
         ENDDO

 2610                CONTINUE
 2600             CONTINUE

 2642          CONTINUE
               IST2 = IBCON2(KKJ2)+1
               IEN2 = IBCON2(KKJ2+1)-1
               IF(KKJ2.EQ.IBELAC2(ISPA_B2 +1)) IEN2=MSTA(ISPA_B2 +1) -1
 2640       CONTINUE
            IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) -1
            
 2632    CONTINUE
         IST = IBCON1(KKJ)+1
         IEN = IBCON1(KKJ+1)-1
         IF(KKJ.EQ.IBELAC(ISPA_B +1)) IEN=MSTA(ISPA_B +1) -1
 2630 CONTINUE
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

            RETURN
            END SUBROUTINE EAAEE_ATTACH_BB
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVE_TERM
      SUBROUTINE EVE_TERM(NB,IBCON1,NACT,IBBOX1,IMXMAP,IMIMAP,IAELAC,
     $     IBELAC,IACON1,NA,ITGB,NSYM,ISYMB,IMUL,ITAB,LSPA,LSPB,LDISB,
     $     ISYV,X,NX,LBNDET,NBST,NAST,IGA,JPOSA,NVAL,IOB,NEXT,M1,INPT,
     $     M2,ITAS,ISA1,LANDET,IBCON2,IACON2,IABOX1,E0AD,EFCK,CI,TMP4,
     $     TMP3,SI1,SVOOO,EVE,ITBOX,
     $     LGCOM_EVE,NBST_EVE,ITGB_EVE,IPTAMI,IPTAMA,IPTBMI,IPTBMA,
     $     ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)

      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER II,NB,IBCON1(*),IJB,NACT,IBBOX1(*),IMXMAP(*),IMIMAP(*),
     $     IEXTYP,IAELAC(*),IBELAC(*),IACON1(*),NA,ITGB,NSYM,ISYMB(*),
     $     IMUL(NSYM,*),ITAB(*),LSPA(*),LSPB(*),LDISB(NSYM,ITGB,*),
     $     ICOUNT,ISYB,ISYV,IGB,JPOSB,ORMAS_GET_GROUP,X(*),NX,
     $     LBNDET(NSPACE,*),KSYM,NBST(*),NAST(*),IGA,JPOSA,ITP0,NVAL,
     $     IOB(*),NEXT,M1,INPT(*),M2,ISPA_SHIFT,ITAS,ISA1,ITGB_EVE,
     $     LANDET(NSPACE,*),ORMAS_GET_STRPOS,IBCON2(*),IACON2(*),
     $     IABOX1(*),ISPA_CRIT,LGCOM_EVE(ITGB_EVE,*),NBST_EVE(*),
     $     IEND,IGA_EVE,ISCBOX(*),IPTAMI(*),IPTAMA(*),
     $     IPTBMI(*),IPTBMA(*),IGB_EVE,NTMPSZ,NPTST,NCI,JJ,KK
      DOUBLE PRECISION HPT(NPTST,*)

      DOUBLE PRECISION E0B0,E0AD,EFCK(*),CI(NCI,*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),SI1(*),SVOOO(*),EVE,HINT(NPTST,*),
     $     COEFF(*),EPT0(*)
!TEMPORARY
      INTEGER I,ITBOX(*)


      IGA_EVE = ORMAS_GET_GROUP(NSPACE,NA,IPTAMA,IPTAMI,IABOX1)

      CALL RESETCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)
      DO IGB_EVE = 1,ITGB_EVE
         IEXTYP = LGCOM_EVE(IGB_EVE,IGA_EVE)
         IF(IEXTYP.GT.4.OR.IEXTYP.LT.(-3))GOTO 123
         IAELAC(1) = 0          !          
         IBELAC(1) = 0          ! 
         DO I = 1,NSPACE        ! 
            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
         ENDDO                  !
        
         DO IJB = 1,NBST_EVE(IGB_EVE)

C$$$        DO II=1,NB
C$$$           IBCON1(II) = II
C$$$        ENDDO
C$$$        DO 2700 IJB=1,IFA(NACT,NB)
C$$$
C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$!    0  0  0  ...  0    :1
C$$$!    1  0  0  ...  0    :3
C$$$!   -1  0  0  ...  0    :-3
C$$$!    1 -1  0  ...  0    :4
C$$$! HOPE I GOT THEM ALL AS ALL OTHERS ARE SCREENED OUT
C$$$
C$$$         CALL GETBOX(IBBOX1,IBCON1,NB,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !
C$$$
C$$$!         IF(IEXTYP.GT.4.OR.IEXTYP.LT.(-3))GOTO 2702
C$$$
C$$$         IAELAC(1) = 0          !          
C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !
C$$$         
C$$$C$$$      WRITE(6,'("IEXTYP",I4)')IEXTYP
C$$$C$$$      WRITE(6,'("IMIMAP",10I4)')IMIMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("IMXMAP",10I4)')IMXMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("ITMAP",10I4)')ITMAP(1:NSPACE)
C$$$C$$$      WRITE(6,'("IAELAC",10I4)')IAELAC(1:NSPACE+1)
C$$$C$$$      WRITE(6,'("IBELAC",10I4)')IBELAC(1:NSPACE+1)
C$$$C$$$      WRITE(6,'("IABOX1",10I4)')IABOX1(1:NSPACE)
C$$$C$$$      WRITE(6,'("IBBOX1",10I4)')IBBOX1(1:NSPACE)
C$$$C$$$      WRITE(6,'("ITBOX",10I4)')ITBOX(1:NSPACE)
C$$$
C$$$C$$$      WRITE(6,'(40(1H=))')
C$$$C$$$      WRITE(6,"('BUP',3I3,' | ',3I3)")IACON1(1:NA),IBCON1(1:NB)              
C$$$C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA,NB,
C$$$C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$C$$$     $     LSPA,LSPB,LDISB,1,1)

      ICOUNT = 0
      ISYB = ISYV
      E0B0 = E0AD
      DO II=1,NB
         ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
      ENDDO

! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         IF (ISYB.NE.ITAS)GOTO 1000
         IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
         JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $        IDIM,X,NX,LBST,LBNDET(1,IGB))
         KSYM = ISYMB(JPOSB+NBST(IGB))          
         ITP0 = LSPA(NAST(IGA) +JPOSA) +LDISB(KSYM,IGB,IGA) +
     $        LSPB(JPOSB+NBST(IGB))
         CALL EVE_ZERO_DETERMINANT(IBCON1,NB,NVAL,IOB,NEXT,M1,NACT,
     $        INPT,M2,CI,E0B0,EFCK,TMP4,TMP3,SI1,SVOOO,IACON1,NA,ITP0,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
 1000    CONTINUE 
         DO ISPA_SHIFT = 1,NSPACE
            IF(IMIMAP(ISPA_SHIFT).LT.1)THEN
               CALL EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,
     $              NVAL,IOB,INPT,IACON2,ITGB,IGB,X,NX,
     $              LANDET,ISYMB,JPOSB,ITAS,NBST,LSPA,NAST,LDISB,
     $              NSYM,LSPB,IBCON1,NB,ICOUNT,M2,NEXT,IBCON2,
     $              IGA,JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,TMP3,
     $              SVOOO,CI,ISPA_SHIFT,ISPA_SHIFT,IAELAC,IBELAC,
     $              IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ELSE                !!!(IMIMAP(ISPA_SHIFT)
               IMXMAP(ISPA_SHIFT) = IMXMAP(ISPA_SHIFT) -1
               DO ISPA_CRIT = 1,NSPACE
                  IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
                  CALL EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,
     $                 NVAL,IOB,INPT,IACON2,ITGB,IGB,X,NX,
     $                 LANDET,ISYMB,JPOSB,ITAS,NBST,LSPA,NAST,LDISB,
     $                 NSYM,LSPB,IBCON1,NB,ICOUNT,M2,NEXT,IBCON2,
     $                 IGA,JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,TMP3,
     $                 SVOOO,CI,ISPA_SHIFT,ISPA_CRIT,IAELAC,IBELAC,
     $                 IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
               ENDDO
               IMXMAP(ISPA_SHIFT) = IMXMAP(ISPA_SHIFT) +1
            ENDIF               !!!(IMIMAP(ISPA_SHIFT)
         ENDDO
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

! START IEXTYP  3:     1  0  0 ... 0      
      IF(IEXTYP.EQ.3)THEN
         DO ISPA_SHIFT = 1,NSPACE
            IF(IMXMAP(ISPA_SHIFT).NE.1)CYCLE
            DO ISPA_CRIT = 1,NSPACE
               IF(IMXMAP(ISPA_CRIT).GT.(-1))CYCLE
               CALL EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,NVAL,
     $              IOB,INPT,IACON2,ITGB,IGB,X,NX,LANDET,
     $              ISYMB,JPOSB,ITAS,NBST,LSPA,NAST,LDISB,NSYM,LSPB,
     $              IBCON1,NB,ICOUNT,M2,NEXT,IBCON2,IGA,
     $              JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,TMP3,SVOOO,CI,
     $              ISPA_SHIFT,ISPA_CRIT,IAELAC,IBELAC,IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ENDDO               !!!ISPA_CRIT
            EXIT
         ENDDO                  !!!ISPA_SHIFT
      ENDIF                     !!!(IEXTYP.EQ.3)
! END IEXTYP  3


! START IEXTYP  4:     1 -1  0 ... 0      
      IF(IEXTYP.EQ.4)THEN
         DO ISPA_SHIFT = 1,NSPACE
            IF(IMXMAP(ISPA_SHIFT).NE.1)CYCLE
            DO ISPA_CRIT = 1,NSPACE
               IF(IMIMAP(ISPA_CRIT).NE.(-1))CYCLE
               CALL EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,NVAL,
     $              IOB,INPT,IACON2,ITGB,IGB,X,NX,LANDET,
     $              ISYMB,JPOSB,ITAS,NBST,LSPA,NAST,LDISB,NSYM,LSPB,
     $              IBCON1,NB,ICOUNT,M2,NEXT,IBCON2,IGA,
     $              JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,TMP3,SVOOO,CI,
     $              ISPA_SHIFT,ISPA_CRIT,IAELAC,IBELAC,IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
               EXIT
            ENDDO               !!!ISPA_CRIT
            EXIT
         ENDDO                  !!!ISPA_SHIFT
      ENDIF                     !!!(IEXTYP.EQ.4)
! END IEXTYP  4

! START IEXTYP -3:    -1  0  0 ... 0      
      IF(IEXTYP.EQ.(-3))THEN
         DO ISPA_CRIT = 1,NSPACE
            IF(IMIMAP(ISPA_CRIT).NE.(-1))CYCLE
            DO ISPA_SHIFT = 1,NSPACE
               IF(IMIMAP(ISPA_SHIFT).LT.1)CYCLE
               CALL EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,NVAL,
     $              IOB,INPT,IACON2,ITGB,IGB,X,NX,LANDET,
     $              ISYMB,JPOSB,ITAS,NBST,LSPA,NAST,LDISB,NSYM,LSPB,
     $              IBCON1,NB,ICOUNT,M2,NEXT,IBCON2,IGA,
     $              JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,TMP3,SVOOO,CI,
     $              ISPA_SHIFT,ISPA_CRIT,IAELAC,IBELAC,IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
            ENDDO               !!!ISPA_SHIFT
         ENDDO                  !!!ISPA_CRIT
      ENDIF                     !!!(IEXTYP.EQ.(-3))
! END IEXTYP -3

C$$$      EINT = 0.0D+00
C$$$      DO II=1,ICOUNT
C$$$         EINT = EINT + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$         TMP3(II) = 0.0D+00
C$$$         TMP4(II) = 1.0D+00
C$$$      ENDDO
C$$$      EVE = EVE + 2.0D+00*EINT

         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
         HINT(JJ,KK)=HINT(JJ,KK)+(TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO II=1,ICOUNT                                                                
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)
               EVE = EVE + 2.0D+00*HINT(JJ,KK)
            ENDDO
         ENDDO


      ICOUNT = 0
     
C$$$ 2702    CALL ADVANC(IBCON1,NB,NACT)
C$$$ 2700   CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)
      ENDDO                     !!!IGB

      RETURN
      END SUBROUTINE EVE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVE_SHIFT_A_B
      SUBROUTINE EVE_SHIFT_A_B(ISYB,ITAB,ISA1,IMUL,NA,IACON1,NVAL,
     $     IOB,INPT,IACON2,ITGB,IGB,X,NX,LANDET,ISYMB,
     $     JPOSB,ITAS,
     $     NBST,LSPA,NAST,LDISB,NSYM,LSPB,IBCON1,NB,ICOUNT,M2,NEXT,
     $     IBCON2,IGA,JPOSA,LBNDET,M1,E0B0,EFCK,TMP4,
     $     TMP3,SVOOO,CI,ISPA_SHIFT,ISPA_CRIT,IAELAC,IBELAC,
     $     IABOX1,IBBOX1,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER ISYT,ITAB(*),ISYB,ISYL,NSYM,IMUL(NSYM,*),ISA1,IEL2,NA,IA2,
     $     IACON1(*),IS1,IOB(*),IST,IEN,KKJ,JJ,JJA,IS2,IP1,MA,MI,
     $     IA2A3,INPT(*),IACON2(*),ISWAP2,IPER2,IGA2,
     $     ORMAS_GET_GROUP,ITGB,IGB,JPOSA2,JPOSB,III,
     $     ORMAS_GET_STRPOS,X(*),NX,LANDET(NSPACE,*),KSYM,ISYMB(*),
     $     NBST(*),ITP0,LSPA(*),NAST(*),LDISB(NSYM,ITGB,*),LSPB(*),
     $     IBCON1(*),NB,ICOUNT,IV,NVAL,IS3,IA2V,IVA2A3,M2,IA3A2V,IE,
     $     NEXT,IS4,IP2,IBCON2(*),IGB2,IGA,JPOSA,JPOSB2,
     $     LBNDET(NSPACE,*),M1,IPT,ITAS,JE,ISPA_SHIFT,ISPA_CRIT,
     $     IAELAC(*),IBELAC(*),IABOX1(*),IBBOX1(*),NCI,NTMPSZ,NPTST

      DOUBLE PRECISION E0B0,E0B0V,EFCK(*),TMP4(NTMPSZ,*),TMP3(NTMPSZ,*),
     $     T1,T2,TT,SVOOO(NEXT,*),COEFF(*),CI(NCI,*),EPT0(*)

      IF(IABOX1(ISPA_SHIFT).EQ.0)GOTO 1000

      IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB))

! 2ND EXCITATION: ALPHA ACT(IA2 -> JJA)
! TOTAL = ALPHA (IE,IA2 -> IV,JJA)

      ISYT = ITAB(ISYB)
      ISYL = IMUL(ISYT,ISA1)

C$$$      WRITE(6,*)'INN'
      IABOX1(ISPA_SHIFT) = IABOX1(ISPA_SHIFT) -1
      IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) +1
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IABOX1(ISPA_SHIFT) = IABOX1(ISPA_SHIFT) +1
      IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) -1


      DO 2730 IEL2=IAELAC(ISPA_SHIFT) +1,IAELAC(ISPA_SHIFT +1)
         IA2 = IACON1(IEL2) + NVAL
         IS1 = IOB(IA2)

         IST = MSTA(ISPA_CRIT)
         IEN = IACON1(IAELAC(ISPA_CRIT) +1) -1
         IF(IABOX1(ISPA_CRIT).EQ.0)IEN=MSTA(ISPA_CRIT +1) -1

         IABOX1(ISPA_SHIFT) = IABOX1(ISPA_SHIFT) -1
         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) +1
         DO 2740 KKJ=IAELAC(ISPA_CRIT) +1,IAELAC(ISPA_CRIT +1) +1

            DO 2742 JJ=IST,IEN
               JJA = JJ + NVAL
               IS2 = IOB(JJA)
               IP1 = IMUL(IS1,IS2)
               IF (IP1.NE.ISYL) GOTO 2742
               MA = MAX(IA2,JJA)
               MI = MIN(IA2,JJA)
               IA2A3 = INPT(MA) + MI
               
               CALL RET1DET(IACON1,IACON2,NA,IEL2,JJ,0,KKJ,ISWAP2)
               IPER2 = (-1)**ISWAP2

               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))
               KSYM = ISYMB(JPOSB+NBST(IGB))
               ITP0 = LSPA(NAST(IGA2) +JPOSA2) +LDISB(KSYM,IGB,IGA2) + 
     $              LSPB(JPOSB+NBST(IGB))

C$$$               COEFF = CI(ITP0)*IPER2
           DO III=1,NPTST
              COEFF(III) = CI(ITP0,III)*IPER2
           ENDDO

               ICOUNT = 0
               DO 2750 IV=1,NVAL
                  IS3 = IOB(IV)
                  E0B0V = E0B0 + EFCK(IV)
                  IA2V = INPT(IA2) + IV
                  IVA2A3 = (IV-1)*M2 + IA2A3
                  IA3A2V = (JJA-1)*M2 + IA2V
                  
                  DO 2760 IE=1,NEXT
                     ICOUNT = ICOUNT + 1
                     JE = IE + M1
                     IS4 = IOB(JE)
                     IP2 = IMUL(IS4,IS3)
                     IF (IP1.NE.IP2) GOTO 2760
C$$$                     TMP4(ICOUNT) = E0B0V - EFCK(JE)
                     
! MATRIX ELEMENT

C$$$                     T1 = SVOOO(IE,IVA2A3)*COEFF
C$$$                     T2 = SVOOO(IE,IA3A2V)*COEFF
C$$$                     TMP3(ICOUNT) = TMP3(ICOUNT) + (T1-T2)

         T1 = SVOOO(IE,IVA2A3)                                                            
         T2 = SVOOO(IE,IA3A2V)
         TT = T1 - T2
         DO III=1,NPTST
            TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + TT*COEFF(III)
            TMP4(ICOUNT,III) = E0B0V - EFCK(JE) + EPT0(III)
         ENDDO
                     
 2760             CONTINUE
 2750          CONTINUE
               
 2742       CONTINUE
            IST = IACON1(KKJ)+1
            IEN = IACON1(KKJ+1)-1
            IF (KKJ.EQ.IAELAC(ISPA_CRIT +1)) IEN=MSTA(ISPA_CRIT +1)-1
 2740    CONTINUE
         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) -1         
         IABOX1(ISPA_SHIFT) = IABOX1(ISPA_SHIFT) +1
 2730 CONTINUE


! END OF ALPHA ACT (IA2 -> JJA) DEXCITE


 1000 IF(IBBOX1(ISPA_SHIFT).EQ.0)RETURN
! 2ND EXCITATION: BETA ACT (IA2 -> JJA)
! TOTAL = ( IE(A),IA2(B) -> IV(A),JJA(B) )

      ISYL = IMUL(ITAS,ISYB)

      IBBOX1(ISPA_SHIFT) = IBBOX1(ISPA_SHIFT) -1
      IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) +1
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)      
      IBBOX1(ISPA_SHIFT) = IBBOX1(ISPA_SHIFT) +1
      IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) -1

      DO 2770 IEL2=IBELAC(ISPA_SHIFT) +1,IBELAC(ISPA_SHIFT +1)
         
         IA2 = IBCON1(IEL2)+NVAL
         IS1 = IOB(IA2)
         
         IST = MSTA(ISPA_CRIT)
         IEN = IBCON1(IBELAC(ISPA_CRIT) +1) -1

         IF(IBBOX1(ISPA_CRIT).EQ.0)IEN=MSTA(ISPA_CRIT +1) -1

         IBBOX1(ISPA_SHIFT) = IBBOX1(ISPA_SHIFT) -1
         IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) +1
         DO 2780 KKJ=IBELAC(ISPA_CRIT) +1,IBELAC(ISPA_CRIT +1) +1

            DO 2782 JJ=IST,IEN
               JJA = JJ + NVAL
               IS2 = IOB(JJA)
               IP1 = IMUL(IS1,IS2)
               IF (IP1.NE.ISYL) GOTO 2782
               
               MA = MAX(IA2,JJA)
               MI = MIN(IA2,JJA)
               IA2A3 = INPT(MA) + MI
               
               CALL RET1DET(IBCON1,IBCON2,NB,IEL2,JJ,0,KKJ,ISWAP2)
               IPER2 = (-1)**ISWAP2

               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB2))
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 = LSPA(NAST(IGA) +JPOSA) +LDISB(KSYM,IGB2,IGA) +
     $              LSPB(JPOSB2+NBST(IGB2))
C$$$               COEFF = CI(ITP0)*IPER2
          DO III=1,NPTST
             COEFF(III) = CI(ITP0,III)*IPER2
          ENDDO
               
               ICOUNT = 0
               DO 2785 IV=1,NVAL
                  IS3 = IOB(IV)
                  IPT = IMUL(IS3,IP1)
                  E0B0V = E0B0 + EFCK(IV)
                  IA2V = INPT(IA2) + IV
                  IVA2A3 = (IV-1)*M2 + IA2A3
                  
                  DO 2790 IE=1,NEXT
                     ICOUNT = ICOUNT + 1
                     JE = IE + M1
                     IF (IOB(JE).NE.IPT) GOTO 2790
C$$$                     TMP4(ICOUNT) = E0B0V - EFCK(JE)
                     
!  MATRIX ELEMENT

C$$$                     T1 = SVOOO(IE,IVA2A3)*COEFF
C$$$                     TMP3(ICOUNT) = TMP3(ICOUNT) + T1
         T1 = SVOOO(IE,IVA2A3)
         DO III=1,NPTST
            TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T1*COEFF(III)
            TMP4(ICOUNT,III) = E0B0V - EFCK(JE) + EPT0(III)
         ENDDO

 2790             CONTINUE
 2785          CONTINUE

 2782       CONTINUE
            IST = IBCON1(KKJ)+1
            IEN = IBCON1(KKJ+1)-1
            IF (KKJ.EQ.IBELAC(ISPA_CRIT +1)) IEN=MSTA(ISPA_CRIT +1)-1
 2780    CONTINUE
      IBBOX1(ISPA_SHIFT) = IBBOX1(ISPA_SHIFT) +1
      IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) -1
 2770 CONTINUE

! END OF 2ND EXCITATION BETA (IA2 -> JJ)

      RETURN
      END SUBROUTINE EVE_SHIFT_A_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVE_ZERO_DETERMINANT
      SUBROUTINE EVE_ZERO_DETERMINANT(IBCON1,NB,NVAL,IOB,NEXT,M1,
     $     NACT,INPT,M2,CI,E0B0,EFCK,TMP4,TMP3,SI1,SVOOO,IACON1,NA,ITP0,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE

      INTEGER IBCON1(*),NB,ITP0,NA,IACON1(*),ICOUNT,IV,NVAL,IS1,IOB(*),
     $     IE,JE,M1,IS2,NACT,NEXT,INPT(*),M2,NCI,NTMPSZ,NPTST,III

      DOUBLE PRECISION COEFF(*),CI(NCI,*),E0B0V,E0B0,EFCK(*),
     $     TMP4(NTMPSZ,*),T,TMP3(NTMPSZ,*),SI1(*),SVOOO(NEXT,*),EPT0(*)

C$$$      COEFF = CI(ITP0)

           DO III=1,NPTST
              COEFF(III) = CI(ITP0,III)
           ENDDO
      
! SINGLE DEXCITATIONS, ALPHA IE -> IV

      ICOUNT = 0
      DO 2710 IV=1,NVAL
         IS1 = IOB(IV)
         E0B0V = E0B0 + EFCK(IV)
         
         DO 2720 IE=1,NEXT
            ICOUNT = ICOUNT + 1
            JE = IE + M1
            IS2 = IOB(JE)
            IF (IS1.NE.IS2) GOTO 2720
C$$$            TMP4(ICOUNT) = E0B0V - EFCK(JE)
            
! MATRIX ELEMENT

            CALL ME0VE1B(IV,IE,IACON1,NA,IBCON1,NB,NVAL,
     *           NACT,NEXT,INPT,SI1,SVOOO,M2,T)
C$$$            TMP3(ICOUNT) = TMP3(ICOUNT) + T*COEFF

          DO III=1,NPTST
             TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T*COEFF(III)
             TMP4(ICOUNT,III) = E0B0V - EFCK(JE) + EPT0(III)
          ENDDO
            
 2720    CONTINUE
         
 2710 CONTINUE
      
! END OF SINGLE DEXCITATIONS

      RETURN
      END SUBROUTINE EVE_ZERO_DETERMINANT

!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVA_DETACH_B
      SUBROUTINE EVA_DETACH_B(NB,EFCK,IBCON1,NVAL,IOB,
     $    IBCON2,X,NX,LBNDET,ISYMB,NBST,LSPA,NAST,
     $    JPOSA,IGA,LDISB,LSPB,CI,TMP4,IACON1,NA,SI1,SI2,TMP3,NSYM,
     $    ITGB,INPT,IBBOX1,IBELAC,ISPA_B,
     $    E0B0,ISYL,EPT0,NPTST,NCI,NTMPSZ,COEFF)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER NB,IBCON1(*),NVAL,ISYL,
     $     IEL,IA,IS1,IOB(*),IBCON2(*),IPER,IGB2,IGA,JPOSB2,
     $     ORMAS_GET_STRPOS,NX,X(*),LBNDET(NSPACE,*),ITGB,
     $     KSYM,ISYMB(*),NBST(*),ITP0,LSPA(*),NAST(*),JPOSA,INPT(*),
     $     NSYM,LDISB(NSYM,ITGB,*),IV,IS2,NA,IACON1(*),LSPB(*),
     $     ORMAS_GET_GROUP,IBBOX1(*),ISPA_B,IBELAC(*),
     $     NPTST,III,NCI,NTMPSZ
      DOUBLE PRECISION E0B0,EFCK(*),CI(NCI,*),TMP4(NTMPSZ,NPTST),
     $     TMP3(NTMPSZ,NPTST),EPT0(*),T,SI1(*),SI2(*),COEFF(*)

         IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1
         IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

! LOOP OVER SINGLE DEXCITATIONS OUT OF ACTIVE

         DO 2910 IEL=IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1)   !1,NB+1
            IA = IBCON1(IEL) + NVAL
            IS1 = IOB(IA)
            IF (IS1.NE.ISYL) GOTO 2910

! DETERMINE 0TH ORDER BETA, POS/PERM

            CALL STR0VA(IBCON1,IBCON2,NB+1,IEL,NVAL,NVAL,IPER)
            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))
            KSYM = ISYMB(JPOSB2+NBST(IGB2))
            ITP0 = LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGB2,IGA)+
     $           LSPB(JPOSB2+NBST(IGB2))
C$$$            COEFF = CI(ITP0)*IPER

            DO III=1,NPTST
               COEFF(III) = CI(ITP0,III)*IPER
            ENDDO

! LOOP OVER BETA VALENCE

          DO 2920 IV=1,NVAL
             IS2 = IOB(IV)
             IF (IS1.NE.IS2) GOTO 2920
C$$$             TMP4(IV) = E0B0 + EFCK(IV)

! MATRIX ELEMENT

       CALL ME0VA1B(IV,IA,IBCON2,NB,IACON1,NA,NVAL,INPT,SI1,SI2,T)
C$$$       TMP3(IV) = TMP3(IV) + T*COEFF

             DO III =1,NPTST
                TMP3(IV,III) = TMP3(IV,III) + T*COEFF(III)
                TMP4(IV,III) = E0B0 + EFCK(IV) + EPT0(III)
             ENDDO

 2920     CONTINUE

! END OF LOOP OVER BETA VALENCE

 2910    CONTINUE

! END OF PURE SINGLE BETA DEXCITATIONS OUT OF ACTIVE

      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

      RETURN
      END SUBROUTINE EVA_DETACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVA_DETACH_B_SHIFT_B_OR_A
      SUBROUTINE EVA_DETACH_B_SHIFT_B_OR_A(NB,IBCON1,NVAL,IMUL,NSYM,
     $     IOB,IBCON2,X,LBNDET,INPT,IACON2,
     $     ISYMB,NBST,LSPA,NAST,LDISB,IGA,IACON1,NA,
     $     EFCK,TMP4,TMP3,SI2,CI,ITGB,LSPB,LANDET,JPOSA,
     $     ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,IBELAC,IAELAC,IBELAC2,
     $     IBBOX1,IABOX1,E0B0,ISYL,PART2,NX,EPT0,NPTST,NCI,
     $     NTMPSZ,COEFF)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      LOGICAL PART2
      INTEGER NB,IBCON1(*),NVAL,NSYM,IMUL(NSYM,*),
     $     IEL,IA,JA,IS1,IOB(*),IPER,IGB2,ORMAS_GET_GROUP,
     $     X(*),NX,LBNDET(NSPACE,*),IEL2,IA2,IS2,IBCON2(*),JPOSB2,
     $     ORMAS_GET_STRPOS,IP1,IST,IEN,KKJ,JJ,IS3,IPT,ISYL,MA,MI,IA3A2,
     $     IA3A,INPT(*),IACON2(*),ISWAP2,IPER2,IPERT,IGA2,
     $     KSYM,ISYMB(*),NBST(*),ITP0,LSPA(*),NAST(*),ITGB,
     $     JPOSA,LDISB(NSYM,ITGB,*),IGA,JPOSA2,IACON1(*),NA,
     $     IS4,IAV,IA2V,INT1,INT,INT2,IP2,IV,JJA,LSPB(*),
     $     LANDET(NSPACE,*),ISPA_B,ISPA_B2,ISPA_CRIT,ISPA_A,I,
     $     IAELAC(*),IBELAC(*),IBELAC2(*),IBBOX1(*),IABOX1(*),IB2_INT,
     $     IB2_FIN,NPTST,III,NCI,NTMPSZ
      DOUBLE PRECISION EFCK(*),E0B0,TMP4(NTMPSZ,*),TMP3(NTMPSZ,*),T,
     $     SI2(*),
     $     COEFF(*),CI(NCI,*),EPT0(*)

C$$$      LOGICAL GENSPA_A,GENSPA,GENSPA_B
C$$$      DOUBLE PRECISION SI1(*)
C$$$         IF(.NOT.GENSPA_A)GOTO 2905
C$$$
C$$$         DO 2910 IEL=1,NB+1
C$$$            IA = IBCON1(IEL) + NVAL
C$$$            IS1 = IOB(IA)
C$$$            IF (IS1.NE.ISYL) GOTO 2910
C$$$
C$$$! DETERMINE 0TH ORDER BETA, POS/PERM
C$$$
C$$$            CALL STR0VA(IBCON1,IBCON2,NB+1,IEL,NVAL,NVAL,IPER)
C$$$            CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$            IF(.NOT.GENSPA)CYCLE                                        
C$$$            IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$            IF(LGCOM(IGB2,IGA).NE.1) CYCLE
C$$$            JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $           IDIM,X,NX,LBST,LBNDET(1,IGB2))
C$$$            KSYM = ISYMB(JPOSB2+NBST(IGB2))
C$$$            ITP0 = LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGB2,IGA)+
C$$$     $           LSPB(JPOSB2+NBST(IGB2))
C$$$            COEFF = CI(ITP0)*IPER
C$$$
C$$$! LOOP OVER BETA VALENCE
C$$$
C$$$          DO 2920 IV=1,NVAL
C$$$             IS2 = IOB(IV)
C$$$             IF (IS1.NE.IS2) GOTO 2920
C$$$             TMP4(IV) = E0B0 + EFCK(IV)
C$$$
C$$$! MATRIX ELEMENT
C$$$
C$$$       CALL ME0VA1B(IV,IA,IBCON2,NB,IACON1,NA,NVAL,INPT,SI1,SI2,T)
C$$$       TMP3(IV) = TMP3(IV) + T*COEFF
C$$$
C$$$ 2920     CONTINUE
C$$$
C$$$! END OF LOOP OVER BETA VALENCE
C$$$
C$$$ 2910    CONTINUE
C$$$
C$$$! END OF PURE SINGLE BETA DEXCITATIONS OUT OF ACTIVE
C$$$
C$$$ 2905    CONTINUE 
C$$$
C$$$! NOW FOR DOUBLE DEXCITATIONS
C$$$!  DOUBLE DEXCITATIONS MUST !!!!! INCLUDE THE SINGLES ABOVE !!!!!
C$$$!  START WITH THIS TYPE FIRST, IE BETA IA(?) -> IV
C$$$
C$$$      DO 2930 IEL=1,NB+1
C$$$         IA = IBCON1(IEL)+NVAL
C$$$         JA = IA - NVAL
C$$$         IS1 = IOB(IA)
C$$$         CALL STR0VA(IBCON1,IBCON2,NB+1,IEL,NVAL,NVAL,IPER)
C$$$
C$$$         CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA_B)
C$$$         IF(.NOT.GENSPA_B)GOTO 2931
C$$$         IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $        IDIM,X,NX,LBST,LBNDET(1,IGB2))
C$$$ 2931    CONTINUE
C$$$
C$$$         IF(.NOT.GENSPA_A) GOTO 2935 
C$$$!  2ND EXCITATION: BETA ACT (IA2 > IA) -> ACT (JJA)
C$$$!  TOTAL = BETA ( IA < IA2 -> IV,JJA)
C$$$
C$$$         DO 2940 IEL2=IEL,NB
C$$$            IA2 = IBCON2(IEL2)+NVAL
C$$$            IS2 = IOB(IA2)
C$$$            IP1 = IMUL(IS1,IS2)
C$$$
C$$$         IST = 1
C$$$         IEN = IBCON2(1)-1
C$$$         DO 2950 KKJ=1,NB+1
C$$$            DO 2952 JJ=IST,IEN
C$$$               IF (JJ.EQ.JA) GOTO 2952
C$$$               JJA = JJ + NVAL
C$$$               IS3 = IOB(JJA)
C$$$               IPT = IMUL(IS3,IP1)
C$$$               IF (IPT.NE.ISYL) GOTO 2952
C$$$
C$$$               MA = MAX(IA2,JJA)
C$$$               MI = MIN(IA2,JJA)
C$$$               IA3A2 = INPT(MA) + MI
C$$$               MA = MAX(IA,JJA)
C$$$               MI = MIN(IA,JJA)
C$$$               IA3A = INPT(MA) + MI
C$$$
C$$$! DETERMINE NEW 0TH ORDER BETA, POS/PERM AND MATRIX ELEMENT
C$$$
C$$$          CALL RET1DET(IBCON2,IACON2,NB,IEL2,JJ,0,KKJ,ISWAP2)
C$$$          IPER2 = (-1)**ISWAP2
C$$$          IPERT = IPER*IPER2
C$$$
C$$$          CALL GETPTBOX(IABOX2,IACON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IABOX2)
C$$$          IF(LGCOM(IGA2,IGA).NE.1) CYCLE
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LBNDET(1,IGA2))
C$$$          KSYM = ISYMB(JPOSA2+NBST(IGA2))
C$$$          ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGA2,IGA) +
C$$$     $         LSPB(JPOSA2+NBST(IGA2))
C$$$          COEFF = CI(ITP0)*IPERT
C$$$
C$$$! LOOP OVER BETA VALENCE
C$$$
C$$$          DO 2960 IV=1,NVAL
C$$$             IS4 = IOB(IV)
C$$$             IP2 = IMUL(IS4,IS3)
C$$$             IF (IP1.NE.IP2) GOTO 2960
C$$$             TMP4(IV) = E0B0 + EFCK(IV)
C$$$
C$$$! MATRIX ELEMENT
C$$$
C$$$         IAV = INPT(IA) + IV
C$$$         IA2V = INPT(IA2) + IV
C$$$         INT1 = INPT(IA3A2) + IAV
C$$$         MA = MAX(IA3A,IA2V)
C$$$         MI = MIN(IA3A,IA2V)
C$$$         INT2 = INPT(MA) + MI
C$$$         T = (SI2(INT1) - SI2(INT2))*COEFF
C$$$         TMP3(IV) = TMP3(IV) + T
C$$$
C$$$ 2960     CONTINUE
C$$$
C$$$! END OF LOOP OVER BETA VALENCE
C$$$
C$$$ 2952       CONTINUE
C$$$            IST = IBCON2(KKJ)+1
C$$$            IEN = IBCON2(KKJ+1)-1
C$$$            IF (KKJ.EQ.NB) IEN=NACT
C$$$ 2950    CONTINUE
C$$$
C$$$ 2940    CONTINUE
C$$$
C$$$! END OF 2ND DEXCITATIONS
C$$$
C$$$ 2935    CONTINUE 
C$$$
C$$$         IF(.NOT.GENSPA_B) GOTO 2930
C$$$!  NOW FOR 2ND EXCITATION: ALPHA ACT (IA2) -> ACT (JJA)
C$$$!  TOTAL = ( IA(B),IA2(A) -> IV(B),JJA(A) )
C$$$
C$$$      DO 2970 IEL2=1,NA
C$$$         IA2 = IACON1(IEL2)+NVAL
C$$$         IS2 = IOB(IA2)
C$$$         IP1 = IMUL(IS1,IS2)
C$$$
C$$$         IST = 1
C$$$         IEN = IACON1(1)-1
C$$$         DO 2980 KKJ=1,NA+1
C$$$            DO 2982 JJ=IST,IEN
C$$$               JJA = JJ + NVAL
C$$$               IS3 = IOB(JJA)
C$$$               IPT = IMUL(IP1,IS3)
C$$$               IF (IPT.NE.ISYL) GOTO 2982
C$$$
C$$$          MA = MAX(IA2,JJA)
C$$$          MI = MIN(IA2,JJA)
C$$$          IA3A2 = INPT(MA) + MI
C$$$
C$$$! DETERMINE NEW 0TH ORDER ALPHA, POS/PERM AND MATRIX ELEMENT
C$$$
C$$$          CALL RET1DET(IACON1,IACON2,NA,IEL2,JJ,0,KKJ,ISWAP2)
C$$$          IPER2 = (-1)**ISWAP2
C$$$          IPERT = IPER*IPER2
C$$$
C$$$          CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LANDET(1,IGA2))
C$$$          KSYM = ISYMB(JPOSB2+NBST(IGB2))
C$$$          ITP0 = LSPA(NAST(IGA2)+JPOSA2) +LDISB(KSYM,IGB2,IGA2) +
C$$$     $         LSPB(JPOSB2+NBST(IGB2))
C$$$          COEFF = CI(ITP0)*IPERT
C$$$
C$$$
C$$$! LOOP OVER BETA VALENCE
C$$$
C$$$          DO 2990 IV=1,NVAL
C$$$             IS4 = IOB(IV)
C$$$             IP2 = IMUL(IS4,IS3)
C$$$             IF (IP1.NE.IP2) GOTO 2990
C$$$             TMP4(IV) = E0B0 + EFCK(IV)
C$$$
C$$$! MATRIX ELEMENT
C$$$
C$$$         IAV = INPT(IA) + IV
C$$$         MA = MAX(IA3A2,IAV)
C$$$         MI = MIN(IA3A2,IAV)
C$$$         INT = INPT(MA) + MI
C$$$         T = SI2(INT)*COEFF
C$$$         TMP3(IV) = TMP3(IV) + T
C$$$
C$$$ 2990     CONTINUE
C$$$
C$$$! END OF LOOP OVER BETA VALENCE
C$$$
C$$$ 2982       CONTINUE
C$$$            IST = IACON1(KKJ)+1
C$$$            IEN = IACON1(KKJ+1)-1
C$$$            IF (KKJ.EQ.NA) IEN=NACT
C$$$ 2980    CONTINUE
C$$$
C$$$ 2970 CONTINUE
C$$$
C$$$! END OF 2ND EXCITATION: ALPHA ACT (IA2) -> ACT (JJA)
C$$$
C$$$ 2930 CONTINUE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1
      IBELAC2(1)=0
      DO I = 1,NSPACE                                                
         IBELAC2(I+1)=IBELAC2(I)+IBBOX1(I)
      ENDDO                                                          

! NOW FOR DOUBLE DEXCITATIONS
!  DOUBLE DEXCITATIONS MUST !!!!! INCLUDE THE SINGLES ABOVE !!!!!
!  START WITH THIS TYPE FIRST, IE BETA IA(?) -> IV

      DO 2930 IEL=IBELAC(ISPA_B)+1,IBELAC(ISPA_B +1) !1,NB+1
         IA = IBCON1(IEL)+NVAL
         JA = IA - NVAL
         IS1 = IOB(IA)
         CALL STR0VA(IBCON1,IBCON2,NB+1,IEL,NVAL,NVAL,IPER)
         IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $        IDIM,X,NX,LBST,LBNDET(1,IGB2))

      IF(PART2) GOTO 1000        !!!GOTO PART TWO FOR ALPHA

!  2ND EXCITATION: BETA ACT (IA2 > IA) -> ACT (JJA)
!  TOTAL = BETA ( IA < IA2 -> IV,JJA)


         IB2_INT = IBELAC2(ISPA_B2 ) +1
         IB2_FIN = IBELAC2(ISPA_B2 +1)

         IF(ISPA_B.EQ.ISPA_B2) THEN
            IB2_INT = IEL
            IB2_FIN = IBELAC2(ISPA_B +1)
         ENDIF

         DO 2940 IEL2=IB2_INT,IB2_FIN
            IA2 = IBCON2(IEL2)+NVAL
            IS2 = IOB(IA2)
            IP1 = IMUL(IS1,IS2)

         IST = MSTA(ISPA_CRIT)
         IEN = IBCON2(IBELAC2(ISPA_CRIT)+1) -1
         IF(IBBOX1(ISPA_CRIT).EQ.0) IEN=MSTA(ISPA_CRIT +1) -1
         IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) +1
         IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) -1

         DO 2950 KKJ=IBELAC2(ISPA_CRIT)+1,IBELAC2(ISPA_CRIT +1) +1 !1,NB+1
            DO 2952 JJ=IST,IEN
               IF (JJ.EQ.JA) GOTO 2952
               JJA = JJ + NVAL
               IS3 = IOB(JJA)
               IPT = IMUL(IS3,IP1)
               IF (IPT.NE.ISYL) GOTO 2952

               IF(IA.GT.IA2)THEN
                  MA = MAX(IA,JJA)
                  MI = MIN(IA,JJA)
                  IA3A2 = INPT(MA) + MI
                  MA = MAX(IA2,JJA)
                  MI = MIN(IA2,JJA)
                  IA3A = INPT(MA) + MI
               ELSE
                  MA = MAX(IA2,JJA)
                  MI = MIN(IA2,JJA)
                  IA3A2 = INPT(MA) + MI
                  MA = MAX(IA,JJA)
                  MI = MIN(IA,JJA)
                  IA3A = INPT(MA) + MI
               ENDIF
! DETERMINE NEW 0TH ORDER BETA, POS/PERM AND MATRIX ELEMENT

          CALL RET1DET(IBCON2,IACON2,NB,IEL2,JJ,0,KKJ,ISWAP2)
          IPER2 = (-1)**ISWAP2
          IPERT = IPER*IPER2

          IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $         IDIM,X,NX,LBST,LBNDET(1,IGA2))
          KSYM = ISYMB(JPOSA2+NBST(IGA2))
          ITP0 = LSPA(NAST(IGA)+JPOSA) + LDISB(KSYM,IGA2,IGA) +
     $         LSPB(JPOSA2+NBST(IGA2))
C$$$          COEFF = CI(ITP0)*IPERT
          DO III=1,NPTST
             COEFF(III) = CI(ITP0,III)*IPERT
          ENDDO

! LOOP OVER BETA VALENCE

          DO 2960 IV=1,NVAL
             IS4 = IOB(IV)
             IP2 = IMUL(IS4,IS3)
             IF (IP1.NE.IP2) GOTO 2960
C$$$             TMP4(IV) = E0B0 + EFCK(IV)

! MATRIX ELEMENT

         IF(IA.GT.IA2)THEN
            IAV = INPT(IA2) + IV
            IA2V = INPT(IA) + IV
            INT1 = INPT(IA3A2) + IAV
            MA = MAX(IA3A,IA2V)
            MI = MIN(IA3A,IA2V)
            INT2 = INPT(MA) + MI
C$$$            T = (SI2(INT1) - SI2(INT2))*COEFF
C$$$            T = (SI2(INT2) - SI2(INT1))*COEFF
C$$$            TMP3(IV) = TMP3(IV) + T

            T = (SI2(INT2) - SI2(INT1))
         DO III=1,NPTST
            TMP3(IV,III) = TMP3(IV,III) + T*COEFF(III)
            TMP4(IV,III) = E0B0 + EFCK(IV) + EPT0(III)
         ENDDO

         ELSE
            IAV = INPT(IA) + IV
            IA2V = INPT(IA2) + IV
            INT1 = INPT(IA3A2) + IAV
            MA = MAX(IA3A,IA2V)
            MI = MIN(IA3A,IA2V)
            INT2 = INPT(MA) + MI
C$$$            T = (SI2(INT1) - SI2(INT2))*COEFF
C$$$            TMP3(IV) = TMP3(IV) + T

            T = (SI2(INT1) - SI2(INT2))
         DO III=1,NPTST
            TMP3(IV,III) = TMP3(IV,III) + T*COEFF(III)
            TMP4(IV,III) = E0B0 + EFCK(IV) + EPT0(III)
         ENDDO

         ENDIF

 2960     CONTINUE

! END OF LOOP OVER BETA VALENCE

 2952       CONTINUE

            IST = IBCON2(KKJ) +1
            IEN = IBCON2(KKJ +1) -1
            IF(KKJ.EQ.IBELAC2(ISPA_CRIT +1))IEN = MSTA(ISPA_CRIT +1) -1

 2950    CONTINUE

         IBBOX1(ISPA_CRIT) = IBBOX1(ISPA_CRIT) -1
         IBBOX1(ISPA_B2) = IBBOX1(ISPA_B2) +1    !TEST
 2940    CONTINUE

! END OF 2ND DEXCITATIONS


         GOTO 2930

!  NOW FOR 2ND EXCITATION: ALPHA ACT (IA2) -> ACT (JJA)
!  TOTAL = ( IA(B),IA2(A) -> IV(B),JJA(A) )

 1000    CONTINUE               !PART 2

      DO 2970 IEL2=IAELAC(ISPA_A) +1, IAELAC(ISPA_A +1)  !1,NA
         IA2 = IACON1(IEL2)+NVAL
         IS2 = IOB(IA2)
         IP1 = IMUL(IS1,IS2)

         IST = MSTA(ISPA_CRIT)
         IEN = IACON1(IAELAC(ISPA_CRIT)+1) -1
         IF(IABOX1(ISPA_CRIT).EQ.0) IEN=MSTA(ISPA_CRIT +1) -1
         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) +1
         IABOX1(ISPA_A) = IABOX1(ISPA_A) -1   !TEST

         DO 2980 KKJ=IAELAC(ISPA_CRIT) +1, IAELAC(ISPA_CRIT +1) +1 !1,NA+1
            DO 2982 JJ=IST,IEN
               JJA = JJ + NVAL
               IS3 = IOB(JJA)
               IPT = IMUL(IP1,IS3)
               IF (IPT.NE.ISYL) GOTO 2982

          MA = MAX(IA2,JJA)
          MI = MIN(IA2,JJA)
          IA3A2 = INPT(MA) + MI

! DETERMINE NEW 0TH ORDER ALPHA, POS/PERM AND MATRIX ELEMENT

          CALL RET1DET(IACON1,IACON2,NA,IEL2,JJ,0,KKJ,ISWAP2)
          IPER2 = (-1)**ISWAP2
          IPERT = IPER*IPER2

          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $         IDIM,X,NX,LBST,LANDET(1,IGA2))
          KSYM = ISYMB(JPOSB2+NBST(IGB2))
          ITP0 = LSPA(NAST(IGA2)+JPOSA2) +LDISB(KSYM,IGB2,IGA2) +
     $         LSPB(JPOSB2+NBST(IGB2))
C$$$          COEFF = CI(ITP0)*IPERT
          DO III=1,NPTST
             COEFF(III) = CI(ITP0,III)*IPERT
          ENDDO

! LOOP OVER BETA VALENCE

          DO 2990 IV=1,NVAL
             IS4 = IOB(IV)
             IP2 = IMUL(IS4,IS3)
             IF (IP1.NE.IP2) GOTO 2990
C$$$             TMP4(IV) = E0B0 + EFCK(IV)

! MATRIX ELEMENT

         IAV = INPT(IA) + IV
         MA = MAX(IA3A2,IAV)
         MI = MIN(IA3A2,IAV)
         INT = INPT(MA) + MI
C$$$         T = SI2(INT)*COEFF
C$$$         TMP3(IV) = TMP3(IV) + T

         T = SI2(INT)
         DO III=1,NPTST
            TMP3(IV,III) = TMP3(IV,III) + T*COEFF(III)
            TMP4(IV,III) = E0B0 + EFCK(IV) + EPT0(III)
         ENDDO

 2990     CONTINUE

! END OF LOOP OVER BETA VALENCE

 2982       CONTINUE

            IST = IACON1(KKJ) +1
            IEN = IACON1(KKJ +1) -1
            IF(KKJ.EQ.IAELAC(ISPA_CRIT +1))IEN = MSTA(ISPA_CRIT +1) -1

 2980    CONTINUE

         IABOX1(ISPA_CRIT) = IABOX1(ISPA_CRIT) -1
         IABOX1(ISPA_A) = IABOX1(ISPA_A) +1

 2970 CONTINUE

! END OF 2ND EXCITATION: ALPHA ACT (IA2) -> ACT (JJA)

 2930 CONTINUE

         IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

! END OF SINGLE DEXCITES IA -> IV

      RETURN
      END SUBROUTINE EVA_DETACH_B_SHIFT_B_OR_A
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAA_TERM_2
      SUBROUTINE EVVAA_TERM_2(E0AD1,EFCK,CI,TMP4,TMP3,EVVAA,NB,IBCON1,
     $     ISYV,IMUL,NSYM,IOB,NVAL,ISA1,ITAB,NA,IACON1,IACON2,
     $     X,NX,LANDET,IBCON2,ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,
     $     LDISB,INPT,SI2,LSPB,IMIMAP,IMXMAP,IBBOX1,
     $     ITBOX,IAELAC,IBELAC,IABOX1,ISPA_0,
     $     LGCOM_EVVAA_2,NBST_EVVAA_2,ITGB_EVVAA_2,IPTAMI,IPTAMA,
     $     IPTBMI,IPTBMA,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER II,NB,IBCON1(*),IJB,ISYB,ISYV,NSYM,IMUL(NSYM,*),IOB(*),
     $     NVAL,ISYT,ISA1,ITAB(*),ITAL,NA,IACON1(*),
     $     IACON2(*),ORMAS_GET_GROUP,
     $     X(*),NX,LANDET(NSPACE,*),
     $     IBCON2(*),ITGB,LBNDET(NSPACE,*),
     $     ISYMB(*),NBST(*),LSPA(*),NAST(*),LSPB(*),
     $     LDISB(NSYM,ITGB,*),INPT(*),ICOUNT,
     $     IMIMAP(*),IMXMAP(*),
     $     IBBOX1(*),ITBOX(*),IAELAC(*),IBELAC(*),
     $     IEXTYP,I,ISPA_A,ISPA_B,ISPA_CRIT,ISPA_0(*),NTMPSZ,NCI,
     $     NPTST,JJ,KK
      DOUBLE PRECISION HPT(NPTST,*)
      DOUBLE PRECISION E0B0,E0AD1,EFCK(*),COEFF,CI(NCI,*),
     $     TMP4(NTMPSZ,*),TMP3(NTMPSZ,*),EVVAA,SI2(*),HINT(NPTST,*),
     $     EPT0(*)

      INTEGER ITGB_EVVAA_2,LGCOM_EVVAA_2(ITGB_EVVAA_2,*),NBST_EVVAA_2(*)
     $    ,IPTAMI(*),IPTAMA(*),IPTBMI(*),IPTBMA(*),
     $     ISCBOX(*),IEND,IGB_EVVAA_2,IGA_EVVAA_2

!TEMPORARY
      INTEGER IABOX1(*)

      IGA_EVVAA_2 = ORMAS_GET_GROUP(NSPACE,NA+1,IPTAMA,IPTAMI,IABOX1)

      CALL RESETCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
      DO IGB_EVVAA_2 = 1,ITGB_EVVAA_2
         IEXTYP = LGCOM_EVVAA_2(IGB_EVVAA_2,IGA_EVVAA_2)

         IF(IEXTYP.EQ.4)GOTO 123
         IF(IEXTYP.GT.6.OR.IEXTYP.LT.(1))GOTO 123

         IAELAC(1) = 0          !          
         IBELAC(1) = 0          ! 
         DO I = 1,NSPACE        ! 
            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
         ENDDO                  !

         DO IJB = 1,NBST_EVVAA_2(IGB_EVVAA_2)

C$$$! ----------------------------------------------
C$$$! NOW TO LOOP OVER 1ST ORDER BETAS IV2 -> IA2
C$$$! ----------------------------------------------
C$$$         DO II=1,NB+1
C$$$            IBCON1(II) = II
C$$$         ENDDO
C$$$         DO 3500 IJB=1,N1B
C$$$!            WRITE(6,*)IJB,N1B
C$$$! LOOP OVER 1 UP BETAS
C$$$C$$$!EVVAA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C$$$C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$C$$$!X    2  0  0  ...  0    :6
C$$$C$$$!X    1  1  0  ...  0    :6
C$$$C$$$!X    0  0  0  ...  0    :1
C$$$C$$$!X    1  0  0  ...  0    :3


C$$$         CALL GETBOX(IBBOX1,IBCON1,NB+1,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !
C$$$         IF(IEXTYP.EQ.4)GOTO 3502
C$$$         IF(IEXTYP.GT.6.OR.IEXTYP.LT.(1))GOTO 3502

C$$$C$$$         IF(IEXTYP.NE.3)GOTO 3502
C$$$C$$$         IF(IEXTYP.NE.6)GOTO 3502
C$$$C$$$         IF(IEXTYP.NE.1)GOTO 3502


C$$$         IAELAC(1) = 0          !          
C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !


C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',7I3,' | ',7I3)")IACON1(1:NA+1),IBCON1(1:NB+1)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA+1,NB+1,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,ITAB(1),
C$$$     $     LSPA,LSPB,LDISB,2,1)

            ICOUNT = 0
            ISYB = ISYV
            E0B0 = E0AD1
            DO II=1,NB+1
               E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
            ENDDO
            ISYT = IMUL(ISYB,ISA1)
            ITAL = ITAB(ISYT)



! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
               
         DO ISPA_A = 1,NSPACE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE
            IF(IMIMAP(ISPA_A).LT.1)CYCLE
            IMIMAP(ISPA_A) = IMIMAP(ISPA_A) -1

            DO ISPA_B = 1,NSPACE
               IF(IBBOX1(ISPA_B).EQ.0)CYCLE
               IF(IMIMAP(ISPA_B).LT.1)CYCLE
               
         CALL EVVAA_DETACH_A_DETACH_B(NA,IACON1,NVAL,IOB,IACON2,
     $              X,NX,LANDET,NB,IBCON1,IMUL,NSYM,ITAL,IBCON2,
     $              ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $              INPT,E0B0,EFCK,TMP4,TMP3,SI2,CI,ISPA_A,ISPA_B,
     $              IAELAC,IBELAC,IABOX1,IBBOX1,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ENDDO               !!!ISPA_B

            IMIMAP(ISPA_A) = IMIMAP(ISPA_A) +1
         ENDDO                  !!!ISPA_A

      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

! START IEXTYP  3:     1  0  0 ... 0      
      IF(IEXTYP.EQ.3)THEN

         DO ISPA_CRIT = 1,NSPACE
            ISPA_0(ISPA_CRIT) = ISPA_CRIT
            IF(IMXMAP(ISPA_CRIT).EQ.1)EXIT
         ENDDO
         DO I = ISPA_CRIT +1,NSPACE
            ISPA_0(I-1) = I
         ENDDO

         IMIMAP(ISPA_CRIT) = IMIMAP(ISPA_CRIT) -1
         IF(IABOX1(ISPA_CRIT).EQ.0)GOTO 3000
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).LT.1)CYCLE
            IF(IBBOX1(ISPA_B).EQ.0)CYCLE

            CALL EVVAA_DETACH_A_DETACH_B(NA,IACON1,NVAL,IOB,IACON2,
     $           X,NX,LANDET,NB,IBCON1,IMUL,NSYM,ITAL,IBCON2,
     $           ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $           INPT,E0B0,EFCK,TMP4,TMP3,SI2,CI,ISPA_CRIT,ISPA_B,
     $           IAELAC,IBELAC,IABOX1,IBBOX1,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
            
         ENDDO                  !!!ISPA_B

 3000    CONTINUE 

         IF(IBBOX1(ISPA_CRIT).EQ.0)GOTO 3100
         DO I = 1,NSPACE-1
            ISPA_A = ISPA_0(I)
            IF(IMIMAP(ISPA_A).LT.1)CYCLE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE

            CALL EVVAA_DETACH_A_DETACH_B(NA,IACON1,NVAL,IOB,IACON2,
     $           X,NX,LANDET,NB,IBCON1,IMUL,NSYM,ITAL,IBCON2,
     $           ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $           INPT,E0B0,EFCK,TMP4,TMP3,SI2,CI,ISPA_A,ISPA_CRIT,
     $           IAELAC,IBELAC,IABOX1,IBBOX1,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)

         ENDDO                  !!!I
 3100    CONTINUE 
         IMIMAP(ISPA_CRIT) = IMIMAP(ISPA_CRIT) +1

         GOTO 86
      ENDIF                     !!!(IEXTYP.EQ.3)
! END IEXTYP  3

! START IEXTYP 6:     2  0  0 ... 0      
!                     1  1  0 ... 0      
      IF(IEXTYP.EQ.6)THEN

         DO ISPA_A = 1,NSPACE
            IF(IMXMAP(ISPA_A).LT.1)CYCLE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE

            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
            DO ISPA_B = 1,NSPACE
               IF(IMXMAP(ISPA_B).LT.1)CYCLE
               IF(IBBOX1(ISPA_B).EQ.0)CYCLE


               CALL EVVAA_DETACH_A_DETACH_B(NA,IACON1,NVAL,IOB,IACON2,
     $              X,NX,LANDET,NB,IBCON1,IMUL,NSYM,ITAL,IBCON2,
     $              ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,
     $              LDISB,LSPB,INPT,E0B0,EFCK,TMP4,TMP3,SI2,CI,ISPA_A,
     $              ISPA_B,IAELAC,IBELAC,IABOX1,IBBOX1,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)

               
            ENDDO               !!!ISPA_B
            
            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
            
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ.6)
! END IEXTYP  6


C$$$! LOOP OVER ALPHA EXCITE (IA1 -> IV)

C$$$            DO 3510 IEL1=1,NA+1
C$$$               IA1 = IACON1(IEL1) + NVAL
C$$$               IS1 = IOB(IA1)
C$$$            CALL STR0VA(IACON1,IACON2,NA+1,IEL1,NVAL,NVAL,IPER)

C$$$          CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LANDET(1,IGA2))

C$$$! LOOP OVER BETA EXCITE (IA2 -> IV2)

C$$$            DO 3520 IEL2=1,NB+1
C$$$               IA2 = IBCON1(IEL2) + NVAL
C$$$               IS2 = IOB(IA2)
C$$$               IP1 = IMUL(IS1,IS2)
C$$$               IF (IP1.NE.ITAL) GOTO 3520
C$$$            CALL STR0VA(IBCON1,IBCON2,NB+1,IEL2,NVAL,NVAL,IPER2)
C$$$            IPERT = IPER*IPER2

C$$$          CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$          IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$          JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
C$$$          KSYM = ISYMB(JPOSB2+NBST(IGB2))
C$$$          ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
C$$$     $         LSPB(JPOSB2+NBST(IGB2))
C$$$          COEFF = CI(ITP0)*IPERT

C$$$! NOW TO LOOP OVER VALENCE ORBITALS

C$$$            IA1V1 = INPT(IA1)
C$$$            IA2VT = INPT(IA2)
C$$$            ICOUNT = 0
C$$$            DO 3530 IV1=1,NVAL
C$$$               IS3 = IOB(IV1)
C$$$               IPT = IMUL(IS3,IP1)
C$$$               E0BV1 = E0B0 + EFCK(IV1)
C$$$               IA1V1 = IA1V1 + 1
C$$$               IA2V2 = IA2VT

C$$$            DO 3540 IV2=1,NVAL
C$$$               ICOUNT = ICOUNT + 1
C$$$               IA2V2 = IA2V2 + 1
C$$$               IF (IOB(IV2).NE.IPT) GOTO 3540
C$$$               TMP4(ICOUNT) = E0BV1 + EFCK(IV2)

C$$$           MA = MAX(IA1V1,IA2V2)
C$$$           MI = MIN(IA1V1,IA2V2)
C$$$           INT1 = (MA*(MA-1))/2 + MI
C$$$           T1 = SI2(INT1)*COEFF
C$$$           TMP3(ICOUNT) = TMP3(ICOUNT) + T1

C$$$ 3540       CONTINUE

C$$$ 3530       CONTINUE

C$$$!END OF LOOP OVER VALENCE ORBITALS

C$$$ 3520       CONTINUE

C$$$! END OF BETA EXCITE (IA2 -> IV2)

C$$$ 3510       CONTINUE

C$$$! END OF ALPHA EXCITE (IA1 -> IV)

 86   CONTINUE 

C$$$         DO II=1,ICOUNT
C$$$            EVVAA = EVVAA + (TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO

         DO JJ=1,NPTST                                                                    
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
         HINT(JJ,KK)=HINT(JJ,KK)+(TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO II=1,ICOUNT
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + HINT(JJ,KK)
               EVVAA = EVVAA + HINT(JJ,KK)
            ENDDO
         ENDDO

         ICOUNT = 0

C$$$ 3502    CALL ADVANC(IBCON1,NB+1,NACT)
C$$$ 3500    CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB+1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB+1,MSTA,IBCON1)
      ENDDO                     !!!IGB
         
         RETURN
         END SUBROUTINE EVVAA_TERM_2
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVVAA_DETACH_A_DETACH_B
      SUBROUTINE EVVAA_DETACH_A_DETACH_B(NA,IACON1,NVAL,IOB,IACON2,
     $     X,NX,LANDET,NB,IBCON1,IMUL,NSYM,ITAL,IBCON2,
     $     ITGB,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,INPT,E0B0,
     $     EFCK,TMP4,TMP3,SI2,CI,ISPA_A,ISPA_B,IAELAC,IBELAC,IABOX1,
     $     IBBOX1,ICOUNT,
     $     NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
      INTEGER IEL1,NA,IA1,IACON1(*),NVAL,IS1,IOB(*),IACON2(*),IPER,
     $     IGA2,ORMAS_GET_GROUP,JPOSA2,ORMAS_GET_STRPOS,
     $     X(*),NX,LANDET(NSPACE,*),IEL2,NB,IA2,IBCON1(*),IS2,IP1,
     $     NSYM,IMUL(NSYM,*),ITAL,IBCON2(*),IGB2,
     $     ITGB,JPOSB2,LBNDET(NSPACE,*),KSYM,ISYMB(*),
     $     NBST(*),ITP0,LSPA(*),NAST(*),LDISB(NSYM,ITGB,*),LSPB(*),
     $     IPERT,IPER2,IA1V1,INPT(*),IA2VT,ICOUNT,IV1,IS3,IPT,
     $     IA2V2,IV2,MA,MI,INT1,ISPA_A,ISPA_B,IAELAC(*),IBELAC(*),
     $     IABOX1(*),IBBOX1(*),NTMPSZ,NCI,NPTST,III

      DOUBLE PRECISION E0B0,EFCK(*),E0BV1,TMP4(NTMPSZ,*),TMP3(NTMPSZ,*),
     $     T1,SI2(*),COEFF(*),CI(NCI,*),EPT0(*)

      IABOX1(ISPA_A) = IABOX1(ISPA_A) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
! LOOP OVER ALPHA EXCITE (IA1 -> IV)

      DO 3510 IEL1=IAELAC(ISPA_A) +1,IAELAC(ISPA_A +1) !1,NA+1
         IA1 = IACON1(IEL1) + NVAL
         IS1 = IOB(IA1)
         CALL STR0VA(IACON1,IACON2,NA+1,IEL1,NVAL,NVAL,IPER)
         
C$$$         CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$         IF(.NOT.GENSPA)CYCLE
C$$$         IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $        IDIM,X,NX,LBST,LANDET(1,IGA2))
          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $        IDIM,X,NX,LBST,LANDET(1,IGA2))


! LOOP OVER BETA EXCITE (IA2 -> IV2)

            DO 3520 IEL2=IBELAC(ISPA_B) +1,IBELAC(ISPA_B +1)!1,NB+1
               IA2 = IBCON1(IEL2) + NVAL
               IS2 = IOB(IA2)
               IP1 = IMUL(IS1,IS2)
               IF (IP1.NE.ITAL) GOTO 3520
            CALL STR0VA(IBCON1,IBCON2,NB+1,IEL2,NVAL,NVAL,IPER2)
            IPERT = IPER*IPER2
C$$$          CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$          IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$          JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
          JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
          KSYM = ISYMB(JPOSB2+NBST(IGB2))
          ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
     $         LSPB(JPOSB2+NBST(IGB2))
C$$$          COEFF = CI(ITP0)*IPERT
            DO III=1,NPTST
               COEFF(III) = CI(ITP0,III)*IPERT
            ENDDO

! NOW TO LOOP OVER VALENCE ORBITALS

            IA1V1 = INPT(IA1)
            IA2VT = INPT(IA2)
            ICOUNT = 0
            DO 3530 IV1=1,NVAL
               IS3 = IOB(IV1)
               IPT = IMUL(IS3,IP1)
               E0BV1 = E0B0 + EFCK(IV1)
               IA1V1 = IA1V1 + 1
               IA2V2 = IA2VT

            DO 3540 IV2=1,NVAL
               ICOUNT = ICOUNT + 1
               IA2V2 = IA2V2 + 1
               IF (IOB(IV2).NE.IPT) GOTO 3540
C$$$               TMP4(ICOUNT) = E0BV1 + EFCK(IV2)

           MA = MAX(IA1V1,IA2V2)
           MI = MIN(IA1V1,IA2V2)
           INT1 = (MA*(MA-1))/2 + MI
C$$$           T1 = SI2(INT1)*COEFF
C$$$           TMP3(ICOUNT) = TMP3(ICOUNT) + T1

           T1 = SI2(INT1)
           DO III=1,NPTST
              TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T1*COEFF(III)
              TMP4(ICOUNT,III) = E0BV1 + EFCK(IV2) + EPT0(III)
           ENDDO

 3540       CONTINUE

 3530       CONTINUE

!END OF LOOP OVER VALENCE ORBITALS


 3520       CONTINUE

! END OF BETA EXCITE (IA2 -> IV2)

 3510       CONTINUE

! END OF ALPHA EXCITE (IA1 -> IV)

      IABOX1(ISPA_A) = IABOX1(ISPA_A) +1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1

      RETURN
      END SUBROUTINE EVVAA_DETACH_A_DETACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVAAE_TERM
      SUBROUTINE EVAAE_TERM(NB,IBCON1,ISYV,E0AD1,EFCK,NVAL,IMUL,
     $     IOB,ITAB,ISA1,NA,IACON1,IACON2,X,NX,LANDET,
     $     IBCON2,LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $     CI,INPT,NEXT,M1,M2,SVOOO,TMP3,TMP4,EVAAE,NSYM,ITGB,
     $     IBBOX1,IMXMAP,IMIMAP,ITBOX,IAELAC,
     $     IBELAC,IABOX1,
     $     LGCOM_EVAAE,NBST_EVAAE,ITGB_EVAAE,IPTAMI,
     $     IPTAMA,IPTBMI,IPTBMA,ISCBOX,
     $     NTMPSZ,NPTST,HINT,EPT0,COEFF,NCI,HPT)

      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ


      INTEGER II,NB,IBCON1(*),IJB,ISYB,ISYV,NVAL,IOB(*),
     $     NSYM,IMUL(NSYM,*),ISYT,ITAB(*),ISA1,NA,IACON1(*),
     $     IACON2(*),ORMAS_GET_GROUP,
     $     X(*),NX,LANDET(NSPACE,*),
     $     JJ,IBCON2(*),
     $     LBNDET(NSPACE,*),ISYMB(*),NBST(*),LSPA(*),NAST(*),
     $     ITGB,LDISB(NSYM,ITGB,*),ITAL,
     $     LSPB(*),ICOUNT,INPT(*),
     $     M2,NEXT,M1,NCI,NTMPSZ,NPTST,KK
      DOUBLE PRECISION HPT(NPTST,*)
      DOUBLE PRECISION E0BD1,E0AD1,EFCK(*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),SVOOO(NEXT,*),COEFF(*),CI(NCI,*),EVAAE,
     $     HINT(NPTST,*),EPT0(*)

      INTEGER IBBOX1(*),IMXMAP(*),IMIMAP(*),ITBOX(*),
     $     IEXTYP,IAELAC(*),IBELAC(*),I,IABOX1(*),ISPA_A,ISPA_B,
     $     ITGB_EVAAE,LGCOM_EVAAE(ITGB_EVAAE,*),NBST_EVAAE(*),
     $     IPTAMI(*),IPTAMA(*),IPTBMI(*),IPTBMA(*),ISCBOX(*),IEND,
     $     IGA_EVAAE,IGB_EVAAE


      IGA_EVAAE = ORMAS_GET_GROUP(NSPACE,NA+1,IPTAMA,IPTAMI,IABOX1)

      CALL RESETCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      DO IGB_EVAAE = 1,ITGB_EVAAE
         IEXTYP = LGCOM_EVAAE(IGB_EVAAE,IGA_EVAAE)

         IF(IEXTYP.GT.4.OR.IEXTYP.LT.(-3))GOTO 123

         IAELAC(1) = 0          !          
         IBELAC(1) = 0          ! 
         DO I = 1,NSPACE        ! 
            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
         ENDDO                  !
        
         DO IJB = 1,NBST_EVAAE(IGB_EVAAE)

C$$$         DO II=1,NB-1
C$$$            IBCON1(II) = II
C$$$         ENDDO
C$$$         DO 3700 IJB=1,ND1B

C$$$C$$$!EVAAE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C$$$C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$C$$$!    0  0  0  ...  0    :1
C$$$C$$$!X    1 -1  0  ...  0    :4
C$$$C$$$!X   -1  0  0  ...  0    :-3
C$$$C$$$!X    1  0  0  ...  0    :3


C$$$         CALL GETBOX(IBBOX1,IBCON1,NB-1,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !

C$$$         IF(IEXTYP.GT.4.OR.IEXTYP.LT.(-3))GOTO 3702

C$$$C$$$         IF(IEXTYP.NE.(1))GOTO 3702
         
C$$$         IAELAC(1) = 0          !          
C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !

C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',14I3,' | ',12I3)")IACON1(1:NA+1),IBCON1(1:NB-1)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA+1,NB-1,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,1,
C$$$     $     LSPA,LSPB,LDISB,2,2)
            ICOUNT = 0
            ISYB = ISYV
            E0BD1 = E0AD1
            DO II=1,NB-1
               E0BD1 = E0BD1 - EFCK(IBCON1(II)+NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(II)+NVAL))
            ENDDO
            ISYT = IMUL(ISYB,ISA1)
            ITAL = ITAB(ISYT)

! START IEXTYP  4:     1 -1  0 ... 0      
      IF(IEXTYP.EQ.4)THEN
         
         DO ISPA_A = 1,NSPACE
            IF(IMXMAP(ISPA_A).NE.1)CYCLE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE
            
            DO ISPA_B = 1,NSPACE
               IF(IMIMAP(ISPA_B).NE.(-1))CYCLE
               
      CALL EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,
     $                 IACON2,X,NX,LANDET,IBCON1,NB,IMUL,NSYM,
     $                 ITAL,IBCON2,ITGB,LBNDET,ISYMB,
     $                 NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,CI,E0BD1,
     $                 EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $                 IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $                 NTMPSZ,NCI,COEFF,EPT0,NPTST)

               EXIT
            ENDDO               !!!ISPA_B
            EXIT
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ.4)
! END IEXTYP  4

! START IEXTYP  3:     1  0  0 ... 0      
      IF(IEXTYP.EQ.3)THEN

         DO ISPA_A = 1,NSPACE
            IF(IMXMAP(ISPA_A).NE.1)CYCLE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE

            DO ISPA_B = 1,NSPACE
               IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
               
      CALL EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,
     $                 IACON2,X,NX,LANDET,IBCON1,NB,IMUL,NSYM,
     $                 ITAL,IBCON2,ITGB,LBNDET,ISYMB,
     $                 NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,CI,E0BD1,
     $                 EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $                 IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $                 NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ENDDO               !!!ISPA_B
            
            EXIT
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ.3)
      
! END IEXTYP  3

! START IEXTYP -3:    -1  0  0 ... 0      
      IF(IEXTYP.EQ.(-3))THEN
         
         DO ISPA_B = 1,NSPACE
            IF(IMIMAP(ISPA_B).NE.(-1))CYCLE
            
            DO ISPA_A = 1,NSPACE
               IF(IMIMAP(ISPA_A).LT.1)CYCLE
               
      CALL EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,
     $                 IACON2,X,NX,LANDET,IBCON1,NB,IMUL,NSYM,
     $                 ITAL,IBCON2,ITGB,LBNDET,ISYMB,
     $                 NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,CI,E0BD1,
     $                 EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $                 IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $                 NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ENDDO                  !!!ISPA_A
            
            EXIT
         ENDDO                  !!!ISPA_B
         
      ENDIF                     !!!(IEXTYP.EQ.(-3))
! END IEXTYP -3


! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         
         DO ISPA_A = 1,NSPACE
            IF(IABOX1(ISPA_A).EQ.0)CYCLE
            IF(IMIMAP(ISPA_A).EQ.0)THEN
               ISPA_B = ISPA_A
               
      CALL EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,
     $                 IACON2,X,NX,LANDET,IBCON1,NB,IMUL,NSYM,
     $                 ITAL,IBCON2,ITGB,LBNDET,ISYMB,
     $                 NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,CI,E0BD1,
     $                 EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $                 IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $                 NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ELSE                !!!(IMIMAP(ISPA_A).EQ.0)
               
               IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1
               DO ISPA_B = 1,NSPACE
                  IF(IMXMAP(ISPA_B).EQ.0)CYCLE
                  
      CALL EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,
     $                 IACON2,X,NX,LANDET,IBCON1,NB,IMUL,NSYM,
     $                 ITAL,IBCON2,ITGB,LBNDET,ISYMB,
     $                 NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,CI,E0BD1,
     $                 EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $                 IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $                 NTMPSZ,NCI,COEFF,EPT0,NPTST)
                  
               ENDDO            !!!ISPA_B
               IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
               
            ENDIF               !!!(IMIMAP(ISPA_A).EQ.0)
            
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1

C$$$! LOOP OVER DEXCITATIONS FROM IA1(A)

C$$$         DO 3710 IEL=1,NA+1
C$$$            IA1 = IACON1(IEL) + NVAL
C$$$            IS1 = IOB(IA1)
C$$$            CALL STR0VA(IACON1,IACON2,NA+1,IEL,NVAL,NVAL,IPER)
C$$$          CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE                                        
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LANDET(1,IGA2))

C$$$! LOOP OVER EXCITATIONS INTO IA2(B)

C$$$         IST = 1
C$$$         IEN = IBCON1(1)-1
C$$$         IF (NB.EQ.1) IEN=NACT
C$$$         DO 3720 KKJ=1,NB
C$$$            DO 3722 JJ=IST,IEN
C$$$               IA2 = JJ + NVAL
C$$$               IS2 = IOB(IA2)
C$$$               IP1 = IMUL(IS1,IS2)
C$$$               IF (IP1.NE.ITAL) GOTO 3722

C$$$! 0TH ORDER BETA POS/PERM

C$$$         CALL STR0AE(IBCON1,IBCON2,NB,KKJ,JJ,IPER2)
C$$$         IPERT = IPER*IPER2
 
C$$$        CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$         IF(.NOT.GENSPA)CYCLE
C$$$         IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$         IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
C$$$         KSYM = ISYMB(JPOSB2+NBST(IGB2))
C$$$         ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
C$$$     $        LSPB(JPOSB2+NBST(IGB2))
C$$$         COEFF = CI(ITP0)*IPERT

C$$$! LOOP OVER ALPHA VALENCE

C$$$         ICOUNT = 0
C$$$         DO 3730 IV=1,NVAL
C$$$            IS3 = IOB(IV)
C$$$            IPT = IMUL(IS3,IP1)
C$$$            E0BD1V = E0BD1 + EFCK(IV)
C$$$            IA1V = INPT(IA1) + IV
C$$$            IA2A1V = (IA2-1)*M2 + IA1V

C$$$! LOOP OVER BETA EXTERNAL

C$$$         DO 3740 IE=1,NEXT
C$$$            ICOUNT = ICOUNT + 1
C$$$            JE = IE + M1
C$$$            IF (IOB(JE).NE.IPT) GOTO 3740
C$$$            TMP4(ICOUNT) = E0BD1V - EFCK(JE)

C$$$            T1 = SVOOO(IE,IA2A1V)*COEFF
C$$$            TMP3(ICOUNT) = TMP3(ICOUNT) + T1

C$$$ 3740    CONTINUE

C$$$ 3730    CONTINUE

C$$$! END OF ALPHA VALENCE

C$$$ 3722       CONTINUE
C$$$            IST = IBCON1(KKJ)+1
C$$$            IEN = IBCON1(KKJ+1)-1
C$$$            IF (KKJ.EQ.NB-1) IEN=NACT
C$$$ 3720    CONTINUE

C$$$! END OF EXCITATIONS INTO EA2(B)

C$$$ 3710    CONTINUE

C$$$! END OF DEXCITATIONS OUT OF IA1(A), IA2(B)

C$$$         EINT = 0.0D+00
C$$$         DO II=1,ICOUNT
C$$$            EINT = EINT +(TMP3(II)*TMP3(II))/TMP4(II)
C$$$            TMP3(II) = 0.0D+00
C$$$            TMP4(II) = 1.0D+00
C$$$         ENDDO

C$$$         EVAAE = EVAAE + 2.0D+00*EINT
         DO JJ=1,NPTST
         DO KK=1,NPTST
         HINT(JJ,KK) = 0.0D+00
         DO II=1,ICOUNT
         HINT(JJ,KK)=HINT(JJ,KK)+(TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
         ENDDO
         ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO II=1,ICOUNT
               TMP3(II,JJ) = 0.0D+00
               TMP4(II,JJ) = 1.0D+00
            ENDDO
         ENDDO
C                                                                                         
         DO JJ=1,NPTST
            DO KK=1,NPTST
               HPT(JJ,KK) = HPT(JJ,KK) + 2.0D+00*HINT(JJ,KK)                              
               EVAAE = EVAAE + 2.0D+00*HINT(JJ,KK)                              
            ENDDO
         ENDDO

         ICOUNT = 0

C$$$ 3702    CALL ADVANC(IBCON1,NB-1,NACT)
C$$$ 3700    CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
         ENDDO                  !!!IJB

 123     CALL PUSHCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      ENDDO                     !!!IGB


      RETURN
      END SUBROUTINE EVAAE_TERM
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EVAAE_DETACH_A_ATTACH_B
      SUBROUTINE EVAAE_DETACH_A_ATTACH_B(NA,NVAL,IACON1,IOB,IACON2,X,NX,
     $     LANDET,IBCON1,NB,IMUL,NSYM,ITAL,IBCON2,
     $     ITGB,LBNDET,ISYMB,NBST,LDISB,LSPA,LSPB,INPT,M1,M2,NEXT,
     $     CI,E0BD1,EFCK,TMP4,SVOOO,TMP3,NAST,ISPA_A,ISPA_B,
     $     IAELAC,IBELAC,IBBOX1,IABOX1,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
        
      INTEGER IEL,NA,IA1,NVAL,IACON1(*),IS1,IOB(*),IACON2(*),IPER,
     $     IGA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSA2,
     $     X(*),NX,IBBOX1(*),NTMPSZ,NCI,NPTST,III,
     $     LANDET(NSPACE,*),IST,IEN,IBCON1(*),KKJ,NB,JJ,IA2,IS2,
     $     IP1,NSYM,IMUL(NSYM,*),ITAL,IBCON2(*),IPER2,IPERT,
     $     IGB2,ITGB,JPOSB2,LBNDET(NSPACE,*),KSYM,
     $     ISYMB(*),NBST(*),LDISB(NSYM,ITGB,*),LSPA(*),LSPB(*),NAST(*),
     $     ITP0,ICOUNT,IV,IS3,IPT,IA1V,IA2A1V,INPT(*),M2,IE,NEXT,JE,M1

      INTEGER IBELAC(*),ISPA_A,ISPA_B,IAELAC(*),IABOX1(*)

      DOUBLE PRECISION COEFF(*),CI(NCI,*),E0BD1,EFCK(*),E0BD1V,
     $     TMP4(NTMPSZ,*),T1,SVOOO(NEXT,*),TMP3(NTMPSZ,*),EPT0(*)

      IABOX1(ISPA_A) = IABOX1(ISPA_A) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

! LOOP OVER DEXCITATIONS FROM IA1(A)

         DO 3710 IEL=IAELAC(ISPA_A) +1, IAELAC(ISPA_A +1)!1,NA+1
            IA1 = IACON1(IEL) + NVAL
            IS1 = IOB(IA1)
            CALL STR0VA(IACON1,IACON2,NA+1,IEL,NVAL,NVAL,IPER)
C$$$          CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE                                        
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LANDET(1,IGA2))
          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $         IDIM,X,NX,LBST,LANDET(1,IGA2))

! LOOP OVER EXCITATIONS INTO IA2(B)

C$$$         IST = 1
C$$$         IEN = IBCON1(1)-1
C$$$         IF (NB.EQ.1) IEN=NACT

         IST = MSTA(ISPA_B)
         IEN = IBCON1(IBELAC(ISPA_B)+1) -1
         
C$$$         IF(IBBOX1(ISPA_B).EQ.0)IEN = MSTA(ISPA_B +1)-1
         IF(IBBOX1(ISPA_B).EQ.1)IEN = MSTA(ISPA_B +1)-1
C$$$         DO 3720 KKJ=1,NB
         DO 3720 KKJ = IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1) +1
            DO 3722 JJ=IST,IEN
               IA2 = JJ + NVAL
               IS2 = IOB(IA2)
               IP1 = IMUL(IS1,IS2)
               IF (IP1.NE.ITAL) GOTO 3722

! 0TH ORDER BETA POS/PERM

         CALL STR0AE(IBCON1,IBCON2,NB,KKJ,JJ,IPER2)
         IPERT = IPER*IPER2
 
C$$$        CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$         IF(.NOT.GENSPA)CYCLE
C$$$         IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$         IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
         JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $         IDIM,X,NX,LBST,LBNDET(1,IGB2))
         KSYM = ISYMB(JPOSB2+NBST(IGB2))
         ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
     $        LSPB(JPOSB2+NBST(IGB2))
C$$$         COEFF = CI(ITP0)*IPERT
         DO III=1,NPTST
            COEFF(III) = CI(ITP0,III)*IPERT
         ENDDO

! LOOP OVER ALPHA VALENCE

         ICOUNT = 0
         DO 3730 IV=1,NVAL
            IS3 = IOB(IV)
            IPT = IMUL(IS3,IP1)
            E0BD1V = E0BD1 + EFCK(IV)
            IA1V = INPT(IA1) + IV
            IA2A1V = (IA2-1)*M2 + IA1V

! LOOP OVER BETA EXTERNAL

         DO 3740 IE=1,NEXT
            ICOUNT = ICOUNT + 1
            JE = IE + M1
            IF (IOB(JE).NE.IPT) GOTO 3740
C$$$            TMP4(ICOUNT) = E0BD1V - EFCK(JE)

C$$$            T1 = SVOOO(IE,IA2A1V)*COEFF
C$$$            TMP3(ICOUNT) = TMP3(ICOUNT) + T1
            T1 = SVOOO(IE,IA2A1V)
            DO III=1,NPTST
               TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T1*COEFF(III)
               TMP4(ICOUNT,III) = E0BD1V - EFCK(JE) + EPT0(III)
            ENDDO

 3740    CONTINUE

 3730    CONTINUE

! END OF ALPHA VALENCE

 3722       CONTINUE
            IST = IBCON1(KKJ)+1
            IEN = IBCON1(KKJ+1)-1
C$$$            IF (KKJ.EQ.NB-1) IEN=NACT
            IF(KKJ.EQ.IBELAC(ISPA_B +1)) IEN=MSTA(ISPA_B +1) -1
 3720    CONTINUE

! END OF EXCITATIONS INTO EA2(B)

 3710    CONTINUE

! END OF DEXCITATIONS OUT OF IA1(A), IA2(B)

      IABOX1(ISPA_A) = IABOX1(ISPA_A) +1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

         RETURN
         END SUBROUTINE EVAAE_DETACH_A_ATTACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAAEE_TERM_2
      SUBROUTINE EAAEE_TERM_2(EAAEE,EPT0,E0V,E0A0,EFCK,CI,TMP4,TMP3,
     $     TMP1,SVOVO,NB,IBCON1,ISYV,IMUL,NSYM,IOB,NVAL,NA,
     $     ISA0,ITAB,IACON1,IACON2,X,NX,LANDET,IBCON2,ITGB,
     $     LBNDET,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,NQS,NQQ,M1,INPT,
     $     IABOX1,IBBOX1,IAELAC,IBELAC,
     $     IMIMAP,IMXMAP,ISPA_0,LGCOM_EAAEE_2,NBST_EAAEE_2,ITGB_EAAEE_2,
     $     IPTAMI,IPTAMA,IPTBMI,IPTBMA,ISCBOX,ITBOX,
     $     NTMPSZ,NPTST,HINT,COEFF,NCI,HPT)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER II,NB,IBCON1(*),IJB,ISYB0,ISYV,NSYM,IMUL(NSYM,*),
     $     IOB(*),NVAL,NA,JJ,ISA0,
     $     ITAB(*),IACON1(*),IACON2(*),NCI,NTMPSZ,NPTST,
     $     ORMAS_GET_GROUP,X(*),NX,
     $     LANDET(NSPACE,*),IBCON2(*),
     $     ITGB,LBNDET(NSPACE,*),ISYMB(*),
     $     NBST(*),LSPA(*),NAST(*),LDISB(NSYM,ITGB,*),LSPB(*),
     $     ICOUNT,NQS,NQQ,M1,INPT(*),
     $     IABOX1(*),
     $     IBBOX1(*),IAELAC(*),IBELAC(*),I,ITGB_EAAEE_2,
     $     IMXMAP(*),IMIMAP(*),IEXTYP,ISPA_A,ISPA_B,ISPA_0(*),
     $     NSPA_0,ISPA,ISPA_CRIT,LGCOM_EAAEE_2(ITGB_EAAEE_2,*),
     $     NBST_EAAEE_2(*),IPTAMI(*),IPTAMA(*),
     $     IPTBMI(*),IPTBMA(*),ISCBOX(*),IGA_EAAEE_2,IGB_EAAEE_2,
     $     IEND,ITBOX(*),KK
      DOUBLE PRECISION HPT(NPTST,*)
      DOUBLE PRECISION E0B0,EPT0(*),E0V,E0A0,EFCK(*),CI(NCI,*),
     $     TMP4(NTMPSZ,*),SVOVO(*),TMP1(NTMPSZ,*),TMP3(NTMPSZ,*),
     $     EAAEE,HINT(NPTST,*),COEFF(*)



      ICOUNT = 0

      IGA_EAAEE_2 = ORMAS_GET_GROUP(NSPACE,NA-1,IPTAMA,IPTAMI,IABOX1)
      
      CALL RESETCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX)
      CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      DO IGB_EAAEE_2 = 1,ITGB_EAAEE_2
         IEXTYP = LGCOM_EAAEE_2(IGB_EAAEE_2,IGA_EAAEE_2)
         
         IF(IEXTYP.GT.1.OR.IEXTYP.LT.(-6))GOTO 123
         
         IAELAC(1) = 0          !          
         IBELAC(1) = 0          ! 
         DO I = 1,NSPACE        ! 
            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
         ENDDO                  !
         
         DO IJB = 1,NBST_EAAEE_2(IGB_EAAEE_2)


C$$$          DO II=1,NB-1
C$$$             IBCON1(II) = II
C$$$          ENDDO
C$$$          DO 5810 IJB=1,ND1B

C$$$C$$$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C$$$C$$$! DETERMINE THE TYPE OF EXCITATION 
C$$$C$$$!   -2  0  0  ...  0    :-6
C$$$C$$$!   -1 -1  0  ...  0    :-6
C$$$C$$$!X   -1  0  0  ...  0    :-3
C$$$C$$$!X    0  0  0  ...  0    :1


C$$$         CALL GETBOX(IBBOX1,IBCON1,NB-1,MSTA,NSPACE) !
C$$$         ISUM = 0               !
C$$$         IABSUM = 0             !
C$$$         DO I = 1,NSPACE        !
C$$$            IMXMAP(I)=0         !
C$$$            IMIMAP(I)=0         !
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IF(ITBOX(I).LT.MINI(I))IMIMAP(I)=ITBOX(I)-MINI(I) !
C$$$            IF(ITBOX(I).GT.MAXI(I))IMXMAP(I)=ITBOX(I)-MAXI(I) !
C$$$            ITMAP(I)= IMIMAP(I)+IMXMAP(I) !
C$$$            ISUM = ISUM + ITMAP(I) !
C$$$            IABSUM= IABSUM + ABS(ITMAP(I)) !
C$$$         ENDDO                  !
C$$$         ISUMSN = ISIGN(1,ISUM) !
C$$$         IEXTYP = ISUMSN*(ABS(ISUM) + (2**IABSUM)) !

C$$$C$$$         IF(IEXTYP.NE.(-6))GOTO 5812
         
C$$$         IAELAC(1) = 0          !          
C$$$         IBELAC(1) = 0          ! 
C$$$         DO I = 1,NSPACE        ! 
C$$$            ITBOX(I)=IBBOX1(I)+IABOX1(I) !
C$$$            IAELAC(I+1)=IAELAC(I)+IABOX1(I) ! 
C$$$            IBELAC(I+1)=IBELAC(I)+IBBOX1(I) ! 
C$$$            IMIMAP(I)=ITBOX(I)-MINI(I) ! 
C$$$            IMXMAP(I)=ITBOX(I)-MAXI(I) ! 
C$$$         ENDDO                  !


C$$$      WRITE(6,'(40(1H=))')
C$$$      WRITE(6,"('BUP',12I3,' | ',12I3)")IACON1(1:NA-1),IBCON1(1:NB-1)              
C$$$      CALL ORMASPT_CHECK(IACON1,IBCON1,NA-1,NB-1,
C$$$     $     NA,NB,ITGA,ITGB,LGCOM,NBST,NAST,NALP,NBLP,
C$$$     $     NSYM,ISYMA,ISYMB,IMUL,1,
C$$$     $     LSPA,LSPB,LDISB,2,2)

      ISYB0 = ISYV
C$$$      E0B0 = EPT0(1)-E0V-E0A0
      E0B0 = -E0V-E0A0
      DO II=1,NB-1
         E0B0 = E0B0 - EFCK(IBCON1(II)+NVAL)
         ISYB0 = IMUL(ISYB0,IOB(IBCON1(II)+NVAL))
      ENDDO
      
! START IEXTYP  1:     0  0  0 ... 0      
      IF(IEXTYP.EQ.1)THEN
         
         DO ISPA_A = 1,NSPACE
            IF(IMXMAP(ISPA_A).GT.(-1))CYCLE
            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) +1
            
            DO ISPA_B = 1,NSPACE
               IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
            
               CALL EAAEE_ATTACH_A_ATTACH_B(IACON1,NA,NVAL,IOB,
     $              ISA0,IMUL,NSYM,ITAB,IACON2,X,NX,LANDET,IBCON1,NB,
     $              IBCON2,LBNDET,ITGB,ISYMB,NBST,LSPA,NAST,LDISB,
     $              LSPB,NQS,NQQ,M1,INPT,CI,E0B0,EFCK,TMP4,TMP3,SVOVO,
     $              TMP1,ISYB0,IABOX1,IBBOX1,IAELAC,IBELAC,ISPA_A,
     $              ISPA_B,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ENDDO               !!!  ISPA_B
            
            IMXMAP(ISPA_A) = IMXMAP(ISPA_A) -1         
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ.1)
! END IEXTYP  1



! START IEXTYP -3:    -1  0  0 ... 0      
      IF(IEXTYP.EQ.(-3))THEN
         
         NSPA_0 = 0
         DO ISPA = 1,NSPACE
            IF(IMIMAP(ISPA).EQ.(-1))THEN
               ISPA_CRIT = ISPA
            ELSE
               NSPA_0 = NSPA_0 +1
               ISPA_0(NSPA_0) = ISPA
            ENDIF
         ENDDO
         
         IMXMAP(ISPA_CRIT) = IMXMAP(ISPA_CRIT) +1
         
         DO ISPA_B = 1,NSPACE
            IF(IMXMAP(ISPA_B).GT.(-1))CYCLE
            
               CALL EAAEE_ATTACH_A_ATTACH_B(IACON1,NA,NVAL,IOB,
     $              ISA0,IMUL,NSYM,ITAB,IACON2,X,NX,LANDET,IBCON1,NB,
     $              IBCON2,LBNDET,ITGB,ISYMB,NBST,LSPA,NAST,LDISB,
     $              LSPB,NQS,NQQ,M1,INPT,CI,E0B0,EFCK,TMP4,TMP3,SVOVO,
     $              TMP1,ISYB0,IABOX1,IBBOX1,IAELAC,IBELAC,ISPA_CRIT,
     $              ISPA_B,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
            
         ENDDO                  !!!  ISPA_B
         
         DO ISPA = 1,NSPACE-1
            ISPA_A = ISPA_0(ISPA)
            IF(IMXMAP(ISPA_A).GT.(-1))CYCLE
            
               CALL EAAEE_ATTACH_A_ATTACH_B(IACON1,NA,NVAL,IOB,
     $              ISA0,IMUL,NSYM,ITAB,IACON2,X,NX,LANDET,IBCON1,NB,
     $              IBCON2,LBNDET,ITGB,ISYMB,NBST,LSPA,NAST,LDISB,
     $              LSPB,NQS,NQQ,M1,INPT,CI,E0B0,EFCK,TMP4,TMP3,SVOVO,
     $              TMP1,ISYB0,IABOX1,IBBOX1,IAELAC,IBELAC,ISPA_A,
     $              ISPA_CRIT,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
            
         ENDDO                  !!!  ISPA_A

         IMXMAP(ISPA_CRIT) = IMXMAP(ISPA_CRIT) -1
         
      ENDIF                     !!!(IEXTYP.EQ(-3))
! END IEXTYP -3



! START IEXTYP -6:    -1 -1  0 ... 0      
!                     -2  0  0 ... 0      
      IF(IEXTYP.EQ.(-6))THEN
         
         DO ISPA_A = 1,NSPACE
            IF(IMIMAP(ISPA_A).GT.(-1))CYCLE
            IMIMAP(ISPA_A) = IMIMAP(ISPA_A) +1
            
            DO ISPA_B = 1,NSPACE
               IF(IMIMAP(ISPA_B).GT.(-1))CYCLE
               
               CALL EAAEE_ATTACH_A_ATTACH_B(IACON1,NA,NVAL,IOB,
     $              ISA0,IMUL,NSYM,ITAB,IACON2,X,NX,LANDET,IBCON1,NB,
     $              IBCON2,LBNDET,ITGB,ISYMB,NBST,LSPA,NAST,LDISB,
     $              LSPB,NQS,NQQ,M1,INPT,CI,E0B0,EFCK,TMP4,TMP3,SVOVO,
     $              TMP1,ISYB0,IABOX1,IBBOX1,IAELAC,IBELAC,ISPA_A,
     $              ISPA_B,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
               
            ENDDO               !!!ISPA_B
            
            IMIMAP(ISPA_A) = IMIMAP(ISPA_A) -1
         ENDDO                  !!!ISPA_A
         
      ENDIF                     !!!(IEXTYP.EQ(-6))
! END IEXTYP -6

C$$$! NOW TO LOOP OVER ALPHA DEXCITATIONS (IE -> IA)

C$$$             IST = 1
C$$$             IEN = IACON1(1)-1
C$$$             IF (NA.EQ.1) IEN=NACT
C$$$             DO 5820 KKJ=1,NA
C$$$                DO 5822 JJ=IST,IEN
C$$$                   IA = JJ + NVAL
C$$$                   IS3 = IOB(IA)
C$$$                   ISA1 = IMUL(ISA0,IS3)
C$$$                   ITAS = ITAB(ISA1)

C$$$                   CALL STR0AE(IACON1,IACON2,NA,KKJ,JJ,IPER)
C$$$          CALL GETPTBOX(IABOX2,IACON2,NA,MSTA,NSPACE,IAMA,IAMI,GENSPA)
C$$$          IF(.NOT.GENSPA)CYCLE
C$$$          IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX2)
C$$$          JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX2,NSPACE,MSTA,
C$$$     $         IDIM,X,NX,LBST,LANDET(1,IGA2))

C$$$! NOW TO LOOP OVER BETA DEXCITATIONS (IE2 -> IA2)

C$$$             IST2 = 1
C$$$             IEN2 = IBCON1(1)-1
C$$$             IF (NB.EQ.1) IEN2=NACT
C$$$             DO 5830 KKJ2=1,NB
C$$$                DO 5832 JJ2=IST2,IEN2
C$$$                   IA2 = JJ2 + NVAL
C$$$                   IS4 = IOB(IA2)
C$$$                   ISYB = IMUL(ISYB0,IS4)
C$$$                   IF (ISYB.NE.ITAS) GOTO 5832
C$$$                   IP2 = IMUL(IS4,IS3)

C$$$        CALL STR0AE(IBCON1,IBCON2,NB,KKJ2,JJ2,IPER2)
C$$$        IPERT = IPER*IPER2

C$$$        CALL GETPTBOX(IBBOX2,IBCON2,NB,MSTA,NSPACE,IBMA,IBMI,GENSPA)
C$$$        IF(.NOT.GENSPA)CYCLE                                            
C$$$        IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX2)
C$$$        IF(LGCOM(IGB2,IGA2).NE.1) CYCLE
C$$$        JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX2,NSPACE,MSTA,
C$$$     $       IDIM,X,NX,LBST,LBNDET(1,IGB2))
C$$$        KSYM = ISYMB(JPOSB2+NBST(IGB2))
C$$$        ITP0 = LSPA(NAST(IGA2)+JPOSA2) + LDISB(KSYM,IGB2,IGA2) +
C$$$     $       LSPB(JPOSB2+NBST(IGB2))
C$$$        COEFF = CI(ITP0)*IPERT

C$$$      ICOUNT = 0
C$$$      DO 5800 JE=NQS,NQQ
C$$$         IS1 = IOB(JE)
C$$$         IPT = IMUL(IS1,IP2)
C$$$         E0A1 = E0B0 - EFCK(JE)
C$$$         IEA = (JE-M1-1)*M1 + IA
C$$$         IEAT = INPT(IEA)
C$$$         IEA2 = IEA - IA + IA2
C$$$         IEA2T = INPT(IEA2)

C$$$         INT1 = IEAT + IA2 - M1
C$$$         INT2 = IEA2T + IA - M1
C$$$         DO 5807 JE2=NQS,JE-1
C$$$             ICOUNT = ICOUNT + 1
C$$$             INT1 = INT1 + M1
C$$$             INT2 = INT2 + M1
C$$$             IF (IOB(JE2).NE.IPT) GOTO 5807
C$$$             TMP4(ICOUNT) = E0A1 - EFCK(JE2)

C$$$! DETERMINE MATRIX ELEMENT

C$$$! ME = [IE,IA | IE2,IA2], [IE,IA2 | IE2,IA]

C$$$        T1 = SVOVO(INT1)*COEFF
C$$$        T2 = SVOVO(INT2)*COEFF
C$$$        TMP1(ICOUNT) = TMP1(ICOUNT) + T1
C$$$        TMP3(ICOUNT) = TMP3(ICOUNT) + T2

C$$$ 5807 CONTINUE

C$$$! JE2=JE

C$$$      ICOUNT = ICOUNT + 1
C$$$      IF (IP2.NE.1) GOTO 5800
C$$$      TMP4(ICOUNT) = E0A1 - EFCK(JE)
C$$$      MA = MAX(IEA,IEA2)
C$$$      MI = MIN(IEA,IEA2)
C$$$      INT1 = INPT(MA) + MI
C$$$      T1 = SVOVO(INT1)*COEFF
C$$$      TMP1(ICOUNT) = TMP1(ICOUNT) + T1

C$$$! END LOOP OVER IE(A),IE2(B)

C$$$ 5800 CONTINUE

C$$$ 5832           CONTINUE
C$$$                IST2 = IBCON1(KKJ2)+1
C$$$                IEN2 = IBCON1(KKJ2+1)-1
C$$$                IF (KKJ2.EQ.NB-1) IEN2=NACT
C$$$ 5830        CONTINUE

C$$$! END OF BETA DEXCITATION IE2 -> IA2

C$$$ 5822           CONTINUE
C$$$                IST = IACON1(KKJ)+1
C$$$                IEN = IACON1(KKJ+1)-1
C$$$                IF (KKJ.EQ.NA-1) IEN=NACT
C$$$ 5820        CONTINUE

C$$$! END OF ALPHA DEXCITATION IE -> IA

C$$$            EINT = 0.0D+00
C$$$            DO II=1,ICOUNT
C$$$               EINT = EINT +
C$$$     *              (TMP1(II)*TMP1(II)+TMP3(II)*TMP3(II))/TMP4(II)
C$$$               TMP1(II) = 0.0D+00
C$$$               TMP3(II) = 0.0D+00
C$$$               TMP4(II) = 1.0D+00
C$$$            ENDDO
C$$$            
C$$$            EAAEE = EAAEE + EINT

       DO JJ=1,NPTST
       DO KK=1,NPTST
       HINT(JJ,KK) = 0.0D+00
       DO II=1,ICOUNT
          HINT(JJ,KK) = HINT(JJ,KK) +
     *   (TMP1(II,JJ)*TMP1(II,KK)+TMP3(II,JJ)*TMP3(II,KK))/TMP4(II,JJ)
       ENDDO
       ENDDO
       ENDDO
C                                                                                         
       DO JJ=1,NPTST
          DO II=1,ICOUNT
             TMP1(II,JJ) = 0.0D+00
             TMP3(II,JJ) = 0.0D+00
             TMP4(II,JJ) = 1.0D+00
          ENDDO
       ENDDO                                                                              
C                                                                                         
!       ZCOEF=2.0D+00
!       IF (IJB.EQ.IJK3) ZCOEF=1.0D+00
       DO JJ=1,NPTST
          DO KK=1,NPTST
C$$$             HPT(JJ,KK) = HPT(JJ,KK) + ZCOEF*HINT(JJ,KK)
C$$$             EAAEE = EAAEE + ZCOEF*HINT(JJ,KK)
             HPT(JJ,KK) = HPT(JJ,KK) + HINT(JJ,KK)
             EAAEE = EAAEE + HINT(JJ,KK)
          ENDDO
       ENDDO

            ICOUNT = 0

C$$$ 5812  CALL ADVANC(IBCON1,NB-1,NACT)
C$$$ 5810  CONTINUE

            CALL MOVEUP2(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
         ENDDO                  !!!IJB
         
 123     CALL PUSHCO(IBBOX1,NSPACE,NB-1,IPTBMA,IPTBMI,ISCBOX,IEND)
         CALL RESETDE(IBBOX1,NSPACE,NB-1,MSTA,IBCON1)
      ENDDO                     !!!IGB

      RETURN
      END SUBROUTINE EAAEE_TERM_2
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK EAAEE_ATTACH_A_ATTACH_B
      SUBROUTINE EAAEE_ATTACH_A_ATTACH_B(IACON1,NA,NVAL,IOB,ISA0,
     $     IMUL,NSYM,ITAB,IACON2,X,NX,LANDET,IBCON1,NB,IBCON2,
     $     LBNDET,ITGB,ISYMB,NBST,LSPA,NAST,LDISB,LSPB,
     $     NQS,NQQ,M1,INPT,CI,E0B0,EFCK,TMP4,TMP3,SVOVO,TMP1,ISYB0,
     $     IABOX1,IBBOX1,IAELAC,IBELAC,ISPA_A,ISPA_B,ICOUNT,
     $              NTMPSZ,NCI,COEFF,EPT0,NPTST)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

      INTEGER IST,IEN,IACON1(*),NA,KKJ,JJ,IA,NVAL,IS3,IOB(*),
     $     ISA1,NSYM,IMUL(NSYM,*),ISA0,ITAS,ITAB(*),IACON2(*),IPER,
     $     IGA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSA2,
     $     X(*),NX,LANDET(NSPACE,*),IST2,IEN2,IBCON1(*),NB,KKJ2,JJ2,IA2,
     $     IS4,ISYB,IP2,IBCON2(*),IPERT,IPER2,IGB2,JPOSB2,
     $     LBNDET(NSPACE,*),ITGB,KSYM,ISYMB(*),NBST(*),
     $     ITP0,LSPA(*),NAST(*),LDISB(NSYM,ITGB,*),LSPB(*),ICOUNT,
     $     NQS,NQQ,IS1,IPT,IEA,M1,IEAT,INPT(*),IEA2,IEA2T,INT1,
     $     INT2,JE2,ISYB0,MA,MI,JE,IBELAC(*),IAELAC(*),IABOX1(*),
     $     IBBOX1(*),ISPA_A,ISPA_B,NTMPSZ,NCI,NPTST,III

      DOUBLE PRECISION CI(NCI,*),E0A1,E0B0,EFCK(*),TMP4(NTMPSZ,*),
     $     TMP3(NTMPSZ,*),T1,SVOVO(*),T2,TMP1(NTMPSZ,*),COEFF(*),EPT0(*)

! NOW TO LOOP OVER ALPHA DEXCITATIONS (IE -> IA)

      IABOX1(ISPA_A) = IABOX1(ISPA_A) +1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) +1
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)

      IST = MSTA(ISPA_A)
      IEN = IACON1(IAELAC(ISPA_A) +1) -1
      IF(IABOX1(ISPA_A).EQ.1) IEN = MSTA(ISPA_A +1)-1

      DO 5820 KKJ=IAELAC(ISPA_A) +1, IAELAC(ISPA_A +1) +1 !1,NA
         DO 5822 JJ=IST,IEN
            IA = JJ + NVAL
            IS3 = IOB(IA)
            ISA1 = IMUL(ISA0,IS3)
            ITAS = ITAB(ISA1)
            
            CALL STR0AE(IACON1,IACON2,NA,KKJ,JJ,IPER)
            JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $           IDIM,X,NX,LBST,LANDET(1,IGA2))

! NOW TO LOOP OVER BETA DEXCITATIONS (IE2 -> IA2)

            IST2 = MSTA(ISPA_B)
            IEN2 = IBCON1(IBELAC(ISPA_B) +1) -1
            IF(IBBOX1(ISPA_B).EQ.1) IEN2 = MSTA(ISPA_B +1)-1
            
            DO 5830 KKJ2=IBELAC(ISPA_B) +1, IBELAC(ISPA_B +1) +1 !1,NB
               DO 5832 JJ2=IST2,IEN2
                  IA2 = JJ2 + NVAL
                  IS4 = IOB(IA2)
                  ISYB = IMUL(ISYB0,IS4)
                  IF (ISYB.NE.ITAS) GOTO 5832
                  IP2 = IMUL(IS4,IS3)

                  CALL STR0AE(IBCON1,IBCON2,NB,KKJ2,JJ2,IPER2)
                  IPERT = IPER*IPER2
                  
                  JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,
     $                 MSTA,IDIM,X,NX,LBST,LBNDET(1,IGB2))
                  KSYM = ISYMB(JPOSB2+NBST(IGB2))
                  ITP0 = LSPA(NAST(IGA2)+JPOSA2) +LDISB(KSYM,IGB2,IGA2)+
     $                 LSPB(JPOSB2+NBST(IGB2))
C$$$                  COEFF = CI(ITP0)*IPERT
        DO III=1,NPTST
           COEFF(III) = CI(ITP0,III)*IPERT
        ENDDO

                  ICOUNT = 0
                  DO 5800 JE=NQS,NQQ
                     IS1 = IOB(JE)
                     IPT = IMUL(IS1,IP2)
                     E0A1 = E0B0 - EFCK(JE)
                     IEA = (JE-M1-1)*M1 + IA
                     IEAT = INPT(IEA)
                     IEA2 = IEA - IA + IA2
                     IEA2T = INPT(IEA2)
                     
                     INT1 = IEAT + IA2 - M1
                     INT2 = IEA2T + IA - M1
                     DO 5807 JE2=NQS,JE-1
                        ICOUNT = ICOUNT + 1
                        INT1 = INT1 + M1
                        INT2 = INT2 + M1
                        IF (IOB(JE2).NE.IPT) GOTO 5807
C$$$                        TMP4(ICOUNT) = E0A1 - EFCK(JE2)
                        
! DETERMINE MATRIX ELEMENT

! ME = [IE,IA | IE2,IA2], [IE,IA2 | IE2,IA]

C$$$                        T1 = SVOVO(INT1)*COEFF
C$$$                        T2 = SVOVO(INT2)*COEFF
C$$$                        TMP1(ICOUNT) = TMP1(ICOUNT) + T1
C$$$                        TMP3(ICOUNT) = TMP3(ICOUNT) + T2

        T1 = SVOVO(INT1)
        T2 = SVOVO(INT2)
        DO III=1,NPTST
           TMP1(ICOUNT,III) = TMP1(ICOUNT,III) + T1*COEFF(III)
           TMP3(ICOUNT,III) = TMP3(ICOUNT,III) + T2*COEFF(III)                            
           TMP4(ICOUNT,III) = E0A1 - EFCK(JE2) + EPT0(III)
        ENDDO

 5807                CONTINUE

! JE2=JE

                     ICOUNT = ICOUNT + 1
                     IF (IP2.NE.1) GOTO 5800
C$$$                     TMP4(ICOUNT) = E0A1 - EFCK(JE)
                     MA = MAX(IEA,IEA2)
                     MI = MIN(IEA,IEA2)
                     INT1 = INPT(MA) + MI
C$$$                     T1 = SVOVO(INT1)*COEFF
C$$$                     TMP1(ICOUNT) = TMP1(ICOUNT) + T1
      T1 = SVOVO(INT1)
      DO III=1,NPTST
         TMP1(ICOUNT,III) = TMP1(ICOUNT,III) + T1*COEFF(III)
         TMP4(ICOUNT,III) = E0A1 - EFCK(JE) + EPT0(III)
      ENDDO
      
! END LOOP OVER IE(A),IE2(B)

 5800             CONTINUE

 5832          CONTINUE
               IST2 = IBCON1(KKJ2)+1
               IEN2 = IBCON1(KKJ2+1)-1
               IF(KKJ2.EQ.IBELAC(ISPA_B +1)) IEN2 = MSTA(ISPA_B +1)-1
 5830       CONTINUE
             
! END OF BETA DEXCITATION IE2 -> IA2

 5822    CONTINUE
         IST = IACON1(KKJ)+1
         IEN = IACON1(KKJ+1)-1
         IF(KKJ.EQ.IAELAC(ISPA_A +1)) IEN = MSTA(ISPA_A +1)-1
 5820 CONTINUE
      
! END OF ALPHA DEXCITATION IE -> IA

      IABOX1(ISPA_A) = IABOX1(ISPA_A) -1
      IBBOX1(ISPA_B) = IBBOX1(ISPA_B) -1

      RETURN
      END SUBROUTINE EAAEE_ATTACH_A_ATTACH_B
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_MRPT
      SUBROUTINE  INTERNAL_MRPT(IABOX1,IBBOX1,ISCBOX,
     $     NA,NB,NVAL,ITGB,IPTBMA,IPTBMI,NAST,LGCOM,LPTCOM,
     $     NPTBST,ITGBPT,IACON1,IACON2,IBCON1,IBCON2,SI1,SI2,INPT,
     $     E0V,EFCK,EPT0,LSPA,LDISB,LBNDET,LANDET,X,NX,NSYM,CI,
     $     ITGAPT,NPTAST,IPTAMI,IPTAMA,NPTST,NCI,HPT,COEFF,HINT,EINT,
     $     NBST,IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,
     $     IAELAC2,ISPA_0,LSPB,IMUL,ISYV,IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VAIABLES
      INTEGER NVAL,ITGB,NCI,IGAPT,IGBPT,NSYM,NX,ISYV,
     $     ITGAPT,ITGBPT,NA,NB,NPTST,ISTSYM
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER INPT(*),X(*),LDISB(NSYM,ITGB,*),LBNDET(NSPACE,*),
     $     LANDET(NSPACE,*),LSPA(*),LSPB(*),IMUL(NSYM,*),ISYMB(*),
     $     NPTAST(*),NPTBST(*),LPTCOM(ITGBPT,*),NBST(*),IOB(*),
     $     IABOX1(*),IACON1(*),IACON2(*),IBBOX1(*),
     $     IBCON1(*),IBCON2(*),ISCBOX(*),IPTBMA(*),IPTAMA(*),IPTAMI(*),
     $     IPTBMI(*),LGCOM(ITGB,*),NAST(*),IMXMAP(*),IMIMAP(*),
     $     IBELAC(*),IBELAC2(*),IAELAC(*),IAELAC2(*),ISPA_0(*)
      DOUBLE PRECISION SI1(*),SI2(*),CI(NCI,*),COEFF(*),HINT(NPTST,*),
     $     EFCK(*),EPT0(*),EINT(*),HPT(NPTST,*)

      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      INTEGER ME,MASTER,NPROC,IBTYP,IPTIM
      LOGICAL GOPARR,DSKWRK,MASWRK

! LOCAL ARRAYS/VARIABLES
      INTEGER III,MY_TASK,IEND,ITOP_MOD

! FOR STATUS UPDATE
      ITOP_MOD=INT(0.5D+00+ITGAPT/10.0D+00)

      DO III = 1,NPTST  ! I THINK THIS SHOULD STAY
         EINT(III) = 0.0D+00
      ENDDO

      CALL DDI_DLBNEXT(MY_TASK)
! LOOP OVER CORRECT EXCITED STATE COMBINATIONS: SCREEN WITH CONDITIONAL
      CALL RESETCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX)
      DO 1000 IGAPT = 1,ITGAPT

         IF(IGAPT-1.EQ.MY_TASK)THEN
               
            CALL RESETCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX)                 
            DO 1010 IGBPT = 1,ITGBPT
            
! PASS OFF CONTROL TO THE PROPER REGION BY EXCITATION TYPE               

               IF(LPTCOM(IGBPT,IGAPT).EQ.0)GOTO 1015

      IF(LPTCOM(IGBPT,IGAPT).EQ.3)THEN
      CALL INTERNAL_TYPE_3(NPTBST,NPTAST,IBBOX1,IBCON1,IACON1,IGBPT,
     $     IGAPT,NA,NB,NAST,IABOX1,NVAL,SI1,SI2,INPT,E0V,EFCK,EPT0,LSPA,
     $     IBCON2,IACON2,LGCOM,LDISB,LBNDET,LANDET,X,NX,NSYM,ITGB,
     $     CI,NBST,NCI,NPTST,COEFF,EINT,HINT,IMXMAP,IMIMAP,IBELAC,
     $     IBELAC2,IAELAC,IAELAC2,ISPA_0,HPT,LSPB,IMUL,ISYV,IOB,ISYMB,
     $        ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.(-3))THEN
         CALL INTERNAL_TYPE_M3(NPTBST,NPTAST,IBBOX1,IBCON1,IACON1,IGBPT,
     $        IGAPT,NA,NB,NAST,IABOX1,NVAL,SI1,SI2,INPT,E0V,EFCK,
     $        EPT0,LSPA,IBCON2,IACON2,LGCOM,LDISB,LBNDET,LANDET,X,NX,
     $        NSYM,ITGB,CI,NBST,NCI,NPTST,COEFF,EINT,HINT,
     $        IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,HPT,
     $        LSPB,IMUL,ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.6)THEN
      CALL INTERNAL_TYPE_6(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,IBCON1,
     $     IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $     NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,
     $     SI2,INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,
     $     IMUL,ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.(-6))THEN
      CALL INTERNAL_TYPE_M6(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,IBCON1,
     $        IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $        NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,
     $        SI2,INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $        IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,
     $        IMUL,ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.(-9))THEN
      CALL INTERNAL_TYPE_M9(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,IBCON1,
     $        IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $        NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,SI2,INPT,HINT,
     $        HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,IMXMAP,
     $        IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,IMUL,
     $        ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.9)THEN
      CALL INTERNAL_TYPE_9(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,IBCON1,
     $        IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $        NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,
     $       SI2,INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $        IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,
     $        IMUL,ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.16)THEN
        CALL INTERNAL_TYPE_16(IABOX1,IBBOX1,NPTAST,NPTBST,IACON1,IBCON1,
     $       NA,NB,IGAPT,IGBPT,IACON2,IBCON2,NVAL,NX,X,EFCK,INPT,LANDET,
     $        LBNDET,LGCOM,SI2,LDISB,NAST,LSPA,ITGB,NSYM,CI,E0V,
     $        EPT0,NCI,NPTST,COEFF,HPT,HINT,EINT,NBST,
     $        IBELAC,IBELAC2,IAELAC,IAELAC2,LSPB,IMUL,ISYV,IOB,
     $        ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

      IF(LPTCOM(IGBPT,IGAPT).EQ.4)THEN
         CALL INTERNAL_TYPE_4(IABOX1,IBBOX1,E0V,EPT0,IACON1,IBCON1,NA,
     $        NB,NPTAST,NPTBST,IGAPT,IGBPT,EFCK,NVAL,IACON2,IBCON2,X,NX,
     $        CI,LANDET,LBNDET,LDISB,LGCOM,NAST,NSYM,ITGB,LSPA,SI1,
     $        SI2,INPT,NCI,NPTST,HPT,EINT,COEFF,NBST,HINT,
     $        IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,
     $        LSPB,IMUL,ISYV,IOB,ISYMB,ISTSYM)
         GOTO 1015
      ENDIF

 1015 CONTINUE 

!END OF LOOP OVER PERTURBED BETA GROUPS
            CALL PUSHCO(IBBOX1,NSPACE,NB,IPTBMA,IPTBMI,ISCBOX,IEND)
 1010    CONTINUE 

         CALL DDI_DLBNEXT(MY_TASK)
      ENDIF

!END OF LOOP OVER PERTURBED ALPHA GROUPS         
         CALL PUSHCO(IABOX1,NSPACE,NA,IPTAMA,IPTAMI,ISCBOX,IEND)

! PROGRESS
      IF(ME.EQ.MASTER)THEN
         IF(MOD(IGAPT,ITOP_MOD).EQ.0)THEN
            WRITE(6,6777)((FLOAT(IGAPT)/FLOAT(ITGAPT))*100)
            CALL FLSHBF(6)
         ENDIF
      ENDIF

 1000 CONTINUE 

      RETURN

 6777 FORMAT(10X,F8.1,' % DONE')

      END SUBROUTINE INTERNAL_MRPT
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_M9
      SUBROUTINE INTERNAL_TYPE_M9(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,
     $     IBCON1,IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $     NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,SI2,INPT,HINT,HPT,
     $     NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,IMXMAP,IMIMAP,IBELAC,
     $     IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,IMUL,ISYV,IOB,ISYMB,
     $     ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NSYM,IGBPT,IGAPT,NA,NB,NVAL,NX,ITGB,NCI,NPTST,ISYV,
     $     ISTSYM
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER IMUL(NSYM,*),IABOX1(*),IBBOX1(*),IACON1(*),IACON2(*),
     $     IBCON1(*),IBCON2(*),NPTAST(*),NPTBST(*),LSPA(*),LSPB(*),
     $     NAST(*),NBST(*),X(*),LGCOM(ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LDISB(NSYM,ITGB,*),INPT(*),IMXMAP(*),
     $     IMIMAP(*),IAELAC(*),IAELAC2(*),IBELAC(*),IBELAC2(*),IOB(*),
     $     ISPA_0(*),ISYMB(*)
      DOUBLE PRECISION EPT0(*),EFCK(*),CI(NCI,*),SI2(*),EINT(*),
     $     COEFF(*),HPT(NPTST,*),HINT(NPTST,*)

! LOCAL VARIABLES
      INTEGER ISYB,ISYA,ISYL,ISPA,IJK,IJL,JJJ,III,N0SPA,IDEXSPA,IEXIND,
     $     IAEXSPA,IBEXSPA,IADEXSPA,IBDEXSPA,IBDEXIND,IADEXIND,NEXSPA,
     $     IDEXSPA2
      DOUBLE PRECISION E0A,E0AB

! LOCAL ARRAY
      INTEGER IEXSPA(3)
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III = 1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS
      NEXSPA = 0
      N0SPA = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMIMAP(ISPA).EQ.(-2))THEN
            IEXSPA(1) = ISPA
            IEXSPA(2) = ISPA
            NEXSPA = 1
         ELSEIF(IMIMAP(ISPA).EQ.(-1))THEN
            NEXSPA = NEXSPA +1
            IEXSPA(NEXSPA) = ISPA
         ELSEIF(IMXMAP(ISPA).EQ.1) THEN
            IDEXSPA = ISPA
            N0SPA = N0SPA + 1
            ISPA_0(N0SPA) = ISPA
         ELSE
            N0SPA = N0SPA + 1
            ISPA_0(N0SPA) = ISPA
         ENDIF
      ENDDO   
      IEXSPA(3) = IEXSPA(1)

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO

         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,2,ISYMA)

! DOUBLE BETA AND ALPHA DEXCITATIONS
! DOUBLE BETA DEXCITATIONS
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) -1
      DO 2000 ISPA = 1,N0SPA
         IDEXSPA2 = ISPA_0(ISPA)
         
         IF(IMIMAP(IDEXSPA2).LT.1)CYCLE
         IF(IDEXSPA2.LT.IDEXSPA) GOTO 20
! TAKES CARE OF CASE WHEN IDEXSPA2.GE.IDEXSPA
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA,IDEXSPA2,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA,IDEXSPA2,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

                  IF(IDEXSPA2.EQ.IDEXSPA)CYCLE
 20               CONTINUE 
!TAKES CARE OF THE CASE WHEN IDEXSPA2.LT.IDEXSPA
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA2,IDEXSPA,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA2,IDEXSPA,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

 2000 CONTINUE 
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1

! DO ALPHA/BETA DEXCITATIONS SEPARATLY
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) -1
      DO 4000 IEXIND = 1,NEXSPA
         IAEXSPA = IEXSPA(IEXIND)
         IBEXSPA = IEXSPA(IEXIND +1)

         DO 4010 IADEXIND = 1,N0SPA
            IADEXSPA = ISPA_0(IADEXIND)
            IF(IMIMAP(IADEXSPA).LT.1)CYCLE

      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IADEXSPA,IDEXSPA,IAEXSPA,IBEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)

 4010    CONTINUE 
         
         DO 4020 IBDEXIND = 1,N0SPA
            IBDEXSPA = ISPA_0(IBDEXIND)
            IF(IBDEXSPA.EQ.IDEXSPA)CYCLE
            IF(IMIMAP(IBDEXSPA).LT.1)CYCLE

      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IDEXSPA,IBDEXSPA,IAEXSPA,IBEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)

 4020    CONTINUE 
 4000 CONTINUE 
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III=1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III=1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111 CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010 CONTINUE  
      CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN 
      END SUBROUTINE INTERNAL_TYPE_M9
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_9
      SUBROUTINE INTERNAL_TYPE_9(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,
     $     IBCON1,IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $     NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,SI2,
     $     INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,
     $     IAELAC2,ISPA_0,LSPB,
     $     IMUL,ISYV,IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NSYM,IGBPT,IGAPT,NA,NB,NVAL,NX,ITGB,NCI,ISYV,NPTST,
     $     ISTSYM
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER IMUL(NSYM,*),IOB(*),ISYMB(*),IABOX1(*),IBBOX1(*),
     $     IACON1(*),IACON2(*),IBCON1(*),IBCON2(*),X(*),INPT(*),
     $     LGCOM(ITGB,*),LDISB(NSYM,ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),NPTAST(*),
     $     NPTBST(*),IMXMAP(*),IMIMAP(*),IAELAC(*),IAELAC2(*),IBELAC(*),
     $     IBELAC2(*),ISPA_0(*)
      DOUBLE PRECISION EPT0(*),EFCK(*),CI(NCI,*),SI2(*),EINT(*),
     $     COEFF(*),HPT(NPTST,*),HINT(NPTST,*)

! LOCAL VAIABLES
      INTEGER ISYA,ISYB,ISYL,ISPA,IJK,IJL,III,N0SPA,
     $     IDEXSPA,JJJ,IEXIND,IAEXSPA,IBEXSPA,IADEXSPA,IBDEXSPA,
     $     IBDEXIND,IADEXIND,NEXSPA,IDEXSPA2
      DOUBLE PRECISION E0A,E0AB
 
! LOCAL ARRAYS
      INTEGER IEXSPA(3)
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III = 1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS
      NEXSPA = 0
      N0SPA = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMXMAP(ISPA).EQ.2)THEN
            IEXSPA(1) = ISPA
            IEXSPA(2) = ISPA
            NEXSPA = 1
         ELSEIF(IMXMAP(ISPA).EQ.1)THEN
            NEXSPA = NEXSPA +1
            IEXSPA(NEXSPA) = ISPA
         ELSEIF(IMIMAP(ISPA).EQ.(-1))THEN
            IDEXSPA = ISPA
            N0SPA = N0SPA + 1
            ISPA_0(N0SPA) = ISPA
         ELSE
            N0SPA = N0SPA + 1
            ISPA_0(N0SPA) = ISPA
         ENDIF
      ENDDO   
      IEXSPA(3) = IEXSPA(1)

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO

         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,2,ISYMA)

! DOUBLE BETA AND DOUBLE ALPHA DEXCITATIONS
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
      DO 2000 ISPA = 1,N0SPA
         IDEXSPA2 = ISPA_0(ISPA)
         
         IF(IMXMAP(IDEXSPA2).GT.(-1))CYCLE
         IF(IDEXSPA2.LT.IDEXSPA) GOTO 20
! TAKES CARE OF CASE WHEN IDEXSPA2.GE.IDEXSPA
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA,IDEXSPA2,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA,IDEXSPA2,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

         IF(IDEXSPA2.EQ.IDEXSPA)CYCLE
 20      CONTINUE 
!TAKES CARE OF THE CASE WHEN IDEXSPA2.LT.IDEXSPA
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA2,IDEXSPA,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA2,IDEXSPA,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

 2000 CONTINUE 
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) -1

! DO ALPHA/BETA DEXCITATIONS SEPARATLY
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
      DO 4000 IEXIND = 1,NEXSPA
         IAEXSPA = IEXSPA(IEXIND)
         IBEXSPA = IEXSPA(IEXIND +1)

         DO 4010 IADEXIND = 1,N0SPA
            IADEXSPA = ISPA_0(IADEXIND)
            IF(IMXMAP(IADEXSPA).GT.(-1))CYCLE
      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IAEXSPA,IBEXSPA,IADEXSPA,IDEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)

 4010    CONTINUE 
         
         DO 4020 IBDEXIND = 1,N0SPA
            IBDEXSPA = ISPA_0(IBDEXIND)
            IF(IBDEXSPA.EQ.IDEXSPA)CYCLE
            IF(IMXMAP(IBDEXSPA).GT.(-1))CYCLE
      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IAEXSPA,IBEXSPA,IDEXSPA,IBDEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)

 4020    CONTINUE 
 4000 CONTINUE 
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) -1

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III=1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III=1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111    CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010 CONTINUE  
      CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN 
      END SUBROUTINE INTERNAL_TYPE_9
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_M6
      SUBROUTINE INTERNAL_TYPE_M6(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,
     $     IBCON1,IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $     NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,SI2,
     $     INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,
     $     IAELAC2,ISPA_0,LSPB,
     $     IMUL,ISYV,IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NSYM,IGBPT,IGAPT,NA,NB,NVAL,NX,ITGB,NCI,ISYV,ISTSYM,
     $     NPTST,ISYL
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER IABOX1(*),IBBOX1(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),NPTBST(*),NPTAST(*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),X(*),LGCOM(ITGB,*),LBNDET(NSPACE,*),LANDET(NSPACE,*),
     $     INPT(*),IMXMAP(*),IMIMAP(*),IAELAC(*),IAELAC2(*),IBELAC(*),
     $     IBELAC2(*),ISPA_0(*),IMUL(NSYM,*),IOB(*),ISYMB(*),
     $     LDISB(NSPACE,ITGB,*)
      DOUBLE PRECISION EPT0(*),EFCK(*),CI(NCI,*),SI2(*),EINT(*),
     $     COEFF(*),HPT(NPTST,*),HINT(NPTST,*)

! LOCAL VARIABLES
      INTEGER ISYA,ISYB,ISPA,IJK,IJL,ISPA2,IDEXSPA1,III,JJJ,NDEXSPA,
     $     IEXIND,IAEXSPA,IBEXSPA,IADEXSPA,IBDEXSPA,IBDEXIND,
     $     IADEXIND,NEXSPA,IDEXSPA2
      DOUBLE PRECISION E0AB,E0A      

! LOCAL ARRAYS
      INTEGER IEXSPA(3)
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III = 1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS
      NEXSPA = 0
      NDEXSPA = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMIMAP(ISPA).EQ.(-2))THEN
            IEXSPA(1) = ISPA
            IEXSPA(2) = ISPA
            NEXSPA = 1
         ELSEIF(IMIMAP(ISPA).EQ.(-1))THEN
            NEXSPA = NEXSPA +1
            IEXSPA(NEXSPA) = ISPA
         ELSE
            NDEXSPA = NDEXSPA + 1
            ISPA_0(NDEXSPA) = ISPA
         ENDIF
      ENDDO   
      IEXSPA(3) = IEXSPA(1)

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO

         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,2,ISYMA)

! DOUBLE BETA AND ALPHA DEXCITATIONS
      DO 2000 ISPA = 1,NDEXSPA
         IDEXSPA1 = ISPA_0(ISPA)
         IF(IMIMAP(IDEXSPA1).LT.(1))CYCLE
         IMIMAP(IDEXSPA1) = IMIMAP(IDEXSPA1) -1
         
         DO 2010 ISPA2 = ISPA,NDEXSPA
            IDEXSPA2 = ISPA_0(ISPA2)
            IF(IMIMAP(IDEXSPA2).LT.(1))CYCLE

      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA1,IDEXSPA2,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IDEXSPA1,IDEXSPA2,IEXSPA(1),IEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      
 2010    CONTINUE 
         IMIMAP(IDEXSPA1) = IMIMAP(IDEXSPA1) +1
 2000 CONTINUE 

! DO ALPHA/BETA DEXCITATION SEPARATLY
      DO 4000 IEXIND = 1,NEXSPA
         IAEXSPA = IEXSPA(IEXIND)
         IBEXSPA = IEXSPA(IEXIND +1)
         
         DO 4010 IADEXIND = 1,NDEXSPA
            IADEXSPA = ISPA_0(IADEXIND)
            IF(IMIMAP(IADEXSPA).LT.(1))CYCLE
            IMIMAP(IADEXSPA) = IMIMAP(IADEXSPA) -1
            
            DO 4020 IBDEXIND = 1,NDEXSPA
               IBDEXSPA = ISPA_0(IBDEXIND)
               IF(IMIMAP(IBDEXSPA).LT.(1))CYCLE

      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IADEXSPA,IBDEXSPA,IAEXSPA,IBEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)

 4020       CONTINUE 
            IMIMAP(IADEXSPA) = IMIMAP(IADEXSPA) +1
 4010    CONTINUE 
 4000 CONTINUE 

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III=1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III=1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111       CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010    CONTINUE  
         CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN 
      END SUBROUTINE INTERNAL_TYPE_M6
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_6
      SUBROUTINE INTERNAL_TYPE_6(EPT0,E0V,NSYM,IABOX1,IBBOX1,IACON1,
     $     IBCON1,IGBPT,IGAPT,NA,NB,NVAL,NPTBST,NAST,EFCK,IBCON2,IACON2,
     $     NX,X,ITGB,LGCOM,LBNDET,LDISB,LSPA,CI,SI2,
     $     INPT,HINT,HPT,NPTST,NCI,NPTAST,NBST,LANDET,COEFF,EINT,
     $     IMXMAP,IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,
     $     IMUL,ISYV,IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NSYM,IGBPT,IGAPT,NA,NB,NVAL,NX,ITGB,NCI,ISYV,ISTSYM,
     $     NPTST,ISYL
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER IABOX1(*),IBBOX1(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),NPTBST(*),NPTAST(*),NAST(*),NBST(*),LSPA(*),
     $     LSPB(*),LGCOM(ITGB,*),LDISB(NSYM,ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),INPT(*),X(*),IMXMAP(*),IMIMAP(*),IAELAC(*),
     $     IAELAC2(*),IBELAC(*),IBELAC2(*),ISPA_0(*),IMUL(NSYM,*),
     $     IOB(*),ISYMB(*)
      DOUBLE PRECISION EPT0(*),EFCK(*),CI(NCI,*),SI2(*),EINT(*),
     $     COEFF(*),HPT(NPTST,*),HINT(NPTST,*)

! LOCAL VARIABLES
      INTEGER ISYA,ISYB,ISPA,IJK,IJL,III,JJJ,ISPA2,IDEXSPA1,NDEXSPA,
     $     IEXIND,IAEXSPA,IBEXSPA,IADEXSPA,IBDEXSPA,IBDEXIND,IADEXIND,
     $     NEXSPA,IDEXSPA2
      DOUBLE PRECISION E0AB,E0A

! LOCAL ARRAYS
      INTEGER IEXSPA(3)
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III = 1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GERNERATE ELECTRON MAPS
      NEXSPA = 0
      NDEXSPA = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMXMAP(ISPA).EQ.2)THEN
            IEXSPA(1) = ISPA
            IEXSPA(2) = ISPA
            NEXSPA = 1
         ELSEIF(IMXMAP(ISPA).EQ.1)THEN
            NEXSPA = NEXSPA +1
            IEXSPA(NEXSPA) = ISPA
         ELSE
            NDEXSPA = NDEXSPA + 1
            ISPA_0(NDEXSPA) = ISPA
         ENDIF
      ENDDO   
      IEXSPA(3) = IEXSPA(1)

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

! GENERATE EXCITED ALPHA STRING
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO

! GENERATE EXCITED BETA STRING
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,2,ISYMA)

! DOUBLE PURE DEXCITATIONS
      DO 2000 ISPA = 1,NDEXSPA
         IDEXSPA1 = ISPA_0(ISPA)
         IF(IMXMAP(IDEXSPA1).GT.(-1))CYCLE
         IMXMAP(IDEXSPA1) = IMXMAP(IDEXSPA1) +1

         DO 2010 ISPA2 = ISPA,NDEXSPA
            IDEXSPA2 = ISPA_0(ISPA2)
            IF(IMXMAP(IDEXSPA2).GT.(-1))CYCLE
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA1,IDEXSPA2,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA1,IDEXSPA2,LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)

 2010       CONTINUE 
               IMXMAP(IDEXSPA1) = IMXMAP(IDEXSPA1) -1
 2000       CONTINUE 

! DO ALPHA/BETA EXCITATION SEPARATLY
      DO 4000 IEXIND = 1,NEXSPA
         IAEXSPA = IEXSPA(IEXIND)
         IBEXSPA = IEXSPA(IEXIND +1)

         DO 4010 IADEXIND = 1,NDEXSPA
            IADEXSPA = ISPA_0(IADEXIND)
            IF(IMXMAP(IADEXSPA).GT.(-1))CYCLE
            IMXMAP(IADEXSPA) = IMXMAP(IADEXSPA) +1

            DO 4020 IBDEXIND = 1,NDEXSPA
            IBDEXSPA = ISPA_0(IBDEXIND)
            IF(IMXMAP(IBDEXSPA).GT.(-1))CYCLE

      CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,IACON2,NA,
     $     NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,NCI,
     $     IAEXSPA,IBEXSPA,IADEXSPA,IBDEXSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)
          
 4020       CONTINUE 
            IMXMAP(IADEXSPA) = IMXMAP(IADEXSPA) -1
 4010    CONTINUE 
 4000 CONTINUE 

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III = 1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III = 1,NPTST
         EINT(III) = 0.0D+00
      ENDDO

!7777 RETURN
 1111    CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010 CONTINUE  

      CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN 
      END SUBROUTINE INTERNAL_TYPE_6
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_M3
      SUBROUTINE  INTERNAL_TYPE_M3(NPTBST,NPTAST,IBBOX1,IBCON1,IACON1,
     $     IGBPT,IGAPT,NA,NB,NAST,IABOX1,NVAL,SI1,SI2,INPT,E0V,EFCK,
     $     EPT0,LSPA,IBCON2,IACON2,LGCOM,LDISB,LBNDET,LANDET,X,NX,NSYM,
     $     ITGB,CI,NBST,NCI,NPTST,COEFF,EINT,HINT,IMXMAP,IMIMAP,
     $     IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,HPT,LSPB,IMUL,ISYV,IOB,
     $     ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IGBPT,IGAPT,NA,NB,NVAL,NX,NSYM,ITGB,NCI,NPTST,ISYV,
     $     ISTSYM
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER NPTBST(*),NPTAST(*),IBBOX1(*),IABOX1(*),NAST(*),NBST(*),
     $     INPT(*),LSPA(*),LSPB(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),LDISB(NSYM,ITGB,*),LANDET(NSPACE,*),LGCOM(ITGB,*),
     $     LBNDET(NSPACE,*),X(*),IMXMAP(*),IMIMAP(*),IBELAC(*),
     $     IBELAC2(*),IAELAC(*),IAELAC2(*),ISPA_0(*),IMUL(NSYM,*),
     $     IOB(*),ISYMB(*)
      DOUBLE PRECISION SI1(*),SI2(*),EFCK(*),EPT0(*),CI(NCI,*),EINT(*),
     $     COEFF(*),HINT(NPTST,*),HPT(NPTST,*)

! LOCAL VAIABLES
      INTEGER ISYL,ISYA,ISYB,KSYM,IJK,IEXSPA,III,IJL,ISPA,IELE,IA,IEN,
     $     IGA,IGB2,IGAP,IST,IPER,ISWAP,JA,KKJ,ISPA2,ISENDSPA,IRCVSPA,
     $     ORMAS_GET_GROUP,ORMAS_GET_STRPOS,IDEXSPA,ICOUNT,IGB,IGA2,JJJ,
     $     JPOSA2,JPOSA,JPOSB2,JPOSB,ITP0,IS1,IS2,IP1
      DOUBLE PRECISION E0A,E0AB,T

! LOCAL ARRAYS
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III =1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS
      ICOUNT = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMIMAP(ISPA).EQ.(-1)) THEN
            IDEXSPA = ISPA
         ELSE
            ICOUNT = ICOUNT + 1
            ISPA_0(ICOUNT) = ISPA
         ENDIF
      ENDDO   

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

!UPDATE IMIMAP/IMXMAP
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1

! LOOP OVER EXCITED CONFIGURATIONS
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO
         
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,1,ISYMA)

!SINGLE BETA DEXCITATIONS (ISPA.NE.IDEXSPA --> IDEXSPA) 
      DO 2000 IEXSPA = 1,NSPACE
         IF(IEXSPA.EQ.IDEXSPA) CYCLE
         IF(IMIMAP(IEXSPA).LT.1)CYCLE
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1
         IMIMAP(IEXSPA) = IMIMAP(IEXSPA) -1
         IMXMAP(IEXSPA) = IMXMAP(IEXSPA) -1

         DO 2010 IELE = IBELAC(IEXSPA) +1, IBELAC(IEXSPA +1)
            IA = IBCON1(IELE) +NVAL
            IS1 = IOB(IA)

            IST = MSTA(IDEXSPA)
            IEN = IBCON1(IBELAC(IDEXSPA) +1) -1
            IF(IBBOX1(IDEXSPA).EQ.0)IEN = MSTA(IDEXSPA +1) -1
            IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1

            DO 2020 IGAP = IBELAC(IDEXSPA) +1, IBELAC(IDEXSPA +1) +1
               DO 2030 KKJ = IST,IEN
                  JA = KKJ + NVAL
                  IS2 = IOB(JA)
                  IP1 = IMUL(IS1,IS2)
                     CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
                     IPER = ((-1)**ISWAP)
                     IF(IP1.NE.ISTSYM) GOTO 20

      IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB2,IGA).NE.1)GOTO 20
      JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA))         
      JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB2))         
      KSYM = ISYMB(JPOSB2+NBST(IGB2))
      ITP0 = LSPA(NAST(IGA) +JPOSA) +LDISB(KSYM,IGB2,IGA) +
     $     LSPB(JPOSB2+NBST(IGB2))

      CALL ME0AA1B(IA,JA,IBCON2,NB,IACON1,NA,NVAL,
     $     INPT,SI1,SI2,T)
      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 20   CONTINUE 
      IBELAC2(1) = 0
      DO ISPA = 1,NSPACE
        IBELAC2(ISPA + 1) = IBELAC2(ISPA) + IBBOX1(ISPA)
      ENDDO

! DOUBLE BETA DEXCITATIONS

! DEXCITATIONS BETWEEN SPACES OTHER THAN IEXSPA AND IDEXSPA
!LOOPS CAN BE UNROLLED TO GET RID OF MUCH OF THE LOGIC
      DO 4000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IEXSPA)CYCLE
         CALL BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,IBCON2,
     $       IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $       LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,NCI,
     $       ISENDSPA,ISENDSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
         IF(IMIMAP(ISENDSPA).LT.1)CYCLE
         IF(ISENDSPA.LT.IEXSPA)CYCLE
         DO 4010 ISPA2 = 1,NSPACE-1
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.ISENDSPA)CYCLE
            IF(IRCVSPA.EQ.IEXSPA)CYCLE
            IF(IMXMAP(IRCVSPA).GT.(-1))CYCLE
         CALL BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,IBCON2,
     $       IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $       LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,NCI,
     $       ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 4010    CONTINUE 
 4000 CONTINUE 

! DEXCITE FROM ALL (BUT IEXPSPA) TO IDEXSPA
!CAN UNROLL THE FOLLOWING TO GET RID OF MUCH OF THE LOGIC
      DO 5000 ISPA = 1,NSPACE
         IF(ISPA.EQ.IDEXSPA)GOTO 50
         IF(ISPA.LE.IEXSPA)CYCLE
         IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 50      CONTINUE 
         CALL BB_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IBELAC2,IABOX1,
     $        IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,
     $        IP1,ISYMB)
 5000 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL (BUT IDEXSPA)
! CAN UNROLL AND GET DET RID OF MUCH LOGIC
      DO 6000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IEXSPA)GOTO 60
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISENDSPA).GT.(-1))CYCLE
 60      CONTINUE 
      CALL BB_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IBELAC2,IABOX1,IBBOX1,
     $        IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISENDSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $        ISYMB)
 6000 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA
      CALL BB_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IBELAC2,
     $     IABOX1,IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,IMUL,
     $     IOB,ISYL,IP1,ISYMB)

! DEXCITE ALPHAS
!COULD UNROLL (I THINK) AND DECREASE LOGIC
      DO 6500 ISPA = 1,NSPACE
         DO 6510 ISPA2 = 1,NSPACE
            IF(ISPA2.EQ.ISPA)GOTO 65
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(ISPA2).GT.(-1))CYCLE
 65         CONTINUE 
            CALL BA_SHIFTS(IAELAC,IACON1,IACON2,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 6510 CONTINUE 
 6500 CONTINUE 

 2030          CONTINUE 
               IST = IBCON1(IGAP) +1 
               IEN = IBCON1(IGAP +1) -1
               IF(IGAP.EQ.IBELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 2020          CONTINUE 
               IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1
 2010       CONTINUE 
            IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
            IMIMAP(IEXSPA) = IMIMAP(IEXSPA) +1
            IMXMAP(IEXSPA) = IMXMAP(IEXSPA) +1
 2000    CONTINUE 


!SINGLE ALPHA DEXCITATIONS (ISPA.NE.IDEXSPA --> IDEXSPA) 
      DO 3000 IEXSPA = 1,NSPACE
         IF(IEXSPA.EQ.IDEXSPA) CYCLE
         IF(IMIMAP(IEXSPA).LT.1)CYCLE
         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
         IMIMAP(IEXSPA) = IMIMAP(IEXSPA) -1
         IMXMAP(IEXSPA) = IMXMAP(IEXSPA) -1

         DO 3010 IELE = IAELAC(IEXSPA) +1, IAELAC(IEXSPA +1)
            IA = IACON1(IELE) +NVAL
            IS1 = IOB(IA)

            IST = MSTA(IDEXSPA)
            IEN = IACON1(IAELAC(IDEXSPA) +1) -1
            IF(IABOX1(IDEXSPA).EQ.0)IEN = MSTA(IDEXSPA +1) -1
            IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1

            DO 3020 IGAP = IAELAC(IDEXSPA) +1, IAELAC(IDEXSPA +1) +1
               DO 3030 KKJ = IST,IEN
                  JA = KKJ + NVAL
                  IS2 = IOB(JA)
                  IP1 = IMUL(IS1,IS2)


      CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
      IPER = ((-1)**ISWAP)
      IF(IP1.NE.ISYL)GOTO 30
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB,IGA2).NE.1)GOTO 30

      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA2))         
      JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB))         
      KSYM = ISYMB(JPOSB+NBST(IGB))
      ITP0 = LSPA(NAST(IGA2) +JPOSA2) +LDISB(KSYM,IGB,IGA2) +
     $     LSPB(JPOSB+NBST(IGB))
      
      CALL ME0AA1B(IA,JA,IACON2,NA,IBCON1,NB,NVAL,
     $     INPT,SI1,SI2,T)

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 30            CONTINUE 
               IAELAC2(1) = 0
               DO ISPA = 1,NSPACE
                  IAELAC2(ISPA + 1) = IAELAC2(ISPA) + IABOX1(ISPA)
               ENDDO

! DOUBLE ALPHA DEXCITATIONS

! DEXCITATIONS BETWEEN SPACES OTHER THAN IEXSPA AND IPARTSPA
!LOOPS CAN BE UNROLLED TO GET RID OF MUCH OF THE LOGIC
      DO 7000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IEXSPA)CYCLE
         CALL AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,IPER,
     $        IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $        LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,
     $        NCI,ISENDSPA,ISENDSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
         IF(IMIMAP(ISENDSPA).LT.1)CYCLE
         IF(ISENDSPA.LT.IEXSPA)CYCLE
         DO 7010 ISPA2 = 1,NSPACE-1
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.ISENDSPA)CYCLE
            IF(IRCVSPA.EQ.IEXSPA)CYCLE
            IF(IMXMAP(IRCVSPA).GT.(-1))CYCLE
         CALL AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,IPER,
     $           IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $           LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,
     $           NCI,ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 7010    CONTINUE 
 7000 CONTINUE 

! DEXCITE FROM ALL (BUT IEXPSPA) TO IDEXSPA
!CAN UNROLL THE FOLLOWING TO GET RID OF MUCH OF THE LOGIC
      DO 8000 ISPA = 1,NSPACE
         IF(ISPA.EQ.IDEXSPA)GOTO 80
         IF(ISPA.LE.IEXSPA)CYCLE
         IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 80      CONTINUE 
         CALL AA_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IAELAC2,IABOX1,
     $        IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,
     $        IP1,ISYMB)
 8000 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL (BUT IDEXSPA)
!CAN UNROLL AND DECRESE LOGIC
      DO 9000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IEXSPA)GOTO 90
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISENDSPA).GT.(-1))CYCLE
 90      CONTINUE 
      CALL AA_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IAELAC2,IABOX1,IBBOX1,
     $        IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISENDSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $        ISYMB)
 9000 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA
      CALL AA_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IAELAC2,
     $     IABOX1,IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,
     $     IMUL,IOB,ISYL,IP1,ISYMB)

! BETA DEXCITATIONS
!COULD UNROLL (I THINK) AND DECREASE LOGIC
      DO 9500 ISPA = 1,NSPACE
         DO 9510 ISPA2 = 1,NSPACE
            IF(ISPA2.EQ.ISPA)GOTO 95
            IF(ISPA2.EQ.IDEXSPA)CYCLE
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(ISPA2).GT.(-1))CYCLE
 95         CONTINUE
            CALL AB_SHIFTS(IBELAC,IACON2,IBCON1,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 9510    CONTINUE 
 9500 CONTINUE 

 3030          CONTINUE 
               IST = IACON1(IGAP) +1 
               IEN = IACON1(IGAP +1) -1
               IF(IGAP.EQ.IAELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 3020          CONTINUE 
            IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
 3010    CONTINUE 
         IABOX1(IEXSPA) = IABOX1(IEXSPA) +1
         IMIMAP(IEXSPA) = IMIMAP(IEXSPA) +1
         IMXMAP(IEXSPA) = IMXMAP(IEXSPA) +1
 3000 CONTINUE 

! CAN UNROLL INTO TWO LOOPS AND DECREASE MUCH OF LOGIC
      DO 100 ISPA = 1,NSPACE-1
         IEXSPA = ISPA_0(ISPA)
         IF(IMIMAP(IEXSPA).LT.1)CYCLE

         DO 110 ISPA2 = 1,NSPACE-1
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.IEXSPA)CYCLE
            IF(IMIMAP(IRCVSPA).EQ.0.AND.IMXMAP(IRCVSPA).LT.0)GOTO 101
            IF(IMXMAP(IRCVSPA).NE.0.OR.IMIMAP(IRCVSPA).NE.0)CYCLE
 101        CONTINUE 
            CALL BETA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
            CALL ALPHA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
 110        CONTINUE 
 100     CONTINUE 

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III = 1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ = 1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III = 1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111      CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010   CONTINUE  
        CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN
      END SUBROUTINE INTERNAL_TYPE_M3
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AA_ALL_BUT_IEXSPA_TO_IDEXSPA
      SUBROUTINE AA_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IAELAC2,IABOX1,
     $     IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,
     $     LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,NSYM,
     $     ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $     ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IDEXSPA,IPER,IA,JA,NVAL,NA,NB,NX,NPTST,NSYM,ITGB,NCI,
     $     ISYL,IP1,ISPA

! PASSED IN ARRAYS
      INTEGER IAELAC2(*),IABOX1(*),IBBOX1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),LGCOM(ITGB,*),LANDET(NSPACE,*),LBNDET(NSPACE,*),
     $     X(*),LSPA(*),LSPB(*),NAST(*),NBST(*),LDISB(NSYM,ITGB,*),
     $     INPT(*),IMUL(NSYM,*),IOB(*),ISYMB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

! LOCAL VARIABLES
      INTEGER IELE2,IA2,IST2,IEN2,IGAP2,KKJ2,JA2,IPER2,IPERT,IGB,IGB2,
     $     JPOSB,JPOSB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,ITP0,MA,MI,
     $     I1J1,I2J2,I1J2,I2J1,INT1,INT2,III,KSYM,ISWAP,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T      

!DEXCITE FROM ALL BUT IEXSPA TO IDEXSPA
! MODIFY IABOX1 TO REFECLT THE DYNAMIC ELECTRON
      IABOX1(ISPA) = IABOX1(ISPA) -1

      DO 1000 IELE2 = IAELAC2(ISPA) +1,IAELAC2(ISPA +1)
         IA2 = IACON2(IELE2) + NVAL
         IF(IA2.EQ.JA)CYCLE
         IS3 = IOB(IA2)
         IP2 = IMUL(IP1,IS3)
         
         IST2 = MSTA(IDEXSPA)
         IEN2 = IACON2(IAELAC2(IDEXSPA) +1) -1
         
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1
         
         DO 1010 IGAP2 = IAELAC2(IDEXSPA) + 1,IAELAC2(IDEXSPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IF(JA2.LT.JA) CYCLE
               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE

               CALL REDE00(IACON2,IBCON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2

               IGB2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB,IGB2).NE.1)CYCLE
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGB2))         
               JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB))         
               KSYM = ISYMB(JPOSB+NBST(IGB))
               ITP0 =LSPA(NAST(IGB2)+JPOSB2)+LDISB(KSYM,IGB,IGB2)+
     $              LSPB(JPOSB+NBST(IGB))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
               
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            IST2 = IACON2(IGAP2) +1
            IEN2 = IACON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IAELAC2(IDEXSPA +1)) IEN2 = MSTA(IDEXSPA +1) -1
 1010    CONTINUE 
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
 1000 CONTINUE 
      
! PUT DYNAMIC ELECTRON BACK INTO IABOX
      IABOX1(ISPA) = IABOX1(ISPA) +1
      
      RETURN
      END SUBROUTINE AA_ALL_BUT_IEXSPA_TO_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BB_ALL_BUT_IEXSPA_TO_IDEXSPA
      SUBROUTINE BB_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IBELAC2,IABOX1,
     $     IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,
     $     LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,NSYM,
     $     ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

!PASSED IN VARIABLES
      INTEGER ISPA,IDEXSPA,IA,JA,NVAL,IPER,IP1,NX,ITGB,NPTST,NCI,
     $     NA,NB,NSYM,ISYL

!PASSED IN ARRAYS
      INTEGER IABOX1(*),IBBOX1(*),IBELAC2(*),ISYMB(*),IACON1(*),
     $     IACON2(*),IBCON2(*),LGCOM(ITGB,*),X(*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),INPT(*),
     $     IMUL(NSYM,*),IOB(*),LDISB(NSYM,ITGB,*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

!LOCAL VARIABLES
      INTEGER IELE2,IA2,IST2,IEN2,IGAP2,KKJ2,JA2,IPER2,IPERT,IGA,IGA2,
     $     JPOSA,JPOSA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,ITP0,MA,MI,
     $     I1J1,I2J2,I1J2,I2J1,INT1,INT2,III,KSYM,ISWAP,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

! DEXCITE FROM ALL SPACES (EXCEPT IEXSPA) TO IDEXSPA, 
!    MODIFY IBBOX1 TO REFLECT THIS
      IBBOX1(ISPA) = IBBOX1(ISPA) -1

      DO 1000 IELE2 = IBELAC2(ISPA) +1,IBELAC2(ISPA +1)
         IA2 = IBCON2(IELE2) + NVAL
         IS3 = IOB(IA2)
         IF(IA2.EQ.JA)CYCLE
         IP2 = IMUL(IP1,IS3)

         IST2 = MSTA(IDEXSPA)
         IEN2 = IBCON2(IBELAC2(IDEXSPA) +1) -1
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1
         
         DO 1010 IGAP2 = IBELAC2(IDEXSPA) + 1,IBELAC2(IDEXSPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
                  
               IF(JA2.LT.JA) CYCLE
               CALL REDE00(IBCON2,IACON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGA2,IGA).NE.1)CYCLE
               JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA))         
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGA2))         
               KSYM = ISYMB(JPOSA2+NBST(IGA2))
               ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGA2,IGA)+
     $              LSPB(JPOSA2+NBST(IGA2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
               
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            
            IST2 = IBCON2(IGAP2) +1
            IEN2 = IBCON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IBELAC2(IDEXSPA +1)) IEN2 = MSTA(IDEXSPA +1) -1

 1010       CONTINUE 
            IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1

 1000    CONTINUE 
! RESET IBBOX1
         IBBOX1(ISPA) = IBBOX1(ISPA) +1

      RETURN
      END SUBROUTINE BB_ALL_BUT_IEXSPA_TO_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_3
      SUBROUTINE  INTERNAL_TYPE_3(NPTBST,NPTAST,IBBOX1,IBCON1,IACON1,
     $     IGBPT,IGAPT,NA,NB,NAST,IABOX1,NVAL,SI1,SI2,INPT,E0V,EFCK,
     $     EPT0,LSPA,IBCON2,IACON2,LGCOM,LDISB,LBNDET,LANDET,X,NX,NSYM,
     $     ITGB,CI,NBST,NCI,NPTST,COEFF,EINT,HINT,IMXMAP,IMIMAP,
     $     IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,HPT,LSPB,IMUL,ISYV,IOB,
     $     ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IGBPT,IGAPT,NA,NB,NVAL,NX,NSYM,ITGB,NCI,NPTST,ISYV,
     $     ISTSYM
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER NPTBST(*),NPTAST(*),IBBOX1(*),IABOX1(*),IACON1(*),
     $     IACON2(*),IBCON1(*),IBCON2(*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),INPT(*),LGCOM(ITGB,*),LDISB(NSYM,ITGB,*),X(*),
     $     IMXMAP(*),IMIMAP(*),IBELAC(*),IBELAC2(*),IAELAC(*),
     $     IAELAC2(*),ISPA_0(*),IMUL(NSYM,*),IOB(*),ISYMB(*),
     $     LANDET(NSPACE,*),LBNDET(NSPACE,*)

      DOUBLE PRECISION SI1(*),SI2(*),EFCK(*),EPT0(*),CI(NCI,*),
     $     EINT(*),COEFF(*),HINT(NPTST,*),HPT(NPTST,*)

! LOCAL VARIABLES
      INTEGER ISYL,ISYA,ISYB,KSYM,IJK,IEXSPA,III,IJL,ISPA,IELE,IA,
     $     IEN,IGA,IGB2,IGAP,IST,IPER,ISWAP,JA,KKJ,IDEXSPA,ICOUNT,IGB,
     $     IGA2,ISPA2,ISENDSPA,IRCVSPA,JJJ,JPOSA2,JPOSA,JPOSB2,JPOSB,
     $     ITP0,IS1,IS2,IP1,ORMAS_GET_GROUP,ORMAS_GET_STRPOS
      DOUBLE PRECISION E0AB,E0A,T

! LOCAL ARRAYS
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III =1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS
      ICOUNT = 0
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMXMAP(ISPA).EQ.1)THEN 
            IEXSPA = ISPA
         ELSE
            ICOUNT = ICOUNT +1
            ISPA_0(ICOUNT) = ISPA
         ENDIF
      ENDDO   

! GENERATE BETA AND ALPHA ELECTRON ACCUMULATION VECTORS
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

!UPDATE IMIMAP/IMXMAP
      IMXMAP(IEXSPA) = IMXMAP(IEXSPA) -1
      IMIMAP(IEXSPA) = IMIMAP(IEXSPA) -1

! LOOP OVER EXCITED CONFIGURATIONS
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO
         
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)                       
         DO 1010 IJL = 1,NPTBST(IGBPT)
               E0AB = E0A
               ISYB = ISYV
               DO III = 1,NB
                  E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
                  ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
               ENDDO
               ISYL = IMUL(ISYA,ISYB)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,1,ISYMA)

!SINGLE BETA DEXCITATIONS
            DO 2000 IELE = IBELAC(IEXSPA) +1,IBELAC(IEXSPA +1)
               IA = IBCON1(IELE) + NVAL
               IS1 = IOB(IA)
               IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1

               DO 2010 IDEXSPA = 1,NSPACE

                  IF(IMXMAP(IDEXSPA).EQ.0) CYCLE
                  IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1
                  IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1

                  IST = MSTA(IDEXSPA)
                  IEN = IBCON1(IBELAC(IDEXSPA) +1) -1
                  IF(IBBOX1(IDEXSPA).EQ.0)IEN =MSTA(IDEXSPA +1) -1

                  IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1

                  DO 2020 IGAP =IBELAC(IDEXSPA) +1,IBELAC(IDEXSPA +1) +1
                     DO 2030 KKJ = IST,IEN
                        JA = KKJ + NVAL
                        IS2 = IOB(JA)
                        IP1 = IMUL(IS1,IS2)
                     CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
                     IPER = ((-1)**ISWAP)
                     IF(IP1.NE.ISYL)GOTO 20

      IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB2,IGA).NE.1)GOTO 20
      JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA))         
      JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB2))         
      KSYM = ISYMB(JPOSB2+NBST(IGB2))
      ITP0 = LSPA(NAST(IGA) +JPOSA) +LDISB(KSYM,IGB2,IGA) +
     $     LSPB(JPOSB2+NBST(IGB2))

      CALL ME0AA1B(IA,JA,IBCON2,NB,IACON1,NA,NVAL,
     $     INPT,SI1,SI2,T)
      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 20   CONTINUE 

      IBELAC2(1) = 0
      DO ISPA = 1,NSPACE
         IBELAC2(ISPA +1) = IBELAC2(ISPA) + IBBOX1(ISPA)
      ENDDO

! DOUBLE BETA DEXCIATIONS (INCLUDE SINGLES ABOVE)

! DEXCITE BETWEEN SPACES OTHER THAN IEXSPA AND IDEXSPA
      DO 4000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IDEXSPA)CYCLE
         CALL BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,
     $        IBCON2,IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,
     $        LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISENDSPA,ISENDSPA,LSPB,NBST,IMUL,IOB,
     $        ISYL,IP1,ISYMB)
         IF(IMIMAP(ISENDSPA).LT.1)CYCLE
         DO 4010 ISPA2 = IDEXSPA+1,NSPACE
            IF(ISPA2.EQ.ISENDSPA)CYCLE
            IF(IMXMAP(ISPA2).GT.(-1))CYCLE
            CALL BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,
     $           IBCON2,IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,
     $           LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $           ITGB,NSYM,NCI,ISENDSPA,ISPA2,LSPB,NBST,IMUL,IOB,
     $           ISYL,IP1,ISYMB)
 4010 CONTINUE 
 4000 CONTINUE 

! DEXCITE FROM ALL (BUT IEXPSPA) TO IDEXSPA
      DO 4500 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IDEXSPA)GOTO 45
         IF(IMIMAP(ISENDSPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 45      CONTINUE 
         CALL BB_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IBELAC2,IABOX1,
     $        IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISENDSPA,LSPB,NBST,IMUL,IOB,
     $        ISYL,IP1,ISYMB)
 4500 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL (BUT IDEXSPA)
!CAN UNROLL CAN DO AN EXTRS CALL TO REDUCE LOGIC
      DO 6000 ISPA = 1,NSPACE
         IF(ISPA.EQ.IEXSPA)GOTO 60
!OLD DOES NOT WORK          IF(ISPA.EQ.IDEXSPA)CYCLE          
         IF(ISPA.LE.IDEXSPA)CYCLE          
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISPA).GT.(-1))CYCLE
 60      CONTINUE 
      CALL BB_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IBELAC2,IABOX1,IBBOX1,
     $        IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 6000 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA
      CALL BB_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IBELAC2,
     $     IABOX1,IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,IMUL,
     $     IOB,ISYL,IP1,ISYMB)

! DEXCITE ALPHAS
      DO 7000 ISPA = 1,NSPACE
         DO 7010 ISPA2 = 1,NSPACE
            IF(ISPA2.EQ.ISPA)GOTO 70
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(ISPA2).GT.(-1))CYCLE
 70         CONTINUE 
            CALL BA_SHIFTS(IAELAC,IACON1,IACON2,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 7010 CONTINUE 
 7000 CONTINUE 

 2030                CONTINUE 
                  IST = IBCON1(IGAP) +1 
                  IEN = IBCON1(IGAP +1) -1
                  IF(IGAP.EQ.IBELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 2020             CONTINUE 
                  IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1
                  IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) -1
                  IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) -1
 2010          CONTINUE             
               IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
 2000       CONTINUE 

! NOW FOR SINGLE ALPHA DEXCIATIONS
      DO 3000 IELE = IAELAC(IEXSPA) +1,IAELAC(IEXSPA +1)
         IA = IACON1(IELE) + NVAL
         IS1 = IOB(IA)
         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
         
         DO 3010 IDEXSPA = 1,NSPACE
            
            IF(IMXMAP(IDEXSPA).EQ.0) CYCLE
            IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1
            IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
            
            IST = MSTA(IDEXSPA)
            IEN = IACON1(IAELAC(IDEXSPA) +1) -1
            IF(IABOX1(IDEXSPA).EQ.0)IEN =MSTA(IDEXSPA +1) -1

            IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1
            
            DO 3020 IGAP =IAELAC(IDEXSPA) +1,IAELAC(IDEXSPA +1) +1
               DO 3030 KKJ = IST,IEN
                  JA = KKJ + NVAL
                  IS2 = IOB(JA)
                  IP1 = IMUL(IS1,IS2)
                  CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
                  IPER = ((-1)**ISWAP)
                  IF(IP1.NE.ISYL)GOTO 30
                  IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
                  IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
                  IF(LGCOM(IGB,IGA2).NE.1)GOTO 30

      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA2))         
      JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB))         
      KSYM = ISYMB(JPOSB+NBST(IGB))
      ITP0 = LSPA(NAST(IGA2) +JPOSA2) +LDISB(KSYM,IGB,IGA2) +
     $     LSPB(JPOSB+NBST(IGB))
      
      CALL ME0AA1B(IA,JA,IACON2,NA,IBCON1,NB,NVAL,
     $     INPT,SI1,SI2,T)

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 30   CONTINUE 
                  
      IAELAC2(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC2(ISPA +1) = IAELAC2(ISPA) + IABOX1(ISPA)
      ENDDO

! DOUBLE ALPHA DEXCIATIONS (INCLUDE SINGLES ABOVE)

! DEXCITE BETWEEN/WITHIN SPACES OTHER THAN IEXSPA AND IDEXSPA
! IMPORTANT:  ISPA.GT.IDEXSPA  !OR!  ISPA.EQ.ISPA2
!CAN UNROLL LOOP TO REDUCE LOGIC
      DO 5000 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IDEXSPA)CYCLE
         CALL AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,IPER,
     $        IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $        LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,
     $        NCI,ISENDSPA,ISENDSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
         IF(IMIMAP(ISENDSPA).LT.1)CYCLE
         DO 5010 ISPA2 = IDEXSPA+1,NSPACE
            IF(ISPA2.EQ.ISENDSPA)CYCLE
            IF(IMXMAP(ISPA2).GT.(-1))CYCLE
            CALL AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,
     $           IPER,IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,
     $           LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $           ITGB,NSYM,NCI,ISENDSPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,
     $           IP1,ISYMB)           
 5010    CONTINUE 
 5000 CONTINUE 

! DEXCITE FROM ALL (BUT IEXPSPA) TO IDEXSPA
      DO 5500 ISPA = 1,NSPACE-1
         ISENDSPA = ISPA_0(ISPA)
         IF(ISENDSPA.EQ.IDEXSPA)GOTO 55
         IF(IMIMAP(ISENDSPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 55      CONTINUE 
         CALL AA_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IAELAC2,IABOX1,
     $        IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISENDSPA,LSPB,NBST,IMUL,IOB,
     $        ISYL,IP1,ISYMB)
 5500 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL (BUT IDEXSPA)
! CAN UNROLL AND DO AN EXTRA CALL TO GET RID OF LOGIC
      DO 9000 ISPA = 1,NSPACE
         IF(ISPA.EQ.IEXSPA)GOTO 90
         IF(ISPA.LE.IDEXSPA)CYCLE          
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISPA).GT.(-1))CYCLE
 90      CONTINUE 
         CALL AA_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IAELAC2,IABOX1,IBBOX1,
     $        IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
 9000 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA
      CALL AA_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IAELAC2,
     $     IABOX1,IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,IMUL,
     $     IOB,ISYL,IP1,ISYMB)

! DEXCITE BETAS
!COULD UNROLL PART OF FOLLOWING AND DECREASE LOGIC
      DO 8000 ISPA = 1,NSPACE
         CALL AB_SHIFTS(IBELAC,IACON2,IBCON1,IBCON2,IPER,IABOX1,IBBOX1,
     $        IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $        NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,NSYM,NCI,
     $        ISPA,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
         IF(ISPA.EQ.IEXSPA)CYCLE
         DO 8010 ISPA2 = 1,NSPACE-1
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.ISPA)CYCLE
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(IRCVSPA).GT.(-1))CYCLE
 80         CONTINUE
            CALL AB_SHIFTS(IBELAC,IACON2,IBCON1,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $           ISYMB)
 8010    CONTINUE 
 8000 CONTINUE 

 3030          CONTINUE 
               IST = IACON1(IGAP) +1 
               IEN = IACON1(IGAP +1) -1
               IF(IGAP.EQ.IAELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 3020       CONTINUE 
            IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) -1
            IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) -1
            IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
 3010    CONTINUE             
         IABOX1(IEXSPA) = IABOX1(IEXSPA) +1
 3000 CONTINUE 

      DO 100 ISPA = 1,NSPACE-1
         IDEXSPA = ISPA_0(ISPA)
         
         DO 110 ISPA2 = 1,NSPACE-1
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.IDEXSPA)CYCLE
            IF(IMXMAP(IRCVSPA).NE.0)CYCLE

             CALL BETA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
            CALL ALPHA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
 110     CONTINUE 
 100  CONTINUE 

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO


      DO III=1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III=1,NPTST
         EINT(III) = 0.0D+00
      ENDDO

!7777 RETURN
 1111     CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010 CONTINUE  
      CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN
      END SUBROUTINE INTERNAL_TYPE_3
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BA_SHIFTS
      SUBROUTINE BA_SHIFTS(IAELAC,IACON1,IACON2,IBCON2,IPER,IABOX1,
     $     IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,NSYM,NCI,ISPA,
     $     ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IPER,IA,JA,NA,NB,NVAL,NX,ITGB,NSYM,NCI,ISPA,ISPA2,
     $     ISYL,IP1,NPTST
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),EINT(*),SI2(*)

! PASSED IN ARRAYS
      INTEGER IAELAC(*),IACON1(*),IACON2(*),IBCON2(*),IABOX1(*),
     $     IBBOX1(*),LANDET(NSPACE,*),LBNDET(NSPACE,*),
     $     LDISB(NSYM,ITGB,*),INPT(*),LSPA(*),NAST(*),LSPB(*),NBST(*),
     $     IMUL(NSYM,*),IOB(*),X(*),LGCOM(ITGB,*),ISYMB(*)

! LOCAL VARIABLES
      INTEGER IA2,JA2,IST2,IEN2,IPER2,IPERT,IELE2,IGAP2,KKJ2,ISWAP,IGA2,
     $     IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,KSYM,III,MA,MI,I1J1,
     $     I2J2,INT1,ITP0,JPOSA2,JPOSB2,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM ISPA -> ISPA2
      DO 1000 IELE2 = IAELAC(ISPA) +1,IAELAC(ISPA +1)
         IA2 = IACON1(IELE2) + NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IP1,IS3)
         
         IST2 = MSTA(ISPA2)
         IEN2 = IACON1(IAELAC(ISPA2) +1) -1
         IF(IABOX1(ISPA2).EQ.0) IEN2 = MSTA(ISPA2 +1) -1
         IABOX1(ISPA) = IABOX1(ISPA) -1
         IABOX1(ISPA2) = IABOX1(ISPA2) +1
         
         DO 1010 IGAP2 = IAELAC(ISPA2) +1,IAELAC(ISPA2 +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IACON1,IACON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2

               IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB2,IGA2).NE.1)CYCLE
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))         
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB2))         
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB2,IGA2)+
     $              LSPB(JPOSB2+NBST(IGB2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI               
               T = SI2(INT1)
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            IST2 = IACON1(IGAP2) +1
            IEN2 = IACON1(IGAP2 +1) -1
            IF(IGAP2.EQ.IAELAC(ISPA2 +1))IEN2 =MSTA(ISPA2 +1)-1
 1010    CONTINUE 
         IABOX1(ISPA2) = IABOX1(ISPA2) -1
         IABOX1(ISPA) = IABOX1(ISPA) +1
 1000 CONTINUE 
      
      RETURN
      END SUBROUTINE BA_SHIFTS
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AB_SHIFTS
      SUBROUTINE AB_SHIFTS(IBELAC,IACON2,IBCON1,IBCON2,IPER,IABOX1,
     $     IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,NAST,
     $     LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,NSYM,NCI,
     $     ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IPER,IA,JA,NA,NB,NVAL,NX,ITGB,NSYM,NCI,ISPA,ISPA2,
     $     ISYL,IP1,NPTST

! PASSED IN ARRAYS
      INTEGER IBELAC(*),IACON2(*),IBCON1(*),IBCON2(*),IABOX1(*),
     $     IBBOX1(*),LANDET(NSPACE,*),LBNDET(NSPACE,*),LSPA(*),LSPB(*),
     $     NAST(*),NBST(*),LDISB(NSYM,ITGB,*),INPT(*),LGCOM(ITGB,*),
     $     IOB(*),IMUL(NSYM,*),ISYMB(*),X(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),EINT(*),SI2(*)

! LOCAL VAIABLES
      INTEGER IA2,JA2,IST2,IEN2,IPER2,IPERT,IELE2,IGAP2,KKJ2,ISWAP,IGA2,
     $     IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,KSYM,III,MA,MI,I1J1,
     $     I2J2,INT1,ITP0,JPOSA2,JPOSB2,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM ISPA -> ISPA2
      DO 1000 IELE2 = IBELAC(ISPA) +1,IBELAC(ISPA +1)
         IA2 = IBCON1(IELE2) + NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IP1,IS3)

         IST2 = MSTA(ISPA2)
         IEN2 = IBCON1(IBELAC(ISPA2) +1) -1
         IF(IBBOX1(ISPA2).EQ.0) IEN2 = MSTA(ISPA2 +1) -1
         IBBOX1(ISPA) = IBBOX1(ISPA) -1
         IBBOX1(ISPA2) = IBBOX1(ISPA2) +1
         
         DO 1010 IGAP2 = IBELAC(ISPA2) +1,IBELAC(ISPA2 +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
               CALL REDE00(IBCON1,IBCON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB2,IGA2).NE.1)CYCLE
               
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))         
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB2))         
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB2,IGA2)+
     $              LSPB(JPOSB2+NBST(IGB2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI               
               T = SI2(INT1)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            IST2 = IBCON1(IGAP2) +1
            IEN2 = IBCON1(IGAP2 +1) -1
            IF(IGAP2.EQ.IBELAC(ISPA2 +1))IEN2 =MSTA(ISPA2 +1)-1
 1010    CONTINUE 
         IBBOX1(ISPA2) = IBBOX1(ISPA2) -1
         IBBOX1(ISPA) = IBBOX1(ISPA) +1
 1000 CONTINUE 

      RETURN
      END SUBROUTINE AB_SHIFTS
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AA_ALL_SPECTATOR
      SUBROUTINE AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,
     $     IPER,IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,
     $     NCI,ISHFSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

!PASSED IN VARIABLES
      INTEGER IPER,NA,NB,IA,JA,NVAL,NX,NPTST,ITGB,NSYM,NCI,IP1,
     $     ISHFSPA,IRCVSPA,ISYL

!PASSED IN ARRAYS
      INTEGER IAELAC2(*),IABOX1(*),IBBOX1(*),IACON2(*),IBCON1(*),IOB(*),
     $     IBCON2(*),LGCOM(ITGB,*),X(*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),
     $     LDISB(NSYM,ITGB,*),INPT(*),IMUL(NSYM,*),ISYMB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

! LOCAL VARIABLES
      INTEGER IELE2,IA2,IST2,IEN2,IGAP2,KKJ2,JA2,ISWAP,IPER2,IPERT,IGB,
     $     IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSB,JPOSB2,ITP0,MA,
     $     MI,I1J1,I2J2,INT1,I1J2,I2J1,INT2,KSYM,III,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!EXCITE ELECTRON IN/BETWEEN SUBSPACES
      DO 1000 IELE2 = IAELAC2(ISHFSPA) +1, IAELAC2(ISHFSPA +1)
         IA2 = IACON2(IELE2) + NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)
         
         IST2 = MSTA(IRCVSPA)
         IEN2 = IACON2(IAELAC2(IRCVSPA) +1) -1
         IF(IABOX1(IRCVSPA).EQ.0) IEN2 = MSTA(IRCVSPA +1) -1
         
         IABOX1(ISHFSPA) = IABOX1(ISHFSPA) -1         
         IABOX1(IRCVSPA) = IABOX1(IRCVSPA) +1

         DO 1010 IGAP2 = IAELAC2(IRCVSPA) +1,IAELAC2(IRCVSPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE
               CALL REDE00(IACON2,IBCON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGB2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB,IGB2).NE.1)CYCLE
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGB2))         
               JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB))         
               KSYM = ISYMB(JPOSB+NBST(IGB))
               ITP0 =LSPA(NAST(IGB2)+JPOSB2)+LDISB(KSYM,IGB,IGB2)+
     $              LSPB(JPOSB+NBST(IGB))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI

               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)

               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO

 1020          CONTINUE 
            IST2 = IACON2(IGAP2) +1
            IEN2 = IACON2(IGAP2 + 1) -1
            IF(IGAP2.EQ.IAELAC2(IRCVSPA + 1)) IEN2 = MSTA(IRCVSPA +1) -1
 1010       CONTINUE 
         IABOX1(IRCVSPA) = IABOX1(IRCVSPA) -1
         IABOX1(ISHFSPA) = IABOX1(ISHFSPA) +1
 1000 CONTINUE 
      
      RETURN
      END SUBROUTINE AA_ALL_SPECTATOR
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BB_ALL_SPECTATOR
      SUBROUTINE BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,IBCON2,
     $     IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,NCI,
     $     ISHFSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

!PASSED IN VAIABLES
      INTEGER IPER,NA,NB,IA,JA,NVAL,NX,ITGB,NSYM,NCI,ISHFSPA,
     $     IRCVSPA,ISYL,IP1,NPTST

!PASSED IN ARRAYS
      INTEGER IACON1(*),IACON2(*),IBCON2(*),IBELAC2(*),ISYMB(*),
     $     IABOX1(*),IBBOX1(*),LGCOM(ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),X(*),LSPA(*),LSPB(*),NAST(*),NBST(*),
     $     INPT(*),LDISB(NSYM,ITGB,*),IMUL(NSYM,*),IOB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

!LOCAL VARIABLES
      INTEGER IELE2,IA2,IST2,IEN2,IGAP2,KKJ2,JA2,ISWAP,IPER2,IPERT,IGA,
     $     IGA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSA,JPOSA2,KSYM,ITP0,
     $     MA,MI,I1J1,I1J2,I2J1,I2J2,INT1,INT2,III,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!EXCITE ELECTRON IN/BETWEEN SUBSPACES
      DO 4000 IELE2 = IBELAC2(ISHFSPA) +1, IBELAC2(ISHFSPA +1)
         IA2 = IBCON2(IELE2) + NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)
         
         IST2 = MSTA(IRCVSPA)
         IEN2 = IBCON2(IBELAC2(IRCVSPA) +1) -1
         IF(IBBOX1(IRCVSPA).EQ.0) IEN2 = MSTA(IRCVSPA +1) -1
         IBBOX1(ISHFSPA) = IBBOX1(ISHFSPA) -1         
         IBBOX1(IRCVSPA) = IBBOX1(IRCVSPA) +1

         DO 4010 IGAP2 = IBELAC2(IRCVSPA) +1,IBELAC2(IRCVSPA +1) +1
            DO 4020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IBCON2,IACON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2

      IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGA2,IGA).NE.1)CYCLE
      JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA))         
      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGA2))         
      KSYM = ISYMB(JPOSA2+NBST(IGA2))
      ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGA2,IGA)+
     $     LSPB(JPOSA2+NBST(IGA2))

      MA = MAX(IA,JA)
      MI = MIN(IA,JA)
      I1J1 = INPT(MA) + MI
      MA = MAX(IA2,JA2)
      MI = MIN(IA2,JA2)
      I2J2 = INPT(MA) + MI
      MA = MAX(I1J1,I2J2)
      MI = MIN(I1J1,I2J2)
      INT1 = INPT(MA) + MI

      MA = MAX(IA,JA2)
      MI = MIN(IA,JA2)
      I1J2 = INPT(MA) + MI
      MA = MAX(IA2,JA)
      MI = MIN(IA2,JA)
      I2J1 = INPT(MA) + MI
      MA = MAX(I1J2,I2J1)
      MI = MIN(I1J2,I2J1)
      INT2 = INPT(MA) + MI
      T = SI2(INT1) - SI2(INT2)

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPERT
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 4020       CONTINUE 
            IST2 = IBCON2(IGAP2) +1
            IEN2 = IBCON2(IGAP2 + 1) -1
            IF(IGAP2.EQ.IBELAC2(IRCVSPA + 1)) IEN2 = MSTA(IRCVSPA +1) -1
 4010    CONTINUE 
         IBBOX1(IRCVSPA) = IBBOX1(IRCVSPA) -1
         IBBOX1(ISHFSPA) = IBBOX1(ISHFSPA) +1
 4000 CONTINUE 

      RETURN
      END SUBROUTINE BB_ALL_SPECTATOR
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_4
      SUBROUTINE INTERNAL_TYPE_4(IABOX1,IBBOX1,E0V,EPT0,IACON1,IBCON1,
     $     NA,NB,NPTAST,NPTBST,IGAPT,IGBPT,EFCK,NVAL,IACON2,IBCON2,X,NX,
     $     CI,LANDET,LBNDET,LDISB,LGCOM,NAST,NSYM,ITGB,LSPA,SI1,
     $     SI2,INPT,NCI,NPTST,HPT,EINT,COEFF,NBST,HINT,IMXMAP,
     $     IMIMAP,IBELAC,IBELAC2,IAELAC,IAELAC2,ISPA_0,LSPB,IMUL,ISYV,
     $     IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VAIABLES
      INTEGER NCI,NPTST,ISYV,ISTSYM,NA,NB,NVAL,IGAPT,IGBPT,ITGB,
     $     NSYM,NX
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER NBST(*),ISYMB(*),IMXMAP(NSPACE),IMIMAP(NSPACE),
     $     IAELAC(NSPACE+1),IBELAC(NSPACE+1),IAELAC2(NSPACE+1),
     $     IBELAC2(NSPACE+1),ISPA_0(NSPACE),IMUL(NSYM,NSYM),IOB(*),
     $     IABOX1(*),IBBOX1(*),IACON1(*),IBCON1(*),IACON2(*),IBCON2(*),
     $     NPTAST(*),NPTBST(*),X(*),LANDET(NSPACE,*),LBNDET(NSPACE,*),
     $     LDISB(NSYM,ITGB,*),LGCOM(ITGB,*),NAST(*),LSPA(*),INPT(*),
     $     LSPB(*)
      DOUBLE PRECISION HPT(NPTST,NPTST),COEFF(NPTST),CI(NCI,NPTST),
     $     EPT0(NPTST),HINT(NPTST,NPTST),EINT(NPTST),SI1(*),SI2(*),
     $     EFCK(*)

! LOCAL VAIABLES
      DOUBLE PRECISION E0A,E0AB,T
      INTEGER III,JJJ,ISYL,ISYB,ISYA,IS1,IS2,IP1,KSYM,ISPA,IEXSPA,
     $     IDEXSPA,IJK,IJL,IST,IEN,IA,JA,IELE,KKJ,ISPA2,IGAP,IPER,ISWAP,
     $     ISENDSPA,IRCVSPA,ICOUNT,JPOSA,JPOSB,JPOSA2,JPOSB2,IGA,
     $     IGB,IGA2,IGB2,ITP0,ORMAS_GET_GROUP,ORMAS_GET_STRPOS

!LOCAL ARRAYS 
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III =1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! GENERATE ELECTRON MAPS AND IDENTIFY UNDER/OVER-LOADED SPACES
      ICOUNT = 1
      DO ISPA = 1,NSPACE
         IMXMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IMIMAP(ISPA) = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IMXMAP(ISPA).EQ.1)THEN
            IEXSPA = ISPA
         ELSEIF(IMIMAP(ISPA).EQ.(-1))THEN
            IDEXSPA = ISPA
         ELSE
            ISPA_0(ICOUNT) = ISPA
            ICOUNT = ICOUNT +1
         ENDIF
      ENDDO

! UPDATE MAP FOR DOUBLE DEXCIATIONS
! THESE ARE HOW THE MAPS WILL CHANGE AFTER A SINGLE ALPHA OR BETA DEXCITATION      
      IMXMAP(IEXSPA) = IMXMAP(IEXSPA) -1
      IMIMAP(IEXSPA) = IMIMAP(IEXSPA) -1
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1

! LOOP EXCITED ALPHA STRINGS      
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
         E0A = 0.0D+00
         ISYA = ISYV
         DO III = 1,NA
            E0A = E0A + EFCK(IACON1(III) + NVAL)
            ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
         ENDDO

! LOOP EXCITED BETA STRINGS         
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)            

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111


C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,1,ISYMA)

! GENERATE ALPHA AND BETA ACCUMULATION VECTORS
            IBELAC(1) = 0
            IAELAC(1) = 0
            DO ISPA = 1,NSPACE
               IBELAC(ISPA + 1) = IBELAC(ISPA) + IBBOX1(ISPA)
               IAELAC(ISPA + 1) = IAELAC(ISPA) + IABOX1(ISPA)
            ENDDO

! SINGLE BETA DEXCITATIONS (IEXSPA TO IDEXSPA)
      DO 2000 IELE = IBELAC(IEXSPA) +1, IBELAC(IEXSPA +1)
         IA = IBCON1(IELE) + NVAL
         IS1 = IOB(IA)
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1
         
         IST = MSTA(IDEXSPA)
         IEN = IBCON1(IBELAC(IDEXSPA) +1) -1
         IF(IBBOX1(IDEXSPA).EQ.0) IEN=MSTA(IDEXSPA +1) -1
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1
         DO 2010 IGAP = IBELAC(IDEXSPA) +1, IBELAC(IDEXSPA +1) +1
            DO 2020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IF(IS1.NE.IS2)CYCLE

      CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
      IPER = ((-1)**ISWAP)
      IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB2,IGA).NE.1)CYCLE
      JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA))         
      JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB2))         
      KSYM = ISYMB(JPOSB2+NBST(IGB2))
      ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGB2,IGA)+
     $     LSPB(JPOSB2+NBST(IGB2))

      CALL ME0AA1B(IA,JA,IBCON2,NB,IACON1,NA,NVAL,
     $     INPT,SI1,SI2,T)

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 2020       CONTINUE 
            IST = IBCON1(IGAP) +1
            IEN = IBCON1(IGAP + 1) -1
            IF(IGAP.EQ.IBELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 2010    CONTINUE 
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
 2000 CONTINUE 
         

! DEXCITE DOUBLES STARTING WITH BETA (IEXSPA TO IDEXSPA)
      DO 3000 IELE = IBELAC(IEXSPA) +1, IBELAC(IEXSPA +1)
         IA = IBCON1(IELE) + NVAL
         IS1 = IOB(IA)

         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1
         IST = MSTA(IDEXSPA)
         IEN = IBCON1(IBELAC(IDEXSPA) +1) -1
         IF(IBBOX1(IDEXSPA).EQ.0) IEN=MSTA(IDEXSPA +1) -1
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1

         DO 3010 IGAP = IBELAC(IDEXSPA) +1, IBELAC(IDEXSPA +1) +1
            DO 3020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)

               CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

               IBELAC2(1) = 0
               DO ISPA = 1,NSPACE
                  IBELAC2(ISPA +1) = IBELAC2(ISPA) + IBBOX1(ISPA)
               ENDDO

! DOUBLE BETA EXCIATIONS
! RIGHT NOW DEXCITE BETWEEN SPACES OTHER THAN IEXSPA AND IDEXSPA
!CAN UNROLL TO DECRESE LOGIC
      DO 3100 ISPA = 1,NSPACE -2
         ISENDSPA = ISPA_0(ISPA)
         DO 3110 ISPA2 = 1,NSPACE -2
            IRCVSPA = ISPA_0(ISPA2)
            IF(ISENDSPA.EQ.IRCVSPA) GOTO 311
            IF(IMIMAP(ISENDSPA).LT.1.OR.IMXMAP(IRCVSPA).GT.(-1))CYCLE
 311        CONTINUE
            CALL BB_ALL_SPECTATOR(IBELAC2,IABOX1,IBBOX1,IACON1,IBCON2,
     $           IPER,IACON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,
     $           LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $           ITGB,NSYM,NCI,ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $           IP1,ISYMB)
 3110    CONTINUE 
 3100 CONTINUE 

! DEXCITE BETWEEN ALL SPACES(EXCEPT IEXSPA) TO IDEXSPA
! BE A BIT SUSPICIOUS, HAVE NOT GOT THIS TO FAIL YET
      DO 3200 ISPA = 1,NSPACE
         IF(ISPA.EQ.IDEXSPA)GOTO 320
         IF(ISPA.EQ.IEXSPA)CYCLE
         IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 320     CONTINUE 
         CALL BB_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IBELAC2,IABOX1,
     $        IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,
     $        ISYL,IP1,ISYMB)
 3200 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL SPACES(EXCEPT IDEXSPA)
      DO 3300 ISPA = 1,NSPACE
         IF(ISPA.EQ.IEXSPA)GOTO 330
         IF(ISPA.EQ.IDEXSPA)CYCLE          
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISPA).GT.(-1))CYCLE
 330      CONTINUE 
      CALL BB_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IBELAC2,IABOX1,IBBOX1,
     $        IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $         ISYMB)
 3300 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA 
      CALL BB_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IBELAC2,
     $     IABOX1,IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,
     $     IMUL,IOB,ISYL,IP1,ISYMB)

! SECOND DEXCITATIONS (ALPHA)
      DO 3400 ISPA = 1,NSPACE
         DO 3410 ISPA2 = 1,NSPACE
            IF(ISPA2.EQ.ISPA)GOTO 341
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(ISPA2).GT.(-1))CYCLE
 341        CONTINUE 
            CALL BA_SHIFTS(IAELAC,IACON1,IACON2,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $           ISYMB)
 3410 CONTINUE 
 3400 CONTINUE 

 3020       CONTINUE 
            IST = IBCON1(IGAP) +1
            IEN = IBCON1(IGAP + 1) -1
            IF(IGAP.EQ.IBELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 3010    CONTINUE 
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
 3000 CONTINUE 

! DEXCITE SINGLE ALPHA (IEXSPA TO IDEXSPA)
      DO 4000 IELE = IAELAC(IEXSPA) +1, IAELAC(IEXSPA +1)
         IA = IACON1(IELE) + NVAL
         IS1 = IOB(IA)
         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
         
         IST = MSTA(IDEXSPA)
         IEN = IACON1(IAELAC(IDEXSPA) +1) -1
         IF(IABOX1(IDEXSPA).EQ.0) IEN=MSTA(IDEXSPA +1) -1
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1

         DO 4010 IGAP = IAELAC(IDEXSPA) +1, IAELAC(IDEXSPA +1) +1
            DO 4020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IF(IS2.NE.IS1)CYCLE

      CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
      IPER = ((-1)**ISWAP)

      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB,IGA2).NE.1)CYCLE
      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA2))
      JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB))                
      KSYM = ISYMB(JPOSB+NBST(IGB))
      ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB ,IGA2)+
     $     LSPB(JPOSB+NBST(IGB))

      CALL ME0AA1B(IA,JA,IACON2,NA,IBCON1,NB,NVAL,
     $     INPT,SI1,SI2,T)
      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPER
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO
               
 4020       CONTINUE 
            IST = IACON1(IGAP) +1
            IEN = IACON1(IGAP + 1) -1
            IF(IGAP.EQ.IAELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 4010    CONTINUE 
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
         IABOX1(IEXSPA)  = IABOX1(IEXSPA)  +1
 4000 CONTINUE 


! DOUBLE ALPHAS
      DO 5000 IELE = IAELAC(IEXSPA) +1, IAELAC(IEXSPA +1)
         IA = IACON1(IELE) + NVAL
         IS1 = IOB(IA)

         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
         IST = MSTA(IDEXSPA)
         IEN = IACON1(IAELAC(IDEXSPA) +1) -1
         IF(IABOX1(IDEXSPA).EQ.0) IEN=MSTA(IDEXSPA +1) -1
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1
         DO 5010 IGAP = IAELAC(IDEXSPA) +1, IAELAC(IDEXSPA +1) +1
            DO 5020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)

               CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

               IAELAC2(1) = 0
               DO ISPA = 1,NSPACE
                  IAELAC2(ISPA +1) = IAELAC2(ISPA) + IABOX1(ISPA)
               ENDDO

! DOUBLE ALPHA DEXCIATIONS
! DEXCITE BETWEEN SPACES OTHER THAN IEXSPA AND IDEXSPA
      DO 5100 ISPA = 1,NSPACE -2
         ISENDSPA = ISPA_0(ISPA)
         DO 5110 ISPA2 = 1,NSPACE -2
            IRCVSPA = ISPA_0(ISPA2)
            IF(ISENDSPA.EQ.IRCVSPA) GOTO 511
            IF(IMIMAP(ISENDSPA).LT.1.OR.IMXMAP(IRCVSPA).GT.(-1))CYCLE
 511        CONTINUE
      CALL AA_ALL_SPECTATOR(IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,IPER,
     $           IBCON2,NA,NB,IA,JA,NVAL,EINT,LGCOM,X,NX,LANDET,LBNDET,
     $           LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,ITGB,NSYM,
     $           NCI,ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $           ISYMB)
 5110 CONTINUE 
 5100 CONTINUE 

! DEXCITE TO IDEXSPA FROM ALL SPACES(EXCEPT IEXSPA) 
      DO 5200 ISPA = 1,NSPACE
         IF(ISPA.EQ.IDEXSPA)GOTO 520
         IF(ISPA.EQ.IEXSPA)CYCLE
         IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))CYCLE
 520     CONTINUE 
         CALL AA_ALL_BUT_IEXSPA_TO_IDEXSPA(IDEXSPA,IAELAC2,IABOX1,
     $        IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,
     $        LGCOM,LANDET,LBNDET,X,NX,LSPA,NAST,LDISB,NPTST,COEFF,CI,
     $        NSYM,ITGB,INPT,SI2,NCI,ISPA,LSPB,NBST,IMUL,IOB,
     $        ISYL,IP1,ISYMB)
 5200 CONTINUE 

! DEXCITE FROM IEXSPA TO ALL SPACES(EXCEPT IDEXSPA)
! BE SUSPICIOUS OF THIS, ALTHOUGH I HAVE NOT GOT IT TO FAIL YET
      DO 5300 ISPA = 1,NSPACE
         IF(ISPA.EQ.IEXSPA)GOTO 530
         IF(ISPA.EQ.IDEXSPA)CYCLE          
         IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(ISPA).GT.(-1))CYCLE
 530     CONTINUE 
      CALL AA_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IAELAC2,IABOX1,IBBOX1,
     $        IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,X,
     $        NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $        ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $        ISYMB)
 5300 CONTINUE 

! DEXCITE FROM IEXSPA TO IDEXSPA 
      CALL AA_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,IAELAC2,
     $     IABOX1,IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,
     $     IMUL,IOB,ISYL,IP1,ISYMB)

! SECOND DEXCITATION (BETA)
      DO 5400 ISPA = 1,NSPACE
         DO 5410 ISPA2 = 1,NSPACE
            IF(ISPA2.EQ.ISPA)GOTO 541
            IF(ISPA.EQ.IEXSPA.AND.ISPA2.EQ.IDEXSPA)CYCLE
            IF(IMIMAP(ISPA).LT.1.OR.IMXMAP(ISPA2).GT.(-1))CYCLE
 541        CONTINUE
            CALL AB_SHIFTS(IBELAC,IACON2,IBCON1,IBCON2,IPER,IABOX1,
     $           IBBOX1,IA,JA,EINT,NA,NB,NVAL,X,NX,LANDET,LBNDET,LSPA,
     $           NAST,LDISB,NPTST,COEFF,CI,INPT,LGCOM,SI2,ITGB,
     $           NSYM,NCI,ISPA,ISPA2,LSPB,NBST,IMUL,IOB,ISYL,IP1,
     $           ISYMB)
 5410    CONTINUE 
 5400 CONTINUE 

 5020       CONTINUE 
            IST = IACON1(IGAP) +1
            IEN = IACON1(IGAP + 1) -1
            IF(IGAP.EQ.IAELAC(IDEXSPA +1))IEN =MSTA(IDEXSPA +1) -1
 5010    CONTINUE 
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
         IABOX1(IEXSPA)  = IABOX1(IEXSPA)  +1
 5000 CONTINUE 

            IMXMAP(IEXSPA) = IMXMAP(IEXSPA) +1
            IMIMAP(IEXSPA) = IMIMAP(IEXSPA) +1
            IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) -1
            IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) -1

! SPECIAL BA & AB DEXCITATIONS NOT CAPTURED ABOVE
      DO 6000 ISPA = 1,NSPACE-2
         IRCVSPA = ISPA_0(ISPA)
         IF(IMXMAP(IRCVSPA).NE.0)CYCLE
            CALL BETA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
            CALL ALPHA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,IRCVSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
 6000 CONTINUE 

      DO 7000 ISPA = 1,NSPACE-2
         ISENDSPA = ISPA_0(ISPA)
         IF(IMXMAP(ISENDSPA).EQ.0)CYCLE
         DO 7100 ISPA2 = 1,NSPACE-2
            IRCVSPA = ISPA_0(ISPA2)
            IF(IRCVSPA.EQ.ISENDSPA) GOTO 710
            IF(IMIMAP(IRCVSPA).LT.1)CYCLE
 710        CONTINUE 
            CALL BETA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,ISENDSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
            CALL ALPHA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $           IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,
     $           LANDET,LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,
     $           EINT,NPTST,LSPA,NSYM,INPT,NCI,ISENDSPA,IRCVSPA,
     $           LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
 7100    CONTINUE 
 7000 CONTINUE 

      IMXMAP(IEXSPA) = IMXMAP(IEXSPA) -1
      IMIMAP(IEXSPA) = IMIMAP(IEXSPA) -1
      IMXMAP(IDEXSPA) = IMXMAP(IDEXSPA) +1
      IMIMAP(IDEXSPA) = IMIMAP(IDEXSPA) +1

C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III=1,NPTST
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ)=(EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)        
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III = 1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111        CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010    CONTINUE 
         CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN
      END SUBROUTINE INTERNAL_TYPE_4
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AA_IEXSPA_TO_ALL_BUT_IDEXSPA
      SUBROUTINE AA_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IAELAC2,IABOX1,
     $     IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,
     $     X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $     ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IEXSPA,IPER,IA,JA,NVAL,NA,NB,NX,NPTST,ITGB,NSYM,NCI,
     $     ISYL,IP1,ISPA

! PASSED IN ARRAYS
      INTEGER IAELAC2(*),IABOX1(*),IBBOX1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),LGCOM(ITGB,*),X(*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),
     $     LDISB(NSYM,ITGB,*),INPT(*),IOB(*),ISYMB(*),IMUL(NSYM,*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)
      
! LOCAL VAIABLES
      INTEGER IELE2,IA2,JA2,IST2,IEN2,IGAP2,KKJ2,ISWAP,IPER2,IPERT,IGB2,
     $     IGB,JPOSB2,JPOSB,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,ITP0,MA,MI,
     $     I1J1,I2J2,I1J2,I2J1,INT1,INT2,KSYM,III,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM IEXSPA TO ALL SPACES (EXCEPT TO IDEXSPA)
      DO 1000 IELE2 = IAELAC2(IEXSPA) +1, IAELAC2(IEXSPA +1)
         IA2 = IACON2(IELE2) + NVAL
         IF(IA2.LT.IA)CYCLE
         IS3 = IOB(IA2)
         IP2 = IMUL(IP1,IS3)
            
         IST2 = MSTA(ISPA)
         IEN2 = IACON2(IAELAC2(ISPA) +1)-1
         IF(IABOX1(ISPA).EQ.0) IEN2 = MSTA(ISPA +1) -1
         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1 
         IABOX1(ISPA) = IABOX1(ISPA) +1 

         DO  1010 IGAP2 = IAELAC2(ISPA) +1,IAELAC2(ISPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IF(JA2.EQ.IA)CYCLE
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IACON2,IBCON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGB2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB,IGB2).NE.1)CYCLE
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGB2))         
               JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB))         
               KSYM = ISYMB(JPOSB+NBST(IGB))
               ITP0 =LSPA(NAST(IGB2)+JPOSB2)+LDISB(KSYM,IGB,IGB2)+
     $              LSPB(JPOSB+NBST(IGB))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
               
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            IST2 = IACON2(IGAP2) +1
            IEN2 = IACON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IAELAC2(ISPA +1)) IEN2 = MSTA(ISPA +1) -1
 1010    CONTINUE 
         IABOX1(ISPA) = IABOX1(ISPA) -1 
         IABOX1(IEXSPA) = IABOX1(IEXSPA) +1
 1000 CONTINUE 
      
      RETURN
      END SUBROUTINE AA_IEXSPA_TO_ALL_BUT_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BB_IEXSPA_TO_ALL_BUT_IDEXSPA
      SUBROUTINE BB_IEXSPA_TO_ALL_BUT_IDEXSPA(IEXSPA,IBELAC2,IABOX1,
     $     IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,NVAL,NA,NB,LGCOM,
     $     X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,
     $     ITGB,NSYM,NCI,ISPA,LSPB,NBST,IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

!PASSED IN VARIABLES
      INTEGER IEXSPA,IPER,IA,JA,NVAL,NA,NB,NX,ITGB,NSYM,NCI,ISPA,
     $     ISYL,IP1,NPTST

!PASSED IN ARRAYS
      INTEGER IBELAC2(*),ISYMB(*),IACON1(*),IACON2(*),IBCON2(*),
     $     IABOX1(*),IBBOX1(*),LGCOM(ITGB,*),X(*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),INPT(*),
     $     LDISB(NSYM,ITGB,*),IMUL(NSYM,*),IOB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

!LOCAL VARIABLES
      INTEGER IELE2,IA2,JA2,IST2,IEN2,IGAP2,KKJ2,ISWAP,IPER2,IPERT,IGA,
     $     IGA2,JPOSA,JPOSA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,ITP0,
     $     MA,MI,I1J1,I2J2,I1J2,I2J1,INT1,INT2,KSYM,III,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM IEXSPA TO ALL SPACES (EXCEPT IDEXSPA)
      DO 1000 IELE2 = IBELAC2(IEXSPA) +1, IBELAC2(IEXSPA +1)
         IA2 = IBCON2(IELE2) + NVAL
         IF(IA2.LT.IA)CYCLE
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)

         IST2 = MSTA(ISPA)
         IEN2 = IBCON2(IBELAC2(ISPA) +1)-1
         IF(IBBOX1(ISPA).EQ.0) IEN2 = MSTA(ISPA +1) -1
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1 
         IBBOX1(ISPA) = IBBOX1(ISPA) +1 
         
         DO  1010 IGAP2 = IBELAC2(ISPA) +1,IBELAC2(ISPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IF(JA2.EQ.IA)CYCLE
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IBCON2,IACON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGA2,IGA).NE.1)CYCLE
               JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA))         
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGA2))         
               KSYM = ISYMB(JPOSA2+NBST(IGA2))
               ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGA2,IGA)+
     $              LSPB(JPOSA2+NBST(IGA2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
               
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020          CONTINUE 
            
            IST2 = IBCON2(IGAP2) +1
            IEN2 = IBCON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IBELAC2(ISPA +1)) IEN2 = MSTA(ISPA +1) -1
 1010    CONTINUE 
            
         IBBOX1(ISPA) = IBBOX1(ISPA) -1 
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
 1000 CONTINUE 

      RETURN
      END SUBROUTINE BB_IEXSPA_TO_ALL_BUT_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK ALPHA_IMPACT_BUMPS
      SUBROUTINE ALPHA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $     IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,LANDET,
     $     LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,EINT,NPTST,
     $     LSPA,NSYM,INPT,NCI,ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IEXSPA,IDEXSPA,NVAL,NB,NA,ITGB,NX,NPTST,NSYM,NCI,
     $     ISENDSPA,IRCVSPA,ISYL

! PASSED IN ARRAYS
      INTEGER IBELAC(*),IACON1(*),IACON2(*),IBCON1(*),IBCON2(*),
     $     IABOX1(*),IBBOX1(*),IAELAC(*),LGCOM(ITGB,*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LDISB(NSYM,ITGB,*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),INPT(*),X(*),IMUL(NSYM,*),IOB(*),ISYMB(*)
      DOUBLE PRECISION CI(NCI,NPTST),COEFF(NPTST),EINT(NPTST),SI2(*)
      
! LOCAL VARIABLES
      INTEGER IELE,IA,IST,IEN,IGAP,KKJ,JA,ISWAP,IPER,IELE2,IA2,IST2,
     $     IEN2,IGAP2,KKJ2,JA2,IPER2,IPERT,KSYM,MA,MI,I1J1,I2J2,INT1,
     $     IGA2,IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSA2,JPOSB2,
     $     ITP0,III,IS1,IS2,IS3,IS4,IP1,IP2,IPT
      DOUBLE PRECISION T

! PLACE ALPHA ELECTRON INTO INTO ISENDSPA FROM IEXSPA, THEN HAVE BETA
!  ELECTRON FROM IRCVSPA PLACED INTO IDEXSPA.
      DO 1000 IELE = IAELAC(IEXSPA) +1, IAELAC(IEXSPA +1)
         IA = IACON1(IELE) +NVAL
         IS1 = IOB(IA)

         IST = MSTA(ISENDSPA)
         IEN = IACON1(IAELAC(ISENDSPA) +1) -1
         IF(IABOX1(ISENDSPA).EQ.0) IEN = MSTA(ISENDSPA +1) -1
         IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
         IABOX1(ISENDSPA) = IABOX1(ISENDSPA) +1
               
         DO 1020 IGAP = IAELAC(ISENDSPA) +1,IAELAC(ISENDSPA +1) +1
            DO 1030 KKJ = IST,IEN
               JA = KKJ +NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)
               
               CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

      DO 2000 IELE2 = IBELAC(IRCVSPA) +1, IBELAC(IRCVSPA +1)
         IA2 = IBCON1(IELE2) +NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)

         IST2 = MSTA(IDEXSPA)
         IEN2 = IBCON1(IBELAC(IDEXSPA) +1) -1
         IF(IBBOX1(IDEXSPA).EQ.0) IEN2 = MSTA(IDEXSPA +1) -1
         IBBOX1(IRCVSPA) = IBBOX1(IRCVSPA) -1
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1
         
         DO 2010 IGAP2 = IBELAC(IDEXSPA) +1,IBELAC(IDEXSPA +1) +1
            DO 2020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 +NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IP2,IS4)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IBCON1,IBCON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB2,IGA2).NE.1)CYCLE
               
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))         
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB2))         
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB2,IGA2)+
     $              LSPB(JPOSB2+NBST(IGB2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI               
               T = SI2(INT1)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 2020       CONTINUE 
            IST2 = IBCON1(IGAP2) +1
            IEN2 = IBCON1(IGAP2 +1) -1
            IF(IGAP2.EQ.IBELAC(IDEXSPA +1))IEN2 =MSTA(IDEXSPA +1)-1
 2010    CONTINUE 
         IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1
         IBBOX1(IRCVSPA) = IBBOX1(IRCVSPA) +1
 2000 CONTINUE 

 1030            CONTINUE 
                 IST = IACON1(IGAP) +1
                 IEN = IACON1(IGAP +1) -1
                 IF(IGAP.EQ.IAELAC(ISENDSPA +1))IEN =MSTA(ISENDSPA +1)-1
 1020          CONTINUE 
               IABOX1(ISENDSPA) = IABOX1(ISENDSPA) -1
               IABOX1(IEXSPA) = IABOX1(IEXSPA) +1
 1000 CONTINUE 

      RETURN
      END SUBROUTINE ALPHA_IMPACT_BUMPS
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BETA_IMPACT_BUMPS
      SUBROUTINE BETA_IMPACT_BUMPS(IBELAC,IEXSPA,IDEXSPA,IBCON1,NVAL,
     $     IBBOX1,IABOX1,IBCON2,NB,IAELAC,IACON1,IACON2,NA,LGCOM,LANDET,
     $     LBNDET,LDISB,ITGB,NAST,X,NX,CI,SI2,COEFF,EINT,NPTST,
     $     LSPA,NSYM,INPT,NCI,ISENDSPA,IRCVSPA,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER IEXSPA,IDEXSPA,NVAL,NB,NA,ITGB,NX,NCI,NSYM,ISENDSPA,
     $     IRCVSPA,ISYL,NPTST

! PASSED IN ARRAYS
      INTEGER IBELAC(*),IACON1(*),IACON2(*),IBCON1(*),IBCON2(*),
     $     IAELAC(*),LGCOM(ITGB,*),LANDET(NSPACE,*),LBNDET(NSPACE,*),
     $     LDISB(NSYM,ITGB,*),LSPA(*),LSPB(*),NAST(*),NBST(*),X(*),
     $     INPT(*),IMUL(NSYM,*),IOB(*),ISYMB(*),IBBOX1(*),IABOX1(*)
      DOUBLE PRECISION CI(NCI,NPTST),COEFF(NPTST),EINT(NPTST),SI2(*)

! LOCAL VARIABLES
      INTEGER IELE,IA,IST,IEN,IGAP,KKJ,JA,ISWAP,IPER,IELE2,IA2,IST2,
     $     IEN2,IGAP2,KKJ2,JA2,IPER2,IPERT,KSYM,MA,MI,I1J1,I2J2,INT1,
     $     IGA2,IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,JPOSA2,JPOSB2,
     $     ITP0,III,IS1,IS2,IS3,IS4,IP1,IP2,IPT
      DOUBLE PRECISION T

! PLACE BETA ELECTRON INTO INTO ISENDSPA FROM IEXSPA, THEN HAVE ALPHA
!  ELECTRON FROM IRCVSPA PLACED INTO IDEXSPA.
      DO 1000 IELE = IBELAC(IEXSPA) +1, IBELAC(IEXSPA +1)
         IA = IBCON1(IELE) +NVAL
         IS1 = IOB(IA)

         IST = MSTA(ISENDSPA)
         IEN = IBCON1(IBELAC(ISENDSPA) +1) -1
         IF(IBBOX1(ISENDSPA).EQ.0) IEN = MSTA(ISENDSPA +1) -1
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1
         IBBOX1(ISENDSPA) = IBBOX1(ISENDSPA) +1
               
         DO 1020 IGAP = IBELAC(ISENDSPA) +1,IBELAC(ISENDSPA +1) +1
            DO 1030 KKJ = IST,IEN
               JA = KKJ +NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)
               
               CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

      DO 2000 IELE2 = IAELAC(IRCVSPA) +1, IAELAC(IRCVSPA +1)
         IA2 = IACON1(IELE2) +NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)
         
         IST2 = MSTA(IDEXSPA)
         IEN2 = IACON1(IAELAC(IDEXSPA) +1) -1
         IF(IABOX1(IDEXSPA).EQ.0) IEN2 = MSTA(IDEXSPA +1) -1
         IABOX1(IRCVSPA) = IABOX1(IRCVSPA) -1
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1
         
         DO 2010 IGAP2 = IAELAC(IDEXSPA) +1,IAELAC(IDEXSPA +1) +1
            DO 2020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 +NVAL
               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IACON1,IACON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
               IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB2,IGA2).NE.1)CYCLE
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA2))         
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB2))         
               KSYM = ISYMB(JPOSB2+NBST(IGB2))
               ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB2,IGA2)+
     $              LSPB(JPOSB2+NBST(IGB2))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI               
               T = SI2(INT1)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 2020       CONTINUE 
            IST2 = IACON1(IGAP2) +1
            IEN2 = IACON1(IGAP2 +1) -1
            IF(IGAP2.EQ.IAELAC(IDEXSPA +1))IEN2 =MSTA(IDEXSPA +1)-1
 2010    CONTINUE 
         IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1
         IABOX1(IRCVSPA) = IABOX1(IRCVSPA) +1
 2000 CONTINUE 
      
 1030       CONTINUE 
            IST = IBCON1(IGAP) +1
            IEN = IBCON1(IGAP +1) -1
            IF(IGAP.EQ.IBELAC(ISENDSPA +1))IEN =MSTA(ISENDSPA +1)-1
 1020    CONTINUE 
         IBBOX1(ISENDSPA) = IBBOX1(ISENDSPA) -1
         IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
 1000 CONTINUE 
      
      RETURN
      END SUBROUTINE BETA_IMPACT_BUMPS
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AA_IEXSPA_TO_IDEXSPA
      SUBROUTINE AA_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,
     $     IAELAC2,IABOX1,IBBOX1,IBCON1,IACON2,IPER,IBCON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,
     $     IMUL,IOB,ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
! PASSED IN VARIABLES
      INTEGER IEXSPA,IDEXSPA,IPER,IA,JA,NVAL,NA,NB,NX,ITGB,NSYM,
     $     NPTST,NCI,ISYL,IP1

! PASSED IN ARRAYS
      INTEGER IMIMAP(*),IMXMAP(*),IAELAC2(*),IABOX1(*),IBBOX1(*),
     $     IACON2(*),IBCON1(*),IBCON2(*),LGCOM(ITGB,*),X(*),
     $     LANDET(NSPACE,*),LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),LDISB(NSYM,ITGB,*),INPT(*),IMUL(NSYM,*),IOB(*),
     $     ISYMB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

! LOCAL VARIABLES
      INTEGER IELE2,IA2,JA2,IST2,IEN2,IGAP2,KKJ2,ISWAP,IPER2,IPERT,IGB,
     $     IGB2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,KSYM,ITP0,JPOSB,JPOSB2,
     $     III,MA,MI,I1J1,I2J2,I1J2,I2J1,INT1,INT2,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM IEXSPA TO IDEXSPA
! MODIFY IABOX1 TO REFLECT THIS
      IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))RETURN
      IABOX1(IEXSPA) = IABOX1(IEXSPA) -1
      IABOX1(IDEXSPA) = IABOX1(IDEXSPA) +1      

      DO 1000 IELE2 = IAELAC2(IEXSPA) +1, IAELAC2(IEXSPA +1)
         IA2 = IACON2(IELE2) + NVAL
         IF(IA2.LT.IA)CYCLE
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)
         
         IST2 = MSTA(IDEXSPA)
         IEN2 = IACON2(IAELAC2(IDEXSPA) +1) -1

         DO 1010 IGAP2 = IAELAC2(IDEXSPA) +1,IAELAC2(IDEXSPA +1) +1

            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IF(JA2.LT.JA)CYCLE

               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE
               CALL REDE00(IACON2,IBCON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2

               IGB2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGB,IGB2).NE.1)CYCLE
               JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGB2))         
               JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGB))         
               KSYM = ISYMB(JPOSB+NBST(IGB))
      ITP0 =LSPA(NAST(IGB2)+JPOSB2)+LDISB(KSYM,IGB,IGB2)+
     $              LSPB(JPOSB+NBST(IGB))

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
                 
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)
               
               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO
               
 1020       CONTINUE 
            IST2 = IACON2(IGAP2) +1
            IEN2 = IACON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IAELAC2(IDEXSPA +1))IEN2 =MSTA(IDEXSPA +1) -1
 1010    CONTINUE 
 1000 CONTINUE 

! RESET IABOX1 
      IABOX1(IDEXSPA) = IABOX1(IDEXSPA) -1      
      IABOX1(IEXSPA) = IABOX1(IEXSPA) +1

      RETURN
      END SUBROUTINE AA_IEXSPA_TO_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BB_IEXSPA_TO_IDEXSPA
      SUBROUTINE BB_IEXSPA_TO_IDEXSPA(IEXSPA,IDEXSPA,IMIMAP,IMXMAP,
     $     IBELAC2,IABOX1,IBBOX1,IACON1,IBCON2,IPER,IACON2,IA,JA,EINT,
     $     NVAL,NA,NB,LGCOM,X,NX,LANDET,LBNDET,LSPA,NAST,LDISB,
     $     ITGB,NSYM,INPT,SI2,CI,COEFF,NPTST,NCI,LSPB,NBST,IMUL,IOB,
     $     ISYL,IP1,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
! PASSED IN VARIABLES
      INTEGER IEXSPA,IDEXSPA,IPER,IA,JA,NVAL,NA,NB,NX,ITGB,NSYM,
     $     NCI,ISYL,IP1,NPTST

! PASSED IN ARRAYS
      INTEGER IMIMAP(*),IMXMAP(*),IBELAC2(*),IABOX1(*),IBBOX1(*),
     $     IACON1(*),IACON2(*),IBCON2(*),LGCOM(ITGB,*),X(*),INPT(*),
     $     LANDET(NSPACE,*),LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),IMUL(NSYM,*),IOB(*),ISYMB(*),LDISB(NSYM,ITGB,*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

! LOCAL VARIABLES
      INTEGER IELE2,IA2,JA2,IST2,IEN2,IGAP2,KKJ2,ISWAP,IPER2,IPERT,IGA,
     $     IGA2,ORMAS_GET_GROUP,ORMAS_GET_STRPOS,KSYM,ITP0,JPOSA,JPOSA2,
     $     III,MA,MI,I1J1,I2J2,I1J2,I2J1,INT1,INT2,IS3,IS4,IP2,IPT
      DOUBLE PRECISION T

!DEXCITE ELECTRON FROM IEXSPA TO IDEXSPA
      IF(IMIMAP(IEXSPA).LT.1.OR.IMXMAP(IDEXSPA).GT.(-1))RETURN
      IBBOX1(IEXSPA) = IBBOX1(IEXSPA) -1
      IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) +1      
      DO 1000 IELE2 = IBELAC2(IEXSPA) +1, IBELAC2(IEXSPA +1)
         IA2 = IBCON2(IELE2) + NVAL
         IF(IA2.LT.IA)CYCLE
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)

         IST2 = MSTA(IDEXSPA)
         IEN2 = IBCON2(IBELAC2(IDEXSPA) +1) -1

         DO 1010 IGAP2 = IBELAC2(IDEXSPA) +1,IBELAC2(IDEXSPA +1) +1
            DO 1020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IF(JA2.LT.JA)CYCLE
               IS4 = IOB(JA2)
               IPT = IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE

               CALL REDE00(IBCON2,IACON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2

               IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
               IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
               IF(LGCOM(IGA2,IGA).NE.1)CYCLE
               JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LANDET(1,IGA))         
               JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $              IDIM,X,NX,LBST,LBNDET(1,IGA2))         
               KSYM = ISYMB(JPOSA2+NBST(IGA2))
               ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGA2,IGA)+
     $              LSPB(JPOSA2+NBST(IGA2))

               DO III=1,NPTST
                  COEFF(III) = CI(ITP0,III)*IPERT
               ENDDO

               MA = MAX(IA,JA)
               MI = MIN(IA,JA)
               I1J1 = INPT(MA) + MI
               MA = MAX(IA2,JA2)
               MI = MIN(IA2,JA2)
               I2J2 = INPT(MA) + MI
               MA = MAX(I1J1,I2J2)
               MI = MIN(I1J1,I2J2)
               INT1 = INPT(MA) + MI
                 
               MA = MAX(IA,JA2)
               MI = MIN(IA,JA2)
               I1J2 = INPT(MA) + MI
               MA = MAX(IA2,JA)
               MI = MIN(IA2,JA)
               I2J1 = INPT(MA) + MI
               MA = MAX(I1J2,I2J1)
               MI = MIN(I1J2,I2J1)
               INT2 = INPT(MA) + MI
               T = SI2(INT1) - SI2(INT2)

               DO III=1,NPTST
                  EINT(III) = EINT(III) + T*COEFF(III)
               ENDDO

 1020       CONTINUE 
            IST2 = IBCON2(IGAP2) +1
            IEN2 = IBCON2(IGAP2 +1) -1
            IF(IGAP2.EQ.IBELAC2(IDEXSPA +1))IEN2 =MSTA(IDEXSPA +1) -1
 1010    CONTINUE 
 1000 CONTINUE 
      IBBOX1(IDEXSPA) = IBBOX1(IDEXSPA) -1      
      IBBOX1(IEXSPA) = IBBOX1(IEXSPA) +1
      
      RETURN
      END SUBROUTINE BB_IEXSPA_TO_IDEXSPA
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK INTERNAL_TYPE_16
      SUBROUTINE INTERNAL_TYPE_16(IABOX1,IBBOX1,NPTAST,NPTBST,IACON1,
     $     IBCON1,NA,NB,IGAPT,IGBPT,IACON2,IBCON2,NVAL,NX,X,EFCK,
     $     INPT,LANDET,LBNDET,LGCOM,SI2,LDISB,NAST,LSPA,ITGB,NSYM,
     $     CI,E0V,EPT0,NCI,NPTST,COEFF,HPT,HINT,EINT,NBST,IBELAC,
     $     IBELAC2,IAELAC,IAELAC2,LSPB,IMUL,ISYV,IOB,ISYMB,ISTSYM)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
! PASSED IN VARIABLES
      INTEGER NA,NB,IGAPT,IGBPT,NVAL,ITGB,NSYM,NCI,
     $     NPTST,ISYV,ISTSYM,NX
      DOUBLE PRECISION E0V

! PASSED IN ARRAYS
      INTEGER IABOX1(*),IBBOX1(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),X(*),INPT(*),LANDET(NSPACE,*),LBNDET(NSPACE,*),
     $     LGCOM(ITGB,*),LDISB(NSYM,ITGB,*),LSPA(*),LSPB(*),NAST(*),
     $     NBST(*),IBELAC(*),IBELAC2(*),IAELAC(*),IAELAC2(*),
     $     IMUL(NSYM,*),IOB(*),NPTAST(*),NPTBST(*),ISYMB(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,*),HPT(NPTST,*),EINT(*),EPT0(*),
     $     HINT(NPTST,*),EFCK(*),SI2(*)

! LOCAL VARIABLES
      INTEGER JJJ,III,ISYB,ISYA,ISYL,IBDEXSPA,IADEXSPA,IBEXSPA,IAEXSPA,
     $     IEXIND,IDEXIND,IJK,IJL,ISPA,NEXSPA,NDEXSPA,IEUNDR,IEOVER
      DOUBLE PRECISION E0A,E0AB

! LOCAL ARRAYS
      INTEGER IEXSPA(3),IDEXSPA(3)
      DOUBLE PRECISION E02V(NPTST)

! SUBTRACT VALENCE ENERGY FROM STATES EPT0(1:NPTST) FOR DENOMINATOR
      DO III = 1,NPTST
         E02V(III) = EPT0(III) -E0V -E0V
      ENDDO

! IDENTIFY WHICH SPACES ARE UNDER/OVER-LOADED IRRESPECTIVE OF SPIN
      NEXSPA = 0
      NDEXSPA = 0
      DO ISPA = 1,NSPACE
         IEOVER = IABOX1(ISPA) + IBBOX1(ISPA) - MAXI(ISPA)
         IEUNDR = IABOX1(ISPA) + IBBOX1(ISPA) - MINI(ISPA)
         IF(IEOVER.EQ.2)THEN
            IEXSPA(1)=ISPA
            IEXSPA(2)=ISPA
            NEXSPA = 1
         ELSEIF(IEOVER.EQ.1)THEN
            NEXSPA = NEXSPA +1
            IEXSPA(NEXSPA) = ISPA
         ELSEIF(IEUNDR.EQ.(-2))THEN
            IDEXSPA(1)=ISPA
            IDEXSPA(2)=ISPA
            NDEXSPA = 1
         ELSEIF (IEUNDR.EQ.(-1))THEN
            NDEXSPA = NDEXSPA + 1
            IDEXSPA(NDEXSPA) = ISPA
         ENDIF
      ENDDO
      IEXSPA(3) = IEXSPA(1)
      IDEXSPA(3) = IDEXSPA(1)

! DETERMINE EXCITED ALPHA/BETA ELECTRON DISTRIBUTIONS WITHIN SUBSPACES 
      IAELAC(1) = 0
      IBELAC(1) = 0
      DO ISPA = 1,NSPACE
         IAELAC(ISPA+1) = IAELAC(ISPA) + IABOX1(ISPA)
         IBELAC(ISPA+1) = IBELAC(ISPA) + IBBOX1(ISPA)
      ENDDO

! LOOP EXCITED ALPHA STRINGS
      CALL RESETDE(IABOX1,NSPACE,NA,MSTA,IACON1)
      DO 1000 IJK = 1,NPTAST(IGAPT)
            E0A = 0.0D+00
            ISYA = ISYV
            DO III = 1,NA
               E0A = E0A + EFCK(IACON1(III) + NVAL)
               ISYA = IMUL(ISYA,IOB(IACON1(III) + NVAL))
            ENDDO

! LOOP EXCITED BETA STRINGS
         CALL RESETDE(IBBOX1,NSPACE,NB,MSTA,IBCON1)
         DO 1010 IJL = 1,NPTBST(IGBPT)
            E0AB = E0A
            ISYB = ISYV
            DO III = 1,NB
               E0AB = E0AB + EFCK(IBCON1(III) + NVAL)
               ISYB = IMUL(ISYB,IOB(IBCON1(III) + NVAL))
            ENDDO
            ISYL = IMUL(ISYB,ISYA)

! IF EXCITED DETERMINANT IS NOT ISTSYM SYMMETRY, SKIP TO NEXT BETA STRING            
            IF(ISTSYM.NE.ISYL)GOTO 1111

C$$$      CALL EXCITED_CHECK(IACON1,IBCON1,NA,NB,NA,NB,ITGA,ITGB,LGCOM,
C$$$     $           NBST,NAST,NSYM,ISYMB,IMUL,ISYL,LSPA,LSPB,LDISB,
C$$$     $           2,2,ISYMA)

! PURE ALPHA-ALPHA DEXCITATIONS
      CALL AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA(1),IDEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      
! PURE BETA-BETA DEXCITATIONS
      CALL BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA(1),IEXSPA(2),IDEXSPA(1),IDEXSPA(2),LSPB,NBST,
     $     IMUL,IOB,ISYL,ISYMB)
      
! MIXED ALPHA-BETA DEXCITATIONS
      DO 2000 IEXIND = 1,NEXSPA
         IAEXSPA = IEXSPA(IEXIND)
         IBEXSPA = IEXSPA(IEXIND + 1)
         DO 2010 IDEXIND = 1,NDEXSPA
            IADEXSPA = IDEXSPA(IDEXIND)
            IBDEXSPA = IDEXSPA(IDEXIND + 1)
            CALL AB_MIXED(IABOX1,IBBOX1,IAELAC,
     $           IACON1,NVAL,IACON2,NA,NB,IBELAC,IBCON1,IBCON2,LGCOM,X,
     $           NX,LANDET,LBNDET,LSPA,NAST,LDISB,COEFF,CI,INPT,SI2,
     $           EINT,NPTST,ITGB,NSYM,NCI,IAEXSPA,IBEXSPA,IADEXSPA,
     $           IBDEXSPA,LSPB,NBST,IMUL,IOB,ISYL,ISYMB)
 2010    CONTINUE 
 2000 CONTINUE 
      
! INCLUDE ENERGY INTO EFFECTIVE HAMILTONIAN (HPT)
C$$$      DO III =1,NPTST
C$$$         DENOM(III) = E02V(III) -E0AB
C$$$C$$$         IF(DENOM(III).LT.0.005)DENOM(III) =(0.02 +(DENOM(III)/0.02))
C$$$      ENDDO

      DO III=1,NPTST
C$$$         WRITE(6,*)DENOM(III)
C$$$         IF(ABS(DENOM(III)).LT.0.005)WRITE(6,*)DENOM(III)
C$$$         IF(ABS(DENOM(III)).LT.0.005)CYCLE
         DO JJJ=1,NPTST
            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(E02V(III) -E0AB)
C$$$            HINT(III,JJJ) = (EINT(III)*EINT(JJJ))/(DENOM(III))
            HPT(III,JJJ) = HPT(III,JJJ) + HINT(III,JJJ)
         ENDDO
      ENDDO

      DO III = 1,NPTST
         EINT(III) = 0.0D+00
      ENDDO
!7777 RETURN
 1111       CALL MOVEUP2(IBBOX1,NSPACE,NB,MSTA,IBCON1)
 1010    CONTINUE 
         CALL MOVEUP2(IABOX1,NSPACE,NA,MSTA,IACON1)
 1000 CONTINUE 

      RETURN
      END SUBROUTINE INTERNAL_TYPE_16
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AB_MIXED
      SUBROUTINE AB_MIXED(IABOX1,IBBOX1,IAELAC,IACON1,NVAL,
     $     IACON2,NA,NB,IBELAC,IBCON1,IBCON2,LGCOM,X,NX,LANDET,LBNDET,
     $     LSPA,NAST,LDISB,COEFF,CI,INPT,SI2,EINT,NPTST,ITGB,NSYM,
     $     NCI,IAEXSP,IBEXSP,IADESP,IBDESP,LSPB,NBST,IMUL,IOB,ISYL,
     $     ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NVAL,NA,NB,NX,ITGB,NSYM,NCI,IAEXSP,IBEXSP,IADESP,
     $     IBDESP,ISYL,NPTST

! PASSED IN ARRAYS
      INTEGER IABOX1(*),IBBOX1(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),LGCOM(ITGB,*),X(*),LANDET(NSPACE,*),
     $     LBNDET(NSPACE,*),LSPA(*),LSPB(*),NAST(*),NBST(*),
     $     LDISB(NSYM,ITGB,*),INPT(*),IMUL(NSYM,*),IOB(*),ISYMB(*),
     $     IAELAC(*),IBELAC(*)
      DOUBLE PRECISION COEFF(*),CI(NCI,NPTST),SI2(*),EINT(*)

! LOCAL VARIABLES
      INTEGER IELE,IA,IST,IEN,IGAP,KKJ,JA,ISWAP,IPER,IELE2,IA2,IST2,
     $     IEN2,IGAP2,KKJ2,JA2,IPER2,IPERT,IGA2,IGB2,JPOSA2,JPOSB2,ITP0,
     $     MA,MI,I1J1,I2J2,INT1,KSYM,III,IS1,IS2,IS3,IS4,
     $     IP1,IP2,IPT,ORMAS_GET_GROUP,ORMAS_GET_STRPOS
      DOUBLE PRECISION T

!AB MIX DEXCITATIONS
! DO ALPHA DEXCIATION, THEN BETA
      IABOX1(IAEXSP) = IABOX1(IAEXSP) -1
      IBBOX1(IBEXSP) = IBBOX1(IBEXSP) -1

      DO 1000 IELE = IAELAC(IAEXSP) + 1,IAELAC(IAEXSP+1)
         IA = IACON1(IELE) + NVAL
         IS1 = IOB(IA)
         
         IST = MSTA(IADESP)
         IEN = IACON1(IAELAC(IADESP)+1) -1
         IF(IABOX1(IADESP).EQ.0) IEN = MSTA(IADESP + 1) -1
         IABOX1(IADESP) = IABOX1(IADESP) +1
         DO 1010 IGAP = IAELAC(IADESP)+1,IAELAC(IADESP +1)+1
            DO 1020 KKJ =IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)
               
               CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)
               
! NOW BETA DEXCITATION
      DO 2000 IELE2 = IBELAC(IBEXSP)+1,IBELAC(IBEXSP+1)
         IA2 = IBCON1(IELE2) + NVAL
         IS3 = IOB(IA2)
         IP2 = IMUL(IS3,IP1)
                  
         IST2 = MSTA(IBDESP)
         IEN2 = IBCON1(IBELAC(IBDESP) + 1)-1
         IF(IBBOX1(IBDESP).EQ.0) IEN2=MSTA(IBDESP+1)-1
         IBBOX1(IBDESP) = IBBOX1(IBDESP) +1                     
         DO 2010 IGAP2 = IBELAC(IBDESP)+1,IBELAC(IBDESP+1)+1
            DO 2020 KKJ2 = IST2,IEN2
               JA2 = KKJ2 + NVAL
               IS4 = IOB(JA2)
               IPT =IMUL(IS4,IP2)
               IF(IPT.NE.ISYL)CYCLE
               
               CALL REDE00(IBCON1,IBCON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
               IPER2 = ((-1)**ISWAP)
               IPERT = IPER*IPER2
               
      IGA2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGB2,IGA2).NE.1)CYCLE
      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA2))         
      JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB2))         
      KSYM = ISYMB(JPOSB2+NBST(IGB2))
      ITP0 =LSPA(NAST(IGA2)+JPOSA2)+LDISB(KSYM,IGB2,IGA2)+
     $     LSPB(JPOSB2+NBST(IGB2))

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPERT
      ENDDO
                        
      MA = MAX(IA,JA)
      MI = MIN(IA,JA)
      I1J1 = INPT(MA) + MI
      MA = MAX(IA2,JA2)
      MI = MIN(IA2,JA2)
      I2J2 = INPT(MA) + MI
      MA = MAX(I1J1,I2J2)
      MI = MIN(I1J1,I2J2)
      INT1 = INPT(MA) + MI
      T = SI2(INT1)
      
      DO III = 1,NPTST
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO
                        
 2020 CONTINUE 
                     
            IST2 = IBCON1(IGAP2)+1
            IEN2 = IBCON1(IGAP2 + 1)-1
            IF(IGAP2.EQ.IBELAC(IBDESP+1)) IEN2=MSTA(IBDESP+1)-1
 2010    CONTINUE 
         
         IBBOX1(IBDESP) = IBBOX1(IBDESP) -1                     
 2000 CONTINUE 
! END BETA               
 1020       CONTINUE 
            
            IST = IACON1(IGAP) +1
            IEN = IACON1(IGAP +1)-1
            IF(IGAP.EQ.IAELAC(IADESP+1))IEN=MSTA(IADESP+1)-1
 1010    CONTINUE 
         
         IABOX1(IADESP) = IABOX1(IADESP) -1
 1000 CONTINUE 
! END ALPHA      
      IABOX1(IAEXSP) = IABOX1(IAEXSP) +1
      IBBOX1(IBEXSP) = IBBOX1(IBEXSP) +1
      
      RETURN
      END SUBROUTINE AB_MIXED
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK AA_PURE
      SUBROUTINE AA_PURE(IAELAC,IACON1,NVAL,IABOX1,IAELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IBCON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA1,IEXSPA2,IDEXSPA1,IDEXSPA2,LSPB,NBST,IMUL,IOB,
     $     ISYL,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ

! PASSED IN VARIABLES
      INTEGER NVAL,NA,NB,NX,NPTST,ITGB,NSYM,NCI,IEXSPA1,IEXSPA2,
     $     IDEXSPA1,IDEXSPA2,ISYL

! PASSED IN ARRAYS
      INTEGER IAELAC(*),IAELAC2(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),IABOX1(*),IBBOX1(*),LGCOM(ITGB,*),X(*),INPT(*),
     $     LSPA(*),LSPB(*),NAST(*),NBST(*),LDISB(NSYM,ITGB,*),ISYMB(*),
     $     IMUL(NSYM,*),LANDET(NSPACE,*),LBNDET(NSPACE,*),IOB(*)
      DOUBLE PRECISION COEFF(*),EINT(*),SI2(*),CI(NCI,*)

! LOCAL VARIABLES
      INTEGER IELE,IA,IST,IEN,IGAP,KKJ,JA,ISWAP,IPER,IELE2,IA2,IST2,
     $     IEN2,IGAP2,KKJ2,JA2,IPER2,IGB2,JPOSB2,JPOSB,ITP0,IGB,MA,MI,
     $     I1J1,I2J2,I2J1,I1J2,INT1,INT2,KSYM,III,ISPA,IPERT,IS1,IS2,
     $     IS3,IS4,IP1,IP2,IPT,ORMAS_GET_GROUP,ORMAS_GET_STRPOS
      DOUBLE PRECISION T

!ALPHA-ALPHA DEXCITATIONS
! DEXCITE ALPHA1 FROM IEXSPA1
      DO 1000 IELE = IAELAC(IEXSPA1)+1,IAELAC(IEXSPA1+1)
         IA = IACON1(IELE) + NVAL
         IS1 = IOB(IA)

! DETERMINE GAP/ORB IN IDEXSPA1 AND GROUP OCCUPANCIES
         IST = MSTA(IDEXSPA1)
         IEN = IACON1(IAELAC(IDEXSPA1) +1 ) -1
         IF(IABOX1(IDEXSPA1).EQ.0) IEN = MSTA(IDEXSPA1 +1) -1

         IABOX1(IEXSPA1) = IABOX1(IEXSPA1) -1 
         IABOX1(IDEXSPA1) = IABOX1(IDEXSPA1) +1

         IAELAC2(1) = 0
         DO ISPA = 1,NSPACE
            IAELAC2(ISPA+1) = IAELAC2(ISPA) + IABOX1(ISPA)
         ENDDO

         DO 1010 IGAP = IAELAC(IDEXSPA1)+1,IAELAC(IDEXSPA1 +1) +1
            DO 1020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)

               CALL REDE00(IACON1,IACON2,NA,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

! DEXCITE ALPHA2 FROM IEXSPA2
               DO 2000 IELE2 = IAELAC2(IEXSPA2) +1,IAELAC2(IEXSPA2 +1)
                  IA2 = IACON2(IELE2) + NVAL
                  IF(IA2.LT.IA)CYCLE
                  IS3 = IOB(IA2)
                  IP2 = IMUL(IS3,IP1)

                  IABOX1(IEXSPA2) = IABOX1(IEXSPA2) -1 
                  IST2 = MSTA(IDEXSPA2)
                  IEN2 = IACON2( (IAELAC2(IDEXSPA2) +1) ) -1
                  IF(IABOX1(IDEXSPA2).EQ.0)IEN2 = MSTA(IDEXSPA2 +1) -1
                  IABOX1(IDEXSPA2) = IABOX1(IDEXSPA2) +1

! PLACE ALPHA2 INTO IDEXSPA2
      DO 2010 IGAP2=IAELAC2(IDEXSPA2) +1,IAELAC2(IDEXSPA2 +1) +1
         DO 2020 KKJ2 = IST2,IEN2
            JA2 = KKJ2 + NVAL
            IF(JA2.LT.JA)CYCLE
            IS4 = IOB(JA2)
            IPT =IMUL(IS4,IP2)
            IF(IPT.NE.ISYL)CYCLE

            CALL REDE00(IACON2,IBCON2,NA,IELE2,IGAP2-1,KKJ2,ISWAP)
            IPER2 = ((-1)**ISWAP)
            IPERT = IPER*IPER2

      IGB = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IGB2 = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IF(LGCOM(IGB,IGB2).NE.1)CYCLE
      JPOSB2 = ORMAS_GET_STRPOS(IBCON2,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGB2))         
      JPOSB = ORMAS_GET_STRPOS(IBCON1,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGB))         
      KSYM = ISYMB(JPOSB+NBST(IGB))
      ITP0 =LSPA(NAST(IGB2)+JPOSB2)+LDISB(KSYM,IGB,IGB2)+
     $     LSPB(JPOSB+NBST(IGB))

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPERT
      ENDDO
            
      MA = MAX(IA,JA)
      MI = MIN(IA,JA)
      I1J1 = INPT(MA) + MI
      MA = MAX(IA2,JA2)
      MI = MIN(IA2,JA2)
      I2J2 = INPT(MA) + MI
      MA = MAX(I1J1,I2J2)
      MI = MIN(I1J1,I2J2)
      INT1 = INPT(MA) + MI
                 
      MA = MAX(IA,JA2)
      MI = MIN(IA,JA2)
      I1J2 = INPT(MA) + MI
      MA = MAX(IA2,JA)
      MI = MIN(IA2,JA)
      I2J1 = INPT(MA) + MI
      MA = MAX(I1J2,I2J1)
      MI = MIN(I1J2,I2J1)
      INT2 = INPT(MA) + MI
      T = SI2(INT1) - SI2(INT2)
      
      DO III = 1,NPTST
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 2020                CONTINUE 
                     IST2 = IACON2(IGAP2) +1
                     IEN2 = IACON2(IGAP2 +1) -1
             IF(IGAP2.EQ.IAELAC2(IDEXSPA2 +1))IEN2=MSTA(IDEXSPA2 +1) -1
 2010             CONTINUE 
                  IABOX1(IDEXSPA2) = IABOX1(IDEXSPA2) -1
                  IABOX1(IEXSPA2) = IABOX1(IEXSPA2) +1 
 2000          CONTINUE 
!END ALPHA2               

 1020       CONTINUE 
            IST = IACON1(IGAP) +1
            IEN = IACON1(IGAP +1) -1
            IF(IGAP.EQ.IAELAC(IDEXSPA1 +1))IEN= MSTA(IDEXSPA1+1) -1
 1010    CONTINUE 
         IABOX1(IDEXSPA1) = IABOX1(IDEXSPA1) -1
         IABOX1(IEXSPA1) = IABOX1(IEXSPA1) +1 
 1000 CONTINUE 
! END ALPHA1

      RETURN
      END SUBROUTINE AA_PURE
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------
C*MODULE ORMPT2  *DECK BB_PURE
      SUBROUTINE BB_PURE(IBELAC,IBCON1,NVAL,IABOX1,IBELAC2,
     $     IACON2,NA,IBCON2,NB,IBBOX1,LGCOM,X,NX,LANDET,LBNDET,IACON1,
     $     LSPA,NAST,LDISB,NPTST,COEFF,CI,INPT,SI2,EINT,ITGB,NSYM,
     $     NCI,IEXSPA1,IEXSPA2,IDEXSPA1,IDEXSPA2,LSPB,NBST,IMUL,IOB,
     $     ISYL,ISYMB)
      IMPLICIT NONE
      LOGICAL FDIRCT,QCORR
      INTEGER NSPACE,MSTA(51),MNUM(51),MINI(51),MAXI(51), 
     $     IAMI(51),IAMA(51),IBMI(51),IBMA(51),IDIM(51), 
     $     LBST(51),NREF0
      DOUBLE PRECISION C0SQ
      COMMON /FCCWFN/ NSPACE,MSTA,MNUM,MINI,MAXI, 
     $     IAMI,IAMA,IBMI,IBMA,IDIM, 
     $     LBST,NREF0,FDIRCT,QCORR,C0SQ
      
! PASSED IN VARIABLES
      INTEGER NVAL,NA,NB,NX,NPTST,ITGB,NSYM,NCI,ISYL,
     $     IEXSPA1,IEXSPA2,IDEXSPA1,IDEXSPA2

! PASSED IN ARRAYS
      INTEGER IBELAC(*),IBELAC2(*),IACON1(*),IACON2(*),IBCON1(*),
     $     IBCON2(*),IABOX1(*),IBBOX1(*),LGCOM(ITGB,*),X(*),ISYMB(*),
     $     LANDET(NSPACE,*),LBNDET(NSPACE,*),LSPA(*),LSPB(*),IOB(*),
     $     LDISB(NSYM,ITGB,*),NAST(*),NBST(*),INPT(*),IMUL(NSYM,*)
      DOUBLE PRECISION COEFF(*),EINT(*),SI2(*),CI(NCI,*)

! LOCAL ARRAYS
      INTEGER IELE,IA,IST,IEN,IGAP,KKJ,JA,ISWAP,IPER,IELE2,IA2,IST2,
     $     IEN2,IGAP2,KKJ2,JA2,IPER2,IGA,IGA2,JPOSA2,JPOSA,ITP0,MA,MI,
     $     I1J1,I2J2,I2J1,I1J2,INT1,INT2,KSYM,III,ISPA,IPERT,IS1,IS2,
     $     IS3,IS4,IP1,IP2,IPT,ORMAS_GET_GROUP,ORMAS_GET_STRPOS
      DOUBLE PRECISION T

!DO BETA-BETA DEXCITATIONS
! DEXCITE ALPHA FROM IEXSPA1
      DO 1000 IELE = IBELAC(IEXSPA1)+1,IBELAC(IEXSPA1+1)
         IA = IBCON1(IELE) + NVAL
         IS1 = IOB(IA)

! DETERMINE GAP/ORB IN IDEXSPA1 AND GROUP OCCUPANCIES
         IST = MSTA(IDEXSPA1)
         IEN = IBCON1(IBELAC(IDEXSPA1)+1)-1
         IF(IBBOX1(IDEXSPA1).EQ.0) IEN = MSTA(IDEXSPA1+1)-1
         IBBOX1(IEXSPA1) = IBBOX1(IEXSPA1) -1 
         IBBOX1(IDEXSPA1) = IBBOX1(IDEXSPA1) + 1
         
         IBELAC2(1) = 0
         DO ISPA = 1,NSPACE
            IBELAC2(ISPA+1) = IBELAC2(ISPA) + IBBOX1(ISPA)
         ENDDO
         
         DO 1010 IGAP = IBELAC(IDEXSPA1)+1,IBELAC(IDEXSPA1+1)+1
            DO 1020 KKJ = IST,IEN
               JA = KKJ + NVAL
               IS2 = IOB(JA)
               IP1 = IMUL(IS1,IS2)
               
               CALL REDE00(IBCON1,IBCON2,NB,IELE,IGAP-1,KKJ,ISWAP)
               IPER = ((-1)**ISWAP)

! DEXCITE ALPHA2 FROM IEXSPA2
         DO 2000 IELE2 = IBELAC2(IEXSPA2)+1,IBELAC2(IEXSPA2+1)
            IA2 = IBCON2(IELE2) + NVAL
            IF(IA2.LT.IA)CYCLE
            IS3 = IOB(IA2)
            IP2 = IMUL(IS3,IP1)
            
            IBBOX1(IEXSPA2) = IBBOX1(IEXSPA2) -1 
            
            IST2 = MSTA(IDEXSPA2)
            IEN2 = IBCON2( (IBELAC2(IDEXSPA2) +1) ) -1
            IF(IBBOX1(IDEXSPA2).EQ.0)IEN2 = MSTA(IDEXSPA2+1)-1
            IBBOX1(IDEXSPA2) = IBBOX1(IDEXSPA2) + 1
            
! PLACE ALPHA2 INTO IDEXSPA2
            DO 2010 IGAP2=IBELAC2(IDEXSPA2)+1,IBELAC2(IDEXSPA2+1)+1
               DO 2020 KKJ2 = IST2,IEN2
                  JA2 = KKJ2 + NVAL
                  IF(JA2.LT.JA)CYCLE
                  IS4 = IOB(JA2)
                  IPT =IMUL(IS4,IP2)
                  IF(IPT.NE.ISYL)CYCLE
                  
                  CALL REDE00(IBCON2,IACON2,NB,IELE2,IGAP2-1,KKJ2,ISWAP)
                  IPER2 = ((-1)**ISWAP)
                  IPERT = IPER*IPER2
                  
      IGA = ORMAS_GET_GROUP(NSPACE,NA,IAMA,IAMI,IABOX1)
      IGA2 = ORMAS_GET_GROUP(NSPACE,NB,IBMA,IBMI,IBBOX1)
      IF(LGCOM(IGA2,IGA).NE.1)CYCLE
      JPOSA = ORMAS_GET_STRPOS(IACON1,NA,IABOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LANDET(1,IGA))         
      JPOSA2 = ORMAS_GET_STRPOS(IACON2,NB,IBBOX1,NSPACE,MSTA,
     $     IDIM,X,NX,LBST,LBNDET(1,IGA2))         
      KSYM = ISYMB(JPOSA2+NBST(IGA2))
      ITP0 =LSPA(NAST(IGA)+JPOSA)+LDISB(KSYM,IGA2,IGA)+
     $     LSPB(JPOSA2+NBST(IGA2))

      DO III=1,NPTST
         COEFF(III) = CI(ITP0,III)*IPERT
      ENDDO
      
      MA = MAX(IA,JA)
      MI = MIN(IA,JA)
      I1J1 = INPT(MA) + MI
      MA = MAX(IA2,JA2)
      MI = MIN(IA2,JA2)
      I2J2 = INPT(MA) + MI
      MA = MAX(I1J1,I2J2)
      MI = MIN(I1J1,I2J2)
      INT1 = INPT(MA) + MI
      
      MA = MAX(IA,JA2)
      MI = MIN(IA,JA2)
      I1J2 = INPT(MA) + MI
      MA = MAX(IA2,JA)
      MI = MIN(IA2,JA)
      I2J1 = INPT(MA) + MI
      MA = MAX(I1J2,I2J1)
      MI = MIN(I1J2,I2J1)
      INT2 = INPT(MA) + MI
      T = SI2(INT1) - SI2(INT2)
      
      DO III = 1,NPTST
         EINT(III) = EINT(III) + T*COEFF(III)
      ENDDO

 2020          CONTINUE 
               IST2 = IBCON2(IGAP2) +1
               IEN2 = IBCON2(IGAP2 +1) -1
               IF(IGAP2.EQ.IBELAC2(IDEXSPA2+1))IEN2=MSTA(IDEXSPA2+1)-1
 2010       CONTINUE 
            IBBOX1(IDEXSPA2) = IBBOX1(IDEXSPA2) -1
            IBBOX1(IEXSPA2) = IBBOX1(IEXSPA2) +1 
 2000    CONTINUE 
! END BETA2             

 1020       CONTINUE 
            IST = IBCON1(IGAP) +1
            IEN = IBCON1(IGAP +1) -1
            IF(IGAP.EQ.IBELAC(IDEXSPA1 +1))IEN= MSTA(IDEXSPA1+1) -1
 1010    CONTINUE 
         IBBOX1(IDEXSPA1) = IBBOX1(IDEXSPA1) -1
         IBBOX1(IEXSPA1) = IBBOX1(IEXSPA1) +1 
 1000 CONTINUE 
! END BETA1

      RETURN
      END SUBROUTINE BB_PURE
!------------------------------------------------------------------------
!========================================================================
!------------------------------------------------------------------------

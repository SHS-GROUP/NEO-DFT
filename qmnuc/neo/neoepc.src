C
C*MODULE NEOEPC  *DECK CALCNECORR
C> @brief driver for possible exchange/correlation KS contributions
C
      SUBROUTINE CALCNECORR(EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,FTOTWT,
     *                    VCORRAELEBYNUC,VCORRBELEBYNUC,VCORRANUCBYELE,
     *                    VCORRBNUCBYELE)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      PARAMETER (MXATM=2000)
C
      COMMON /CM05  / CM05XF, IM05
      COMMON /CM06  / IM06
      COMMON /CM08  / IM08
      COMMON /CSOGGA/ ISOGGA
      COMMON /DFTEXC/ PI,CSLT,CB88,CLYP,CVWN,QOP,NEXFG,NCORFG,NPFFG,
     *                NXCFG
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /WFNOPT/ SCFTYP,VBTYP,DFTYPE,TDDFTYP,CITYP,CCTYP,
     *                MPLEVL,MPCTYP
      DOUBLE PRECISION NEOSCF,NEOCI,NEODFT
      COMMON /NEOMTD/ NEOSCF,NEOCI,NEODFT
      DATA RNONE/8HNONE    /
      DATA CS1,CS2,CS3/8HCS1     ,8HCS2     ,8HCS3     /
C
      LOGICAL UROHF
C
      DATA RHF,UHF,ROHF/8HRHF     ,8HUHF     ,8HROHF     /
C***********************************************************************
      UROHF = SCFTYP.EQ.UHF  .OR.  SCFTYP.EQ.ROHF
C
C
      IF(NEODFT.EQ.CS1) THEN
         CALL NEOCS1(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,FTOTWT,
     *             VCORRAELEBYNUC,VCORRBELEBYNUC,VCORRANUCBYELE,
     *             VCORRBNUCBYELE)
      ELSE IF(NEODFT.EQ.CS2) THEN
         CALL NEOCS2(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,FTOTWT,
     *             VCORRAELEBYNUC,VCORRBELEBYNUC,VCORRANUCBYELE,
     *             VCORRBNUCBYELE)
      ELSE IF(NEODFT.EQ.CS3) THEN
         CALL NEOCS3(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,FTOTWT,
     *             VCORRAELEBYNUC,VCORRBELEBYNUC,VCORRANUCBYELE,
     *             VCORRBNUCBYELE)
      ELSE
         WRITE(IW,*) 'CANNOT USE THIS CORRELATIONAL FUNCTIONAL'
      ENDIF
      RETURN
      END
C
C*MODULE NEOEPC  *DECK NEOCS3
      SUBROUTINE NEOCS3(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,
     *                FTOTWT,VC1,VC2,VC3,VC4)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UROHF, RHFGVB
      PARAMETER (ONE=1.0D+00, TWO=2.0D+00, THREE=3.0D+00)
      COMMON /DFTEXC/ PI,CB88,CLYP,CVWN,QOP,NEXFG,NCORFG,NPFFG,
     *                NXCFG
C      write(*,*)VC1,VC2,VC3,VC4
      VC1=0.0D+00
      VC2=0.0D+00
      VC3=0.0D+00
      VC4=0.0D+00
      EEPCATPOINT=0.0D+00
      RETURN
      END
C*MODULE NEOEPC  *DECK NEOCS2
      SUBROUTINE NEOCS2(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,
     *                FTOTWT,VC1,VC2,VC3,VC4)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UROHF, RHFGVB
      PARAMETER (ONE=1.0D+00, TWO=2.0D+00, THREE=3.0D+00)
!      PARAMETER (C1=-1.0D-01,C2=7.0D-02,C3=-5.0D-01)
!      PARAMETER (C1=-8.0D-02,C2=3.0D-01,C3=-1.0D-00)
      PARAMETER (C1=-4.0D-02,C2=3.0D-01,C3=-1.0D-00)
      COMMON /DFTEXC/ PI,CB88,CLYP,CVWN,QOP,NEXFG,NCORFG,NPFFG,
     *                NXCFG
      IF (UROHF) THEN
!         RHO13A=ROA**(ONE/THREE)
!         RHO13B=ROB**(ONE/THREE)
!         FACP=-(6.0D+00/PI)**(ONE/THREE)
!         FACE=-(THREE/4.0D+00)*(6.0D+00/PI)**(ONE/THREE)
!         PDUMA = FACP*RHO13A
!         PDUMB = FACP*RHO13B
!         RHOEA= RHO13A**4
!         RHOEB= RHO13B**4
!         XALFA = FTOTWT*RHOEA*FACE
!         XALFB = FTOTWT*RHOEB*FACE
!         EEPCATPOINT = EEPCATPOINT + XALFA + XALFB
!         VC1 = VC1+PDUMA
!         VC2 = VC2+PDUMB
      ELSE
         RHO13 = (TWO*ROA)**(ONE/THREE)
         RHO43 = RHO13**4
         RHO23 = RHO13**2
         VC1 = VC1 +
     *   C1*ROANUC/THREE*(C2/RHO43-ONE/RHO23)/(C2/RHO13+C3+RHO13)**2
         VC3 = VC3 + C1/(C2/RHO13+C3+RHO13)
         EEPCATPOINT = EEPCATPOINT+FTOTWT*ROANUC*C1/(C2/RHO13+C3+RHO13)
      END IF
      RETURN
      END
C*MODULE NEOEPC  *DECK NEOCS1
      SUBROUTINE NEOCS1(UROHF,EEPCATPOINT,ROA,ROB,ROANUC,ROBNUC,
     *                FTOTWT,VC1,VC2,VC3,VC4)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL UROHF, RHFGVB
      PARAMETER (ONE=1.0D+00, TWO=2.0D+00, THREE=3.0D+00)
!      PARAMETER (C1=-1.0D-01,C2=7.0D-02,C3=-5.0D-01)
!      PARAMETER (C1=-8.0D-02,C2=3.0D-01,C3=-1.0D-00)
      PARAMETER (C1=-4.0D-03,C2=3.0D-01,C3=-1.0D-00)
      COMMON /DFTEXC/ PI,CB88,CLYP,CVWN,QOP,NEXFG,NCORFG,NPFFG,
     *                NXCFG
      IF (UROHF) THEN
!         RHO13A=ROA**(ONE/THREE)
!         RHO13B=ROB**(ONE/THREE)
!         FACP=-(6.0D+00/PI)**(ONE/THREE)
!         FACE=-(THREE/4.0D+00)*(6.0D+00/PI)**(ONE/THREE)
!         PDUMA = FACP*RHO13A
!         PDUMB = FACP*RHO13B
!         RHOEA= RHO13A**4
!         RHOEB= RHO13B**4
!         XALFA = FTOTWT*RHOEA*FACE
!         XALFB = FTOTWT*RHOEB*FACE
!         EEPCATPOINT = EEPCATPOINT + XALFA + XALFB
!         VC1 = VC1+PDUMA
!         VC2 = VC2+PDUMB
      ELSE
         RHO13 = (TWO*ROA)**(ONE/THREE)
         RHO43 = RHO13**4
         RHO23 = RHO13**2
         VC1 = VC1 +
     *   C1*ROANUC/THREE*(C2/RHO43-ONE/RHO23)/(C2/RHO13+C3+RHO13)**2
         VC3 = VC3 + C1/(C2/RHO13+C3+RHO13)
         EEPCATPOINT = EEPCATPOINT+FTOTWT*ROANUC*C1/(C2/RHO13+C3+RHO13)
      END IF
      RETURN
      END

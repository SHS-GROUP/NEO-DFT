diff -urN ga-5-0-2~/armci/src/dataserv.c ga-5-0-2/armci/src/dataserv.c
--- ga-5-0-2~/armci/src/dataserv.c	2009-11-16 12:38:34.000000000 -0600
+++ ga-5-0-2/armci/src/dataserv.c	2012-04-10 13:53:06.000000000 -0500
@@ -104,13 +104,13 @@
 
 
 int armci_RecvStridedFromSocket(int sock,void *dst_ptr, int dst_stride_arr[],
-                     int count[],int stride_levels,struct iovec *iov){
+				int count[],int stride_levels,struct iovec *iov){
 
-char *dst=(char*)dst_ptr;
-char *dst1;
-int i,j,k,num_xmit=0,lastiovlength,iovlength,n=0,max_iovec,totalsize=0,vecind;
-int total_of_2D=1;
-int index[MAX_STRIDE_LEVEL], unit[MAX_STRIDE_LEVEL];
+    char *dst=(char*)dst_ptr;
+    char *dst1;
+    int i,j,k,num_xmit=0,lastiovlength,iovlength,n=0,max_iovec,totalsize=0,vecind;
+    int total_of_2D=1;
+    size_t index[MAX_STRIDE_LEVEL], unit[MAX_STRIDE_LEVEL];
 
     max_iovec = MAX_IOVEC;
     if(DEBUG1){
@@ -172,12 +172,12 @@
 
 
 int armci_SendStridedToSocket(int sock,void *src_ptr, int src_stride_arr[],
-                     int count[], int stride_levels,struct iovec *iov){
-char *src=(char*)src_ptr;
-char *src1;
-int i,j,k,num_xmit=0,lastiovlength,iovlength,n=0,max_iovec,totalsize=0,vecind;
-int total_of_2D=1;
-int index[MAX_STRIDE_LEVEL], unit[MAX_STRIDE_LEVEL];
+			      int count[], int stride_levels,struct iovec *iov){
+    char *src=(char*)src_ptr;
+    char *src1;
+    int i,j,k,num_xmit=0,lastiovlength,iovlength,n=0,max_iovec,totalsize=0,vecind;
+    int total_of_2D=1;
+    size_t index[MAX_STRIDE_LEVEL], unit[MAX_STRIDE_LEVEL];
 
     max_iovec = MAX_IOVEC;
     if(DEBUG1){
diff -urN ga-5-0-2~/armci/src/kr_malloc.c ga-5-0-2/armci/src/kr_malloc.c
--- ga-5-0-2~/armci/src/kr_malloc.c	2010-04-19 15:30:27.000000000 -0500
+++ ga-5-0-2/armci/src/kr_malloc.c	2012-04-10 13:53:06.000000000 -0500
@@ -29,7 +29,7 @@
  */
 #define DEFAULT_NALLOC       (4*128*1024)  
 #define DEFAULT_NALLOC_ALIGN 1024  
-#define DEFAULT_MAX_NALLOC   (4*1024*1024*16) 
+#define DEFAULT_MAX_NALLOC   (64*1024*1024*16) 
 
 /* mutual exclusion defs go here */
 #define LOCKED   100
@@ -73,9 +73,9 @@
 #endif
 
     if (ctx->total >= ctx->max_nalloc) {
-#      if DEBUG
+/*#      if DEBUG*/
          armci_die("kr_malloc: morecore: maximum allocation reached",armci_me);
-#      endif
+/*#      endif*/
        return (Header *) NULL;   /* Enforce upper limit on core usage */
     }
 
@@ -91,8 +91,8 @@
     (void) printf("%d: morecore: Getting %ld more units of length %d\n",
 		  armci_me, (long)nu, sizeof(Header));
     (void) fflush(stdout);
-#endif
-    
+#endif    
+
     if ((cp =(char *)(*ctx->alloc_fptr)((size_t)nu * sizeof(Header))) == (char *)NULL)
       return (Header *) NULL;
 
diff -urN ga-5-0-2~/armci/src/memory.c ga-5-0-2/armci/src/memory.c
--- ga-5-0-2~/armci/src/memory.c	2010-07-13 11:44:09.000000000 -0500
+++ ga-5-0-2/armci/src/memory.c	2012-04-10 13:53:06.000000000 -0500
@@ -872,7 +872,8 @@
     vampir_begin(ARMCI_MALLOC,__FILE__,__LINE__);
 #endif
     if(DEBUG_){ 
-       fprintf(stderr,"%d bytes in armci_malloc %d\n",armci_me, (int)bytes);
+       fprintf(stderr,"%lu bytes in armci_malloc %d\n",
+	       armci_me, (long unsigned int)bytes);
        fflush(stderr);
        armci_msg_barrier();
     }
diff -urN ga-5-0-2~/armci/src/sockets.c ga-5-0-2/armci/src/sockets.c
--- ga-5-0-2~/armci/src/sockets.c	2010-12-09 13:25:19.000000000 -0600
+++ ga-5-0-2/armci/src/sockets.c	2012-04-10 13:55:51.000000000 -0500
@@ -284,17 +284,18 @@
 
 #if defined(USE_SOCKET_VECTOR_API) 
 
-int _armci_tcp_writev(int sock, struct iovec *iovptr,int writeiovlength,int currentwritesize,struct iovec *iov){
-    int n=0;
+size_t _armci_tcp_writev(int sock, struct iovec *iovptr,int writeiovlength,
+			 size_t currentwritesize,struct iovec *iov){
+    size_t n=0;
     while(n!=currentwritesize){
-        int rc;
+        size_t rc;
         rc=writev(sock,iovptr,writeiovlength);
         if(rc<0)perror("writev failed");
         if(DEBUG1&&0)if(rc<currentwritesize){printf("\n%d:_armci_tcp_writev write %d bytes of %d bytes writeiovlen=%d",armci_me,rc,currentwritesize,writeiovlength);fflush(stdout);} 
         n+=rc;
         if(n<currentwritesize){
             int completediovs=0;
-            int templength=0;
+            size_t templength=0;
             while(templength!=rc){
                 if(iovptr->iov_len+templength>rc){
                     iovptr->iov_base=(char *)((*iovptr).iov_base)+(rc-templength);
@@ -314,17 +315,18 @@
     return(n);
 }
 
-int _armci_tcp_readv(int sock, struct iovec *iovptr,int readiovlength,int currentreadsize,struct iovec *iov){
-    int n=0;
+size_t _armci_tcp_readv(int sock, struct iovec *iovptr,int readiovlength,
+			size_t currentreadsize,struct iovec *iov){
+    size_t n=0;
     while(n!=currentreadsize){
-        int rc;
+        size_t rc;
         rc=readv(sock,iovptr,readiovlength);
         if(rc<0)perror("readv failed");
         if(DEBUG1&&0)if(rc<currentreadsize){printf("\n%d:_armci_tcp_readv Read %d bytes of %d bytes readiovlen=%d",armci_me,rc,currentreadsize,readiovlength);fflush(stdout);}
         n+=rc;
         if(n<currentreadsize){
             int completediovs=0;
-            int templength=0;
+            size_t templength=0;
             while(templength!=rc){
                 if(iovptr->iov_len+templength>rc){
                     iovptr->iov_base=(char *)((*iovptr).iov_base)+(rc-templength);
@@ -344,13 +346,14 @@
     return(n);
 }
 
-int armci_ReadVFromSocket(int sock,struct iovec *iov, int iovlength, int totalsize)
-{
-    struct iovec *iovptr;
-    int i=0,num_xmit=1,lastiovoriglen=0,lastiovnewlen=0,lastiovindex=-1,n=0;
-    int readiovlength,currentreadsize=totalsize,totalreadsofar=0,byteslefttoread=0;
+int armci_ReadVFromSocket(int sock, struct iovec *iov, int iovlength, int totalsize) {
+
+    int i=0, num_xmit=1, lastiovindex=-1, readiovlength;
+    size_t lastiovoriglen=0, lastiovnewlen=0, n=0;
+    size_t currentreadsize=totalsize, totalreadsofar=0, byteslefttoread=0;
     char *lastiovorigbase=NULL;
-    iovptr=iov; 
+    struct iovec *iovptr=iov;
+
     if(totalsize>PACKET_SIZE){
         while(totalreadsofar!=totalsize){
             currentreadsize=0;
@@ -398,14 +401,15 @@
 }
 
 
-int armci_WriteVToSocket(int sock,struct iovec *iov, int iovlength, int totalsize){     
+int armci_WriteVToSocket(int sock, struct iovec *iov, int iovlength, int totalsize) {
 
-    int lastiovoriglen=0,lastiovnewlen=0,lastiovindex=-1,totalwritesofar=0,byteslefttowrite=0;
-    struct iovec *iovptr; 
-    int i=0,num_xmit=0,n=0;
-    int currentwritesize=totalsize,writeiovlength;
-     char *lastiovorigbase=NULL;
-    iovptr=iov; 
+    size_t lastiovoriglen=0, lastiovnewlen=0;
+    size_t totalwritesofar=0, byteslefttowrite=0;
+    size_t n=0, currentwritesize = totalsize;
+    char *lastiovorigbase=NULL;
+    int i=0, num_xmit=0, lastiovindex=-1, writeiovlength;
+    struct iovec *iovptr = iov;
+ 
     if(totalsize>PACKET_SIZE){
  	while(totalwritesofar!=totalsize){      
             currentwritesize=0; 
@@ -464,7 +468,7 @@
 */
 {
 
-   int nread, status, nintr=0;
+   size_t nread, status, nintr=0;
    char *buf = (char*)buffer;
    status = lenbuf;
    while (lenbuf > 0) {
@@ -509,8 +513,8 @@
   Write to the socket in packets of PACKET_SIZE bytes
 */
 {
-  int status = lenbuf;
-  int nsent, len;
+  size_t status = lenbuf;
+  size_t nsent, len;
   char *buf = (char*)buffer;
  
   if(DEBUG_){
diff -urN ga-5-0-2~/armci/src/strided.c ga-5-0-2/armci/src/strided.c
--- ga-5-0-2~/armci/src/strided.c	2010-12-27 16:14:42.000000000 -0600
+++ ga-5-0-2/armci/src/strided.c	2012-04-10 13:53:26.000000000 -0500
@@ -458,7 +458,8 @@
 		       armci_ihdl_t nb_handle)
 {
   char *src = (char*)src_ptr, *dst=(char*)dst_ptr;
-  int s2, s3, i,j, unlockit=0;
+  armci_size_t s2, s3;
+  int i,j, unlockit=0;
   int total_of_2D;
   int index[MAX_STRIDE_LEVEL], unit[MAX_STRIDE_LEVEL];
 
diff -urN ga-5-0-2~/global/src/capi.c ga-5-0-2/global/src/capi.c
--- ga-5-0-2~/global/src/capi.c	2011-02-28 01:20:54.000000000 -0600
+++ ga-5-0-2/global/src/capi.c	2012-04-10 13:53:26.000000000 -0500
@@ -2004,7 +2004,7 @@
 
 size_t GA_Memory_avail(void)
 {
-    return (size_t)gai_memory_avail(MT_F_BYTE);
+    return (size_t)ga_memory_avail_();
 }
 
 int GA_Memory_limited(void)

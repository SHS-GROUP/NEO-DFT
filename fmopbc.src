C 14 OCT 09 - DGF - CHANGES FOR FMO 3.3
C 15 DEC 08 - DGF - VARIOUS CHANGES FOR FMO 3.2 RELEASE
C 20 AUG 07 - KK,DGF - NEW MODULE ADDED
C
C*MODULE FMOPBC  *DECK CELLVOL
      FUNCTION CELLVOL(ABCLAT,ANGLAT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (EPS=1.0D-06,ONE=1.0D+00,TWO=2.0D+00)
      DIMENSION ABCLAT(3),ANGLAT(3)
C
      CA=COS(ANGLAT(1))
      CB=COS(ANGLAT(2))
      CG=COS(ANGLAT(3))
      IF(ABS(CA).LE.EPS) CA=0 
      IF(ABS(CB).LE.EPS) CB=0 
      IF(ABS(CG).LE.EPS) CG=0 
C
      CELLVOL=ABCLAT(1)*ABCLAT(2)*ABCLAT(3)*
     *        SQRT(ONE-CA*CA-CB*CB-CG*CG+TWO*CA*CB*CG)
C
      RETURN
      END
C
C*MODULE FMOPBC  *DECK CHKSYMOP
      SUBROUTINE CHKSYMOP(NAT,CC,CCT1,CCT2)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (RLARGE=1.0D+12,RSHORT=0.25D+00)
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /FMOLAT/ UNTANG(3),UNTORG(3),RESPBC(4),ABCLAT(3),ANGLAT(3),
     *                SYMTRA(3,24),SYMOPE(3,3,24),IATORG,NSYMOP,MAXKLMS,
     *                IOPORG(3),IOPDIR(3),IOPABC(3),IOPANG(3)
      DIMENSION CC(3,*),CCT1(3,*),CCT2(3,*)
      DIMENSION TRMAT(3,3)
C     DIMENSION XYZBOX(3,8),U(3,3)
C     DATA      XYZBOX/ZERO,ZERO,ZERO, ONE,ZERO,ZERO,
C    *                 ZERO,ONE,ZERO,  ZERO,ZERO,ONE,
C    *                 ONE,ONE,ZERO,   ZERO,ONE,ONE,
C    *                 ONE,ZERO,ONE,   ONE,ONE,ONE  /
C     CHECK COORDINATES GERERATED BY SYMMETRY OPERATIONS
      ISMIN=0
      JSMIN=0
      IAMIN=0
      JAMIN=0
      DO IG=1,NSYMOP
         CALL SYMOLCC(0,0,0,IG,NAT,CC,CCT1,TRMAT)
C        IF(IDEBUG.EQ.1) THEN
C           WRITE(IW,9999) IK,IL,IM,IG
C           CALL PRTMOLCC(NAT,IAN,CCT1)
C        ENDIF
         DO JG=IG,NSYMOP
            IF(IG.NE.JG) THEN
               CALL SYMOLCC(0,0,0,JG,NAT,CC,CCT2,TRMAT)
               RMIN2=RLARGE
               DO I=1,NAT
                  DO J=1,NAT
                     RIJ2=(CCT1(1,I)-CCT2(1,J))**2
     *                   +(CCT1(2,I)-CCT2(2,J))**2
     *                   +(CCT1(3,I)-CCT2(3,J))**2
                     IF(RIJ2.LT.RMIN2) THEN
                        RMIN2=RIJ2
                        ISMIN=IG
                        JSMIN=JG
                        IAMIN=I
                        JAMIN=J
                     ENDIF
                  ENDDO
               ENDDO
            ENDIF
         ENDDO
      ENDDO
C
C     IF(IDEBUG.NE.0) THEN
C        RIJ2=DSQRT(RMIN2)/TOBOHR
C        WRITE(IW,9998) RIJ2,IAMIN,JAMIN,ISMIN,JSMIN
C        WRITE(IW,9997)
C        CALL TXCTOX(U,IERR)
C        DO I=1,8
C           XF=XYZBOX(1,I)
C           YF=XYZBOX(2,I)
C           ZF=XYZBOX(3,I)
C           TX=U(1,1)*XF+U(1,2)*YF+U(1,3)*ZF
C           TY=U(2,1)*XF+U(2,2)*YF+U(2,3)*ZF
C           TZ=U(3,1)*XF+U(3,2)*YF+U(3,3)*ZF
C           WRITE(IW,9996) I,TX/TOBOHR,TY/TOBOHR,TZ/TOBOHR
C        ENDDO
C     ENDIF
      IF(RMIN2.LT.RSHORT) THEN
         WRITE(IW,9995) DSQRT(RMIN2),IAMIN,JAMIN,ISMIN,JSMIN
         CALL ABRT
      ENDIF
C
      RETURN
C9999 FORMAT(' CHKSYMOP: ATOMIC COORDINATES FOR (K,L,M,IS)',4I4)
C9998 FORMAT(' CHKSYMOP: THE SHORTEST INTERATOMIC DISTANCE IS, R=',F12.6
C    *,' A',/,10X,' BETWEEN IA =',I3,' AND JA =',I3,' GENERATED BY SYMME
C    *TRY OPERATIONS,',/,10X,' IS =',I2,' AND JS =',I2,
C    * ' , RESPECTIVELY, IN (0,0,0) CELL.')
C9997 FORMAT(' CHKSYMOP: CARTESIAN COORDINATES OF (0,0,0) BOX CORNERS (A
C    *)')
C9996 FORMAT(I5,3F12.6)
 9995 FORMAT(' CHKSYMOP: TOO SHORT INTERATOMIC DIATANCE, R=',F12.6,
     * ' A',/,10X,' BETWEEN IA =',I3,' AND JA =',I3,' GENERATED BY SYMME
     *TRY OPERATIONS,',/,10X,' IS =',I2,' AND JS =',I2,
     * ' , RESPECTIVELY, IN (0,0,0) CELL.')
      END
C
C*MODULE FMOPBC  *DECK FMON123
      SUBROUTINE FMON123(NUMFRG,N1FMO,N2FMO,N3FMO)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NUMFRG(*)
      COMMON /FMOINF/ NFG,NLAYER,NATFMO,NBDFG,NAOTYP,NBODY
C
      N1FMO=0
      N2FMO=0
      N3FMO=0
      DO IFG=1,NFG
        L1I=IAND(NUMFRG(IFG),65535)
        N1FMO=N1FMO+L1I
        N2FMO=N2FMO+(L1I*L1I+L1I)/2
        N3FMO=N3FMO+L1I*L1I
      ENDDO
      RETURN
      END
C
C*MODULE FMOPBC  *DECK GENKLMS
      SUBROUTINE GENKLMS(K0,L0,M0,IG0,NGRINT,NGRESP,NGRPTC,KLMS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (ZERO=0.0D+00)
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /FMOLAT/ UNTANG(3),UNTORG(3),RESPBC(4),ABCLAT(3),ANGLAT(3),
     *                SYMTRA(3,24),SYMOPE(3,3,24),IATORG,NSYMOP,MAXKLMS,
     *                IOPORG(3),IOPDIR(3),IOPABC(3),IOPANG(3)
      DIMENSION KLMS(4,*)
      DIMENSION MXKLM(3),MIKLM(3),RRMAX2(4)
      DIMENSION U(3,3),W(3,3),XYZ(3),XYZ0(3),XYZI(3)
C
C     SET GROUPS WHICH ARE WITHIN THRESHOULD DISTANCE.
C     NOTE THAT DISTANCE IS MEASURED FROM (XORG,YORG,ZORG).
C     RCUTINT < RCUTESP < RPTCINT. RPTCINT IS POSSIBLY ZERO (NO USE).
C
C     IDEBUG=1
C
      NGRINT=0
      NGRESP=0
      NGRPTC=0
      RCUTINT=RESPBC(1)
      RCUTESP=RESPBC(2)
      RPTCINT=RESPBC(3)
C     IF(IGROUP.LE.0) THEN
         RMAX=MAX(RCUTINT,RCUTESP,RPTCINT)
C     ELSE
C        RMAX=RCUTESP
C     ENDIF 
      RMAX2=RMAX*RMAX
      XYZ(1)=ZERO
      XYZ(2)=ZERO
      XYZ(3)=ZERO
      CALL SYMOLCC(K0,L0,M0,IG0,1,XYZ,XYZ0,W)
C
C     ROUGH ESTIMATION OF MAXIMUM K,L,M
      MXKLM(1)=INT(RMAX/ABCLAT(1))
      MXKLM(2)=INT(RMAX/ABCLAT(2))
      MXKLM(3)=INT(RMAX/ABCLAT(3))
      DO I=1,3
         IF(MXKLM(I).GT.0) MXKLM(I)=MXKLM(I)-1
      ENDDO
C     ESTIMATION OF MAXIMUM K,L,M
      CALL TXCTOX(U,IERR)
      DO I=1,3
   20    CONTINUE
         MXKLM(I)=MXKLM(I)+1
         XI=MXKLM(I)*U(1,I)
         YI=MXKLM(I)*U(2,I)
         ZI=MXKLM(I)*U(3,I)
         R00=XI**2+YI**2+ZI**2
         IF(R00.LE.RMAX2) GO TO 20
      ENDDO
C
      MIKLM(1)=-MXKLM(1)+K0
      MIKLM(2)=-MXKLM(2)+L0
      MIKLM(3)=-MXKLM(3)+M0
      MXKLM(1)= MXKLM(1)+K0
      MXKLM(2)= MXKLM(2)+L0
      MXKLM(3)= MXKLM(3)+M0
C
C     IF(IDEBUG.EQ.1) THEN
C        WRITE(IW,9999) (MXKLM(I),I=1,3)
C        WRITE(IW,9998) (MIKLM(I),I=1,3)
C     ENDIF
C     IF(IGROUP.LE.0) THEN
         NSET=3
         IF(RPTCINT.EQ.ZERO) NSET=2
         RRMAX2(1)=ZERO
         RRMAX2(2)=RCUTINT**2
         RRMAX2(3)=RCUTESP**2
         RRMAX2(4)=RPTCINT**2
C     ELSE
C        NSET=1
C        RRMAX2(1)=ZERO
C        RRMAX2(2)=RCUTESP**2
C     ENDIF
C     START OF CELL LOOP
      NCOUNT=0
      DO II=1,NSET
         DO IK=MIKLM(1),MXKLM(1)
            DO IL=MIKLM(2),MXKLM(2)
               DO IM=MIKLM(3),MXKLM(3)
                  DO IG=1,NSYMOP
                     IF(IK.EQ.K0.AND.IL.EQ.L0.AND.IM.EQ.M0.AND.
     *                  IG.EQ.IG0) GO TO 100
C                    GENERATE CENTERS OF (IK,IL,IM,IG) MOLECULES
                     XYZ(1)=ZERO
                     XYZ(2)=ZERO
                     XYZ(3)=ZERO
                     CALL SYMOLCC(IK,IL,IM,IG,1,XYZ,XYZI,W)
                     R0I=(XYZ0(1)-XYZI(1))**2+(XYZ0(2)-XYZI(2))**2
     *                                       +(XYZ0(3)-XYZI(3))**2
                     IF(R0I.GT.RRMAX2(II).AND.R0I.LE.RRMAX2(II+1)) THEN
                        NCOUNT=NCOUNT+1
                        IF(NCOUNT.GT.MAXKLMS) CALL ABRT
                        KLMS(1,NCOUNT)=IK
                        KLMS(2,NCOUNT)=IL
                        KLMS(3,NCOUNT)=IM
                        KLMS(4,NCOUNT)=IG
                     ENDIF
  100                CONTINUE
                  ENDDO
               ENDDO
            ENDDO
         ENDDO
         IF(II.EQ.1) NGRINT=NCOUNT
         IF(II.EQ.2) NGRESP=NCOUNT
         IF(II.EQ.3) NGRPTC=NCOUNT
      ENDDO
C     IF(IGROUP.EQ.1) THEN
C        NGRTOT=NCOUNT
C        IF(NGRPTC.EQ.0) NGRPTC=NGRTOT
C     ENDIF
C
C     IF(IGROUP.LE.0) THEN
         IF(NSET.EQ.2) NGRPTC=NGRESP
         WRITE(IW,9996) NGRINT,NGRESP,NGRPTC
C     ELSE
C        NGRESP=NGRINT
C        WRITE(IW,9995) IGROUP,NGRINT
C     ENDIF
C     END CELL LOOP
C
C     PRINT LATTICE INDEX LIST
C
      RETURN
C9995 FORMAT(' IGROUP =',I4,/,' NGRESP =',I10)
C9996 FORMAT(' IGROUP =',I4,/,' NGRINT =',I10,/,' NGRINT+NGRESP =',
 9996 FORMAT(1X,' NGRINT =',I10,/,' NGRINT+NGRESP =',
     *         I10,/,' NGRINT+NGRESP+NGRPTC =',I10)
      END
C
C*MODULE FMOPBC  *DECK GENLATV
      SUBROUTINE GENLATV(IFG,L1,L2,N2FMO,KLMS,UNTROT,ESPI,ESPG,R,WRK,
     *                   ESPLAT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL GOPARR,DSKWRK,MASWRK
      PARAMETER (MXATM=2000,MXSH=5000)
C     COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /SYMTRY/ MAPSHL(MXSH,48),MAPCTR(MXATM,48),
     *                TT(432),INVT(48),NT
      COMMON /FMODIM/ MAXBND,MAXKND,MAXCBS,MAXCAO,MAXVEC,MAXL1,MAXNAT,
     *                MAXABD,MAXBAS,MAXBBD,MAXLMO,MAXSLO,MAXABD2
      COMMON /FMORUN/ ESPSCF,E0SCF(2),EMP2S,IDAFMO,ICURFG,JCURFG,KCURFG,
     *                ICURLAY,ICURUNT,NAT1E,NCURSH,NGAU,ICURPOP,IFMOSTP,
     *                MONCOR,NEEDR,MODRST,NORBPROJ,NUNESP,ISKIPESP,
     *                IESDPPC,IDOPROP,MP2RUN,ICURIT
      DIMENSION KLMS(4,*),UNTROT(3,3,*),ESPI(*),ESPG(*),R(*),
     *          WRK(*),ESPLAT(N2FMO,*)
C
C     COMPUTE ROTATED MONOMER POTENTIALS VI FOR ALL GROUP OPERATIONS. 
C     SAVE THEM TO ESPLAT ONLY ON MASTERS TO AVOID DOUBLE COUNTING IN 
C     THE GLOBAL SUMS LATER.
C
C     ASSUME EQUAL IN SIZE FRAGMENTS!
      MAXL2=(MAXL1*MAXL1+MAXL1)/2
      IND=(IFG-1)*MAXL2+1
      IF(MASWRK) CALL DCOPY(L2,ESPI,1,ESPLAT(IND,1),1)
C     IF(MASWRK) WRITE(IW,9000) 1
C     CALL PRTRI(ESPI,L1)
      DO IU=1,NUNESP
        IK=KLMS(1,IU)
        IL=KLMS(2,IU)
        IM=KLMS(3,IU)
        IG=KLMS(4,IU)
        IF(IK.EQ.0.AND.IL.EQ.0.AND.IM.EQ.0) THEN
C         IF(MASWRK) WRITE(IW,9000) IG
          CALL DCOPY(3*3,UNTROT(1,1,IU+1),1,TT,1)
          CALL TRPOSQ(TT,3)
C         NOTE WE PRODUCE INVERSE ROTATION HERE, AS NEEDED BELOW.
          CALL TRMAT
          CALL ROTMOM(R,L1,L1,0,0)
          CALL TFTRI(ESPG,ESPI,R,WRK,L1,L1,L1)
          IF(MASWRK) CALL DCOPY(L2,ESPG,1,ESPLAT(IND,IG),1)
C         CALL PRTRI(ESPG,L1)
        ELSE
C         DO IFG=1,NFG
C           IIFG=IFG
C           CALL MAKEMOL(IIFG,0,0,ILAY,1,0,0,0,0,0,0,.TRUE.)
C         ENDDO
        ENDIF
      ENDDO
      CALL RUNITV(3,3,TT)
      CALL TRMAT
C
      RETURN
C9000 FORMAT(1X,'COMPUTING ESP FOR GROUP OPERATION = ',I2)
      END
C
C*MODULE FMOPBC  *DECK PAIRVIJ
      SUBROUTINE PAIRVIJ(ILAY,IFG,JFG,IU,NATI,NATFMOB,NUNPTC,UNTXYZ,
     *                   CFRG,ESPIJ,ESP1I,ESP1J,CZI,CZJ,DOLAT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL DOLAT 
      DIMENSION UNTXYZ(3,NATFMOB,0:NUNPTC+1),CFRG(*),ESPIJ(*),ESP1I(*),
     *          ESP1J(*),CZI(*),CZJ(*)
      PARAMETER (MXATM=2000,ONE=1.0D+00)
      COMMON /INFOA / NAT,ICH,MUL,NUM,NQMT,NE,NA,NB,
     *                ZAN(MXATM),C(3,MXATM),IAN(MXATM)
      COMMON /FMOLAT/ UNTANG(3),UNTORG(3),RESPBC(4),ABCLAT(3),ANGLAT(3),
     *                SYMTRA(3,24),SYMOPE(3,3,24),IATORG,NSYMOP,MAXKLMS,
     *                IOPORG(3),IOPDIR(3),IOPABC(3),IOPANG(3)
      COMMON /FMORUN/ ESPSCF,E0SCF(2),EMP2S,IDAFMO,ICURFG,JCURFG,KCURFG,
     *                ICURLAY,ICURUNT,NAT1E,NCURSH,NGAU,ICURPOP,IFMOSTP,
     *                MONCOR,NEEDR,MODRST,NORBPROJ,NUNESP,ISKIPESP,
     *                IESDPPC,IDOPROP,MP2RUN,ICURIT
C
      NAT1ES=NAT1E
      NCURSHS=NCURSH
      MAXKLMSS=MAXKLMS
      ISKIPESPS=ISKIPESP
      NUNESPS=NUNESP
C     IFMOSTPS=IFMOSTP
C     MODESPS=MODESP
      NUNESP=0
      IFMOSTP=4
C     MODESP=IAND(MODESP,INOT(4))
      IF(.NOT.DOLAT) MAXKLMS=1
C     (TO TRIGGER FMOATFRG INTO FOLLOWING THE LATTICE CODE).
      ISKIPESP=0
C
C     GENERATE JFG WITH ITS COORDINATES (UNIT CELL IU)
C
      IF(DOLAT) CALL DCOPY(3*NATFMOB,UNTXYZ(1,1,IU),1,CFRG,1)
      CALL CLOSDA('DELETE')
      CALL OPENDA(0)
      CALL MAKEMOL(JFG,0,0,ILAY,0,0,0,0,0,0,0,.TRUE.)
      NATJ=NAT
      L2=(NUM*NUM+NUM)/2
C
C     STORE IFG COORDINATES FOR THE 2E ESP CALCULATION 
C     (IFG IS ALWAYS FROM UNIT CELL 0)
C
      IF(DOLAT) CALL DCOPY(3*NATFMOB,UNTXYZ(1,1,0),1,CFRG,1)
C
C     COMPUTE ESP VJ(I) (STORE IN ESP1J), J-BLOCK. 
C
      NAT1E=NATJ+NATI
      ICURFG=JFG
      JCURFG=IFG
      NCURSH=-1
C     A SILLY WAY TO SIGNAL FMOESP. 
C
C     STORE IFG COORDINATES FOR THE 1E ESP CALCULATION 
C
      CALL DCOPY(NATI,CZI,1,ZAN(NATJ+1),1)
      CALL DCOPY(NATI*3,CZI(NATI+1),1,C(1,NATJ+1),1)
C
      CALL ONEEI
C     WRITE(6,*) 'WWWV1J',JFG
C     CALL PRTRIL(ESPIJ,NUM)
      CALL DAXPY(L2,-ONE,ESPIJ,1,ESP1J,1)
      CALL DCOPY(NATJ,ZAN,1,CZJ,1)
      CALL DCOPY(NATJ*3,C,1,CZJ(NATJ+1),1)
C
C     GENERATE IFG WITH ITS COORDINATES
C
      CALL CLOSDA('DELETE')
      CALL OPENDA(0)
      CALL MAKEMOL(IFG,0,0,ILAY,0,0,0,0,0,0,0,.TRUE.)
      L2=(NUM*NUM+NUM)/2
C
C     STORE JFG COORDINATES FOR THE ESP CALCULATION
C
      IF(DOLAT) CALL DCOPY(3*NATFMOB,UNTXYZ(1,1,IU),1,CFRG,1)
C
C     COMPUTE ESP VI(J) (STORE IN ESP1I), I-BLOCK. 
C
C     NAT1E IS THE SAME.
C
      ICURFG=IFG
      JCURFG=JFG
      NCURSH=-1-IU
      CALL DCOPY(NATJ,CZJ,1,ZAN(NATI+1),1)
      CALL DCOPY(NATJ*3,CZJ(NATJ+1),1,C(1,NATI+1),1)
C
      CALL ONEEI
C     WRITE(6,*) 'WWWV1I',IFG
C     CALL PRTRIL(ESPIJ,NUM)
      CALL DAXPY(L2,-ONE,ESPIJ,1,ESP1I,1)
C
      NCURSH=NCURSHS
      NAT1E=NAT1ES
      NUNESP=NUNESPS
C     MODESP=MODESPS
C     IFMOSTP=IFMOSTPS
      MAXKLMS=MAXKLMSS
      ISKIPESP=ISKIPESPS
C
      IF(DOLAT) CALL DCOPY(3*NATFMOB,UNTXYZ(1,1,IU),1,CFRG,1)
      RETURN
      END
C
C*MODULE FMOPBC  *DECK ROTMO
      SUBROUTINE ROTMO(V,LDV,NMO,L1I,NI,ROTV)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXSH=5000,MXGTOT=20000)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SYMSPD/ PTR(3,144),DTR(6,288),FTR(10,480),GTR(15,720)
      DIMENSION V(LDV,NMO),ROTV(LDV,NMO)
C
C     ROTATE LCAO COEFFICIENTS USING PRECOMPUTED AO TRANSFORMATION MATRICES
C     (SET UP IN TRMAT, FOR A GIVEN ROTATION). IN PLAIN LANGUAGE, FIND THE 
C     NEW MOS, AFTER THE ATOMS ARE ROTATED. 
C     MOS IN V ARE A L1XL1 MATRIX, OF WHICH ONLY THE FIRST NMO ARE ROTATED.
C     ROTATED MOS IN ROTV ARE A L1XL1 MATRIX, ONLY THE FIRST NMO COLUMNS ARE SET
C     (L1I IS THE ARGUMENT TO SHIFT DIMER KLOC INTO MONOMER; 
C     L1 ITSELF IS TACITLY DEFINED BY NSHEL/BASIS SET).
C     THE ROTATION IS EASILY SET UP BY STORING THE ROTATION MATRIX IN TT,
C     ASSIGNING NT=1 AND CALLING TRMAT.
C     NI GIVES THE NUMBER OF SHELLS TO SKIP IN NSHEL (CAN BE 0). 
C
C     CALL PRSQ(PTR,3,3,3)
C     CALL PRSQ(V,LDV,LDV,LDV)
      DO II=NI+1,NSHELL
        MINI=KMIN(II)
        LOCI=KLOC(II)-L1I
        LIT = KTYPE(II)
C       WRITE(6,*) 'WWWI',II,MINI,LOCI,LIT
C       S AND THE S PART OF L: SPHERICALLY SYMMETRIC
        IF(MINI.EQ.1) THEN
          CALL DCOPY(NMO,V(LOCI,1),LDV,ROTV(LOCI,1),LDV)
C         SHIFT TO P FOR L SHELLS
          IF(LIT.EQ.2) LOCI=LOCI+1
        ENDIF
        IF(LIT.EQ.2) THEN
          CALL MRARBR(PTR, 3, 3, 3,V(LOCI,1),LDV,NMO,ROTV(LOCI,1),LDV)
        ELSE IF(LIT.EQ.3) THEN 
          CALL MRARBR(DTR, 6, 6, 6,V(LOCI,1),LDV,NMO,ROTV(LOCI,1),LDV)
        ELSE IF(LIT.EQ.4) THEN
          CALL MRARBR(FTR,10,10,10,V(LOCI,1),LDV,NMO,ROTV(LOCI,1),LDV)
        ELSE IF(LIT.EQ.5) THEN
          CALL MRARBR(GTR,15,15,15,V(LOCI,1),LDV,NMO,ROTV(LOCI,1),LDV)
        ENDIF
      ENDDO
C     CALL PRSQ(ROTV,LDV,LDV,LDV)
      RETURN
      END
C
C*MODULE FMOPBC  *DECK ROTMOM
      SUBROUTINE ROTMOM(R,LDR,L1,NI,L1I)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (MXSH=5000,MXGTOT=20000,ONE=1.0D+00)
      COMMON /NSHEL / EX(MXGTOT),CS(MXGTOT),CP(MXGTOT),CD(MXGTOT),
     *                CF(MXGTOT),CG(MXGTOT),CH(MXGTOT),CI(MXGTOT),
     *                KSTART(MXSH),KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),
     *                KLOC(MXSH),KMIN(MXSH),KMAX(MXSH),NSHELL
      COMMON /SYMSPD/ PTR(3,144),DTR(6,288),FTR(10,480),GTR(15,720)
      DIMENSION R(LDR,L1)
C
C     PREPARE THE L1XL1 MATRIX TO ROTATE MO COEFFICIENTS (LCAO), FOR SOME
C     ROTATION (SEE ROTMO).
C     NI,L1I GIVES THE NUMBER OF SHELLS/AOS TO SKIP (TYPICALLY, 0). 
C
      CALL VCLR(R,1,L1*L1)
      DO II=NI+1,NSHELL
        MINI=KMIN(II)
        LOCI=KLOC(II)-L1I
        LIT = KTYPE(II)
C       WRITE(6,*) 'WWWI',II,MINI,LOCI,LIT
C       S AND THE S PART OF L: SPHERICALLY SYMMETRIC
        IF(MINI.EQ.1) THEN
          R(LOCI,LOCI)=ONE
C         SHIFT TO P FOR L SHELLS
          IF(LIT.EQ.2) LOCI=LOCI+1
        ENDIF
        IF(LIT.EQ.2) THEN
          CALL BLKCPY(PTR,3,3,R,L1,L1,LOCI,LOCI)
        ELSE IF(LIT.EQ.3) THEN 
          CALL BLKCPY(DTR,6,6,R,L1,L1,LOCI,LOCI)
        ELSE IF(LIT.EQ.4) THEN
          CALL BLKCPY(FTR,10,10,R,L1,L1,LOCI,LOCI)
        ELSE IF(LIT.EQ.5) THEN
          CALL BLKCPY(GTR,15,15,R,L1,L1,LOCI,LOCI)
        ENDIF
      ENDDO
C     CALL PRSQ(R,L1,LDR,L1)
      RETURN
      END
C
C*MODULE FMOPBC  *DECK SYMOLCC
      SUBROUTINE SYMOLCC(IK,IL,IM,IG,NAT,CCINP,CCOUT,TRMAT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /FMOLAT/ UNTANG(3),UNTORG(3),RESPBC(4),ABCLAT(3),ANGLAT(3),
     *                SYMTRA(3,24),SYMOPE(3,3,24),IATORG,NSYMOP,MAXKLMS,
     *                IOPORG(3),IOPDIR(3),IOPABC(3),IOPANG(3)
      DIMENSION CCINP(3,*),CCOUT(3,*),TRMAT(3,3)
      DIMENSION U(3,3),UINV(3,3),V(3,3)
C
C     GENERATES MOLECULES BY SYMMETRY OPERATIONS, (KK,LL,MM,IG).
C     FORM U * TG * U**-1, 
C     U UNIT REORIENTATION MATRIX (FROM UNTLAT)
C     TG GROUP SYMMETRY OPERATION. 
      CALL TXCTOX(U,IERR)
      CALL MATINV3(U,UINV,IERR)
      CALL MRARBR(SYMOPE(1,1,IG),3,3,3,UINV,3,3,V,3)
      CALL MRARBR(U,3,3,3,V,3,3,TRMAT,3)
C     CALL PRSQ(TRMAT,3,3,3)
C
C     TRANSLATION IN CELL COORDINATES
      XF=UNTORG(1)+IK+SYMTRA(1,IG)
      YF=UNTORG(2)+IL+SYMTRA(2,IG)
      ZF=UNTORG(3)+IM+SYMTRA(3,IG)
C     TRANSLATION IN CARTESIAN COORDINATES
      TX=U(1,1)*XF+U(1,2)*YF+U(1,3)*ZF
      TY=U(2,1)*XF+U(2,2)*YF+U(2,3)*ZF
      TZ=U(3,1)*XF+U(3,2)*YF+U(3,3)*ZF
C     GENERATE ATOMIC COORDINATES
      DO I=1,NAT
         XF=CCINP(1,I)
         YF=CCINP(2,I)
         ZF=CCINP(3,I)
         CCOUT(1,I)=TRMAT(1,1)*XF+TRMAT(1,2)*YF+TRMAT(1,3)*ZF+TX
         CCOUT(2,I)=TRMAT(2,1)*XF+TRMAT(2,2)*YF+TRMAT(2,3)*ZF+TY
         CCOUT(3,I)=TRMAT(3,1)*XF+TRMAT(3,2)*YF+TRMAT(3,3)*ZF+TZ
C        WRITE(6,*) 'XYZ',CCOUT(1,I)-TX,CCOUT(2,I)-TY,CCOUT(3,I)-TZ
      ENDDO
C     CALL PRSQ(CCINP,NAT,3,3)
C     WRITE(6,*) ' '
C     CALL PRSQ(CCOUT,NAT,3,3)
C
C     IF(IDEBUG.EQ.1) THEN
C        WRITE(IW,9999) IK,IL,IM,IG
C        CALL PRTMOLCC(NAT,IAN,CCOUT)
C     ENDIF
      RETURN
C9999 FORMAT(' SYMOLCC: GENERATED ATOMIC CARTESIAN COORDINATES (A)',/,
C    *       '          FOR (K,L,M,IS)=(',4I3,' )')
      END
C
C*MODULE FMOPBC  *DECK TXCTOX
      SUBROUTINE TXCTOX(U,IERR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (ZERO=0.0D+00,ONE=1.0D+00,EPS=1.0D-16)
      COMMON /FMOLAT/ UNTANG(3),UNTORG(3),RESPBC(4),ABCLAT(3),ANGLAT(3),
     *                SYMTRA(3,24),SYMOPE(3,3,24),IATORG,NSYMOP,MAXKLMS,
     *                IOPORG(3),IOPDIR(3),IOPABC(3),IOPANG(3)
      DIMENSION U(3,3)
C     U ... TRANSFORMATION MATRIX FROM FRACTIONAL COORDINATES
C           TO CARTESSIAN COORDINATES, X(CC)=U*X(FC).
C     PUT B-AXIS IN Y-AXIS AND A-AXIS IN (X,Y)-PLANE, AND C-AXIS IN Z-AXIS.
C
      IERR=0
      A=ABCLAT(1)  
      B=ABCLAT(2)  
      C=ABCLAT(3)  
      COS4=COS(ANGLAT(1))
      COS5=COS(ANGLAT(2))
      COS6=COS(ANGLAT(3))
      SIN6=SIN(ANGLAT(3))
      IF(ABS(SIN6).LT.EPS) THEN
         IERR=1
         RETURN
      ENDIF
      V = (COS5-COS4*COS6)
      VV=ONE-COS4*COS4-COS5*V-COS6*(COS6-COS4*COS5)
      VV=SQRT(VV)
      V = V/SIN6
      U(1,1)=A*SIN6
      U(1,2)=ZERO
      U(1,3)=C*V
      U(2,1)=A*COS6
      U(2,2)=B
      U(2,3)=C*COS4
      U(3,1)=ZERO
      U(3,2)=ZERO
      U(3,3)=C*VV/SIN6
      RETURN
      END
C
C*MODULE FMOPBC  *DECK UNIQPAIR
      SUBROUTINE UNIQPAIR(FMOZAN,UNTXYZ,UNITNR,NSYMEQ,NATFMOB,NUNPTC,
     *                    IU1,IU2,NSU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL GOPARR,DSKWRK,MASWRK
      PARAMETER (TOL=1.0D-10,NP=24)
      COMMON /IOFILE/ IR,IW,IP,IS,IPK,IDAF,NAV,IODA(950)
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      COMMON /FMOINF/ NFG,NLAYER,NATFMO,NBDFG,NAOTYP,NBODY
      DIMENSION FMOZAN(*),UNTXYZ(3,NATFMOB,0:NUNPTC),UNITNR(*),
     *          NSYMEQ(*),LP(NP)
C
C     24 - ROUGHLY CORRESPONDS TO THE GROUP OPERATIONS 
C
      NTOT=0
      NSU=0
      DO IU=IU1,IU2
        EN=0
        DO IAT=1,NATFMO
          CX=UNTXYZ(1,IAT,0)
          CY=UNTXYZ(2,IAT,0)
          CZ=UNTXYZ(3,IAT,0)
          ZA=FMOZAN(IAT)
          DO JAT=1,NATFMO
            EN=EN+ZA*FMOZAN(JAT)/SQRT((UNTXYZ(1,JAT,IU)-CX)**2+
     *               (UNTXYZ(2,JAT,IU)-CY)**2+(UNTXYZ(3,JAT,IU)-CZ)**2)
          ENDDO
        ENDDO
        UNITNR(IU)=EN
C
        NSYMEQ(IU)=1
        DO JU=IU1,IU-1
          IF(ABS(EN-UNITNR(JU)).LT.TOL) THEN
            NSYMEQ(JU)=NSYMEQ(JU)+1
            NSYMEQ(IU)=-JU
            UNITNR(IU)=0
            GOTO 100
          ENDIF
        ENDDO
        NSU=NSU+1
  100   CONTINUE
        NTOT=NTOT+1
      ENDDO
      IF(MASWRK) THEN
        WRITE(IW,9900)
        DO IU=IU1,IU2
          IF(NSYMEQ(IU).GT.0) THEN
            II=0 
            DO JU=IU+1,IU2
              IF(NSYMEQ(JU).EQ.-IU.AND.II.LT.NP) THEN
                II=II+1 
                LP(II)=JU
              ENDIF
            ENDDO
            WRITE(IW,9910) IU,NSYMEQ(IU),(LP(I),I=1,II)
          ENDIF
        ENDDO
        WRITE(IW,9920) NTOT,NSU
      ENDIF
      RETURN
 9900 FORMAT(1X,'EQUIVALENT GROUPS ARE:',/1X,'  I    NI  EQUIV GROUPS')
 9910 FORMAT(I5,I5,9999(I5))
 9920 FORMAT(1X,'TOTAL NUMBER OF GROUPS=',I5,', UNIQUE=',I5,/)
      END
C
C*MODULE FMOPBC  *DECK PBCVIJ
      SUBROUTINE ADDV2(L1,L2,MAPI,MAPJ,VI,VJ,VIJ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAPI(*),MAPJ(*),VI(*),VJ(*),VIJ(*)
C
      CALL VCLR(VIJ,1,L2)
      LOOP=0
      DO I=1,L1
        II=MAPI(I)
        JI=MAPJ(I)
        DO J=1,I
          LOOP=LOOP+1
          IJ=MAPI(J)
          JJ=MAPJ(J)
C         FILL THE I-BLOCK, AS V(I)-VI(J)
          IF(II.NE.0.AND.IJ.NE.0) THEN
            II1=MAX(II,IJ)
            IJ1=MIN(II,IJ)
            LOOPI=(II1*II1-II1)/2+IJ1 
            VIJ(LOOP)=VI(LOOPI)
          ENDIF
C         FILL THE J-BLOCK, AS V(J)-VJ(I)
          IF(JI.NE.0.AND.JJ.NE.0) THEN
            JI1=MAX(JI,JJ)
            JJ1=MIN(JI,JJ)
            LOOPJ=(JI1*JI1-JI1)/2+JJ1
C           VIJ(LOOP)=VIJ(LOOP)+VJ(LOOPJ)
            VIJ(LOOP)=VJ(LOOPJ)
C           THE OVERLAPPING PIECE IS COMPUTED TWICE (IN I AND J),
C           WITH EXACTLY THE SAME VALUES, SINCE IT CORRESPONDS
C           TO THE EFFECT OF ENVIRONMENT UPON THE "AO" JUNCTION OF
C           TWO CONNECTED FRAGMENTS. THE VALUES SHOLD NOT BE ADDED. 
          ENDIF
        ENDDO
      ENDDO
C     CALL PRTRIL(VIJ,L1)
C     CALL VCLR(VIJ,1,L2)  
      RETURN
      END
C*MODULE FMOPBC  *DECK LATRIJ
      SUBROUTINE LATRIJ(IFG,INDAT,FMOZAN,NATFMOB,UNTXYZ,IABDFG,JABDFG,
     *                  RIJ,RWRK,VDWRAD,NUNPTC,NSYMEQ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION INDAT(*),FMOZAN(*),UNTXYZ(3,NATFMOB,*),IABDFG(*),
     *          JABDFG(*),VDWRAD(*),RIJ(*),RWRK(*),NSYMEQ(*)
      COMMON /FMOINF/ NFG,NLAYER,NATFMO,NBDFG,NAOTYP,NBODY
C
      MFG2=(NFG*NFG-NFG)/2
      NOFF=MFG2+(IFG-1)*NFG+1
      DO IU=1,NUNPTC
C       SKIP SYMMETRY EQUIVALENT GROUPS.
        IF(NSYMEQ(IU).GT.0) THEN
          CALL MONOR(.FALSE.,IFG,INDAT,FMOZAN,UNTXYZ(1,1,IU+1),IABDFG,
     *               JABDFG,RIJ(NOFF),RWRK,VDWRAD,0,0.0D+00)
          NOFF=NOFF+NFG*NFG
        ENDIF
      ENDDO
C     WRITE(6,*) 'WWWRR',(RIJ(MFG2+I),I=1,NUNPTC)
      RETURN
      END

C 27 Feb 13 - MWS - smooth out a few arguments by FTNCHEK
C 30 SEP 99 - MWS - CHANGE GRAPHICS CODES FOR DDI INSTEAD OF TCGMSG
C 20 JAN 92 - MWS - ELIMINATE INITIALIZATION OF FILENM IN OPNSE
C 15 SEP 90 - MWS - ELIMINATE THE UPCASE ROUTINE
C  1 AUG 90 - MWS - SYMBL: CHANGES FOR CRAY AND AIX
C 12 MAR 90 - MWS - CREATE UTILITY ROUTINE FILE FOR PLOTTING CODES
C
C     --------------------
      SUBROUTINE ABT(IOUT)
C     --------------------
C
C     ----- FATAL ERROR DETECTED, KILL THE JOB -----
C
      MSG=IOUT
      IF(MSG.LE.0) MSG=6
      WRITE(MSG,900)
  900 FORMAT(//1X,'*** EXECUTION TERMINATED BY FATAL ERROR')
C
*VMS  CALL LIB$STOP(%VAL(0))
      STOP
      END
C     ---------------
      SUBROUTINE ABRT
C     ---------------
  900 FORMAT(//1X,'*** EXECUTION TERMINATED IN -ABRT-')
      WRITE(6,900)
      STOP
      END
C     ------------------------
      SUBROUTINE DATEOF(BIRTH)
C     ------------------------
      CHARACTER*24 BIRTH
C
C        PROVIDE 24 CHARACTER TIME STAMP.  VAX VERSION BELOW:
C        RETURNING BLANKS IS PERFECTLY ACCEPTABLE
C
      BIRTH = '                       '
C        8 CHARACTER HH:MM:SS STRING
*VMS  CALL TIME(BIRTH(1:8))
C        9 CHARACTER DD-MMM-YY STRING
*VMS  CALL DATE(BIRTH(12:20))
      RETURN
      END
C     -----------------------
      SUBROUTINE DMPINP(IOUT)
C     -----------------------
C
C     ----- PRINT ANY REMAINING INPUT CARDS, AND KILL JOB -----
C
      MSG=IOUT
      IF(MSG.LE.0) MSG=6
      WRITE(MSG,900)
      IEOF=0
  100 CONTINUE
         CALL RDCARD('DMPINP  ',IEOF)
         IF(IEOF.NE.0) GO TO 200
         GO TO 100
C
  200 CONTINUE
      CALL ABT(MSG)
      STOP
C
  900 FORMAT(1X,'THIS RUN WAS CANCELED FOR THE REASON PRINTED ABOVE'/
     *       1X,'THE REST OF YOUR INPUT CARDS ARE PRINTED BELOW')
      END
C     ------------------------------------------------
      SUBROUTINE OPNSEQ(IUNIT,FNAME,FSTAT,RDONLY,FMTD)
C     ------------------------------------------------
      IMPLICIT REAL(A-H,O-Z)
      CHARACTER*(*) FNAME,FSTAT
      LOGICAL RDONLY,FMTD
      CHARACTER*11 FMT
      CHARACTER*256 FILNAM
C
C         OPEN SEQUENTIAL FILE -IUNIT- WITH GENERIC NAME -FNAME-
C         WITH STATUS -FSTAT-, EITHER READONLY/READWRITE, AND
C         WITH FOR FORMATTED OR UNFORMATTED I/O.
C
      FMT='UNFORMATTED'
      IF(FMTD) FMT='FORMATTED'
C
*VMS  IF(RDONLY) THEN
*VMS     OPEN(UNIT=IUNIT, FILE=FNAME, STATUS=FSTAT, READONLY,
*VMS *        ACCESS='SEQUENTIAL', FORM=FMT, SHARED)
*VMS  ELSE
*VMS     OPEN(UNIT=IUNIT, FILE=FNAME, STATUS=FSTAT,
*VMS *        ACCESS='SEQUENTIAL', FORM=FMT)
*VMS  END IF
C
      CALL GETENV(FNAME,FILNAM)
      IF(FILNAM(1:1).EQ.' ') THEN
         WRITE(6,1) FNAME
         STOP
      END IF
      OPEN(UNIT=IUNIT, FILE=FILNAM, STATUS=FSTAT,
     *     ACCESS='SEQUENTIAL', FORM=FMT)
    1 FORMAT(1X,'You must assign generic name ',A,' with a SETENV.')
C
*IBM  OPEN(UNIT=IUNIT, FILE=FNAME, STATUS=FSTAT,
*IBM *     ACCESS='SEQUENTIAL', FORM=FMT)
      RETURN
      END
C     ------------------------------
      SUBROUTINE SQWRIT(IUNIT,A,LEN)
C     ------------------------------
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION A(LEN)
      WRITE(IUNIT) A
      RETURN
      END
C     ------------------------------
      SUBROUTINE SQREAD(IUNIT,A,LEN)
C     ------------------------------
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION A(LEN)
      READ(IUNIT, END=200, ERR=300) A
C
C                  END OF FILE
C        THIS IS HANDLED BY RETURNING ZERO LENGTH READ, SO THE CALLER
C        CAN DETERMINE IF THIS IS REALLY AN ERROR, OR WAS EXPECTED.
C
  200 CONTINUE
      LEN=0
      RETURN
C
C                  ERROR READING FILE, PULL THE PLUG ON THE JOB
C
  300 CONTINUE
      IOUT=6
      WRITE(IOUT,9000) IUNIT,LEN
      CALL ABT(IOUT)
 9000 FORMAT(1X,'ERROR READING FILE',I4,' LENGTH=',I10)
      RETURN
      END
C     ---------------------------------------------
      SUBROUTINE SYMBL(X,Y,HITE,STRING,ANGLE,NCHAR)
C     ---------------------------------------------
      REAL X,Y,HITE,ANGLE
      LOGICAL SINGLE
      INTEGER PACKED(20)
      CHARACTER*(*) STRING
      CHARACTER*80 PADDED
C
C        THIS IS A VERSION OF -SYMBOL- THAT LETS YOU USE
C        A CHARACTER STRING RATHER THAN A NUMERIC ARRAY
C        TO HOLD THE DESIRED STRING.  IF YOU ARE USING THE
C        SPECIAL MARKER OPTION (NEGATIVE NCHAR) YOU SHOULD
C        CALL -SYMBOL- DIRECTLY, NOT -SYMBL-.
C
      SINGLE=.FALSE.
*CRY  SINGLE=.TRUE.
      IF(NCHAR.GT.0) THEN
         PADDED(1:NCHAR) = STRING(1:NCHAR)
         IMIN = NCHAR+1
         IMAX = MIN(80,NCHAR+7)
         DO 100 I=IMIN,IMAX
            PADDED(I:I) = ' '
  100    CONTINUE
         IF(SINGLE) THEN
            NWORD = (NCHAR+7)/8
            READ(UNIT=PADDED,FMT=900,ERR=400) (PACKED(I),I=1,NWORD)
         ELSE
            NWORD = (NCHAR+3)/4
            READ(UNIT=PADDED,FMT=910,ERR=400) (PACKED(I),I=1,NWORD)
         END IF
         CALL SYMBOL(X,Y,HITE,PACKED,ANGLE,NCHAR)
      ELSE
         WRITE(6,*) 'IN -SYMBL-, YOU SHOULD CALL -SYMBOL- WITH AN O!'
         STOP
      END IF
      RETURN
C
  400 CONTINUE
      WRITE(6,920) STRING
      RETURN
C
  900 FORMAT(10A8)
  910 FORMAT(20A4)
  920 FORMAT(1X,'ERROR FORMATTING STRING=',A)
      END
C     -----------------------------------------------------
      SUBROUTINE DDI_BCAST( MSGTAG, TYPE, BUFF, LEN, FROM )
C     -----------------------------------------------------
      RETURN
      END

C 16 May 08 - MWS - modify to plot kinetic energy interference
C 22 FEB 02 - MWS - OPTION TO SKIP BOUNDING BOX AND TITLES
C 26 APR 93 - MWS - REMOVE PANSOPHICS VERSION
C 25 FEB 93 - MWS - NUMBER OF ATOMS AND BONDS MUST MATCH PLTORB
C 16 JUN 92 - MWS - MAKE SURE THIS PROGRAM RUNS SERIALLY
C  7 JAN 92 - MWS - ADD POSTSCRIPT VERSION
C 18 MAR 91 - MK  - FIX SIZE OPTION BY ADDING TO OPTDEN CALL LIST
C 28 JUL 90 - JAB - ADD CSTART OPTION, RENAME CUTOFF TO CSTOP
C 14 JUN 90 - MWS - INCREASE MAXIMUM NUMBER OF PLOTS
C 20 MAR 90 - MWS - X-WINDOWS VERSION
C 24 MAR 87 - MWS - WHOLESALE CLEANUP
C*DECK DENDIF
      PROGRAM DENDIF
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL R4SIZE
      LOGICAL PRTGRD,BOX,FULLGRID
      LOGICAL GOPARR,DSKWRK,MASWRK
      PARAMETER (MESH=101, MXATOM=500, MXBOND=1000, MXMOS=512)
      DIMENSION GRID(MESH,MESH),WORK(MESH,MESH),
     *          XC(MXATOM),YC(MXATOM),ZC(MXATOM),
     *          XX(MXATOM),YY(MXATOM),ZZ(MXATOM),
     *          IBOND(MXBOND),JBOND(MXBOND),OCCUP(MXMOS),
     *          CORNER(3),DX(3,2),T(3,3),XO(3),XIMIN(2),XIMAX(2)
      CHARACTER*4  ATOM(MXATOM)
      CHARACTER*24 BIRTH
*XW   INTEGER WNAME(3)
*PS   INTEGER WNAME(3)
      CHARACTER*40 LAB1,LAB2
      COMMON /PAR   / ME,MASTER,NPROC,IBTYP,IPTIM,GOPARR,DSKWRK,MASWRK
      PARAMETER (ZERO=0.0D+00, TWO=2.0D+00, HALF=0.5D+00, BIG=1.0D+10,
     *           PI=3.14159 26535 89793D+00)
*XW   DATA WNAME/4HDEND,4HIF  ,0/
*PS   DATA WNAME/4HDEND,4HIF  ,0/
C
C        This program computes the total molecular density,
C        or a density difference map.  A contour plot of
C        the result is drawn.
C
C        This program was written to produce total density maps
C        by Jerry Boatz on April 29, 1984.  It was modified to
C        plot density differences by Thanh Truong on May 20, 1984.
C        This program was cleaned up and ported into the VAX/VMS
C        environment, using the Calcomp interface in the GKS
C        software package sold by Pansophic Systems, Inc,
C        by Mike Schmidt.  All three persons worked in the research
C        group of Professor Gordon at North Dakota State University.
C
C        For more information on this program, contact
C           Michael W. Schmidt
C           201 Spedding Hall
C           Iowa State University
C           Ames, IA 50011
C        or send electronic mail to MIKE@SI.MSG.CHEM.IASTATE.EDU
C
C           THIS PROGRAM RUNS IN SEQUENTIAL MODE
C
      ME = 0
      MASTER = 0
      NPROC = 1
      MASWRK = ME.EQ.MASTER
      DSKWRK = .FALSE.
C
C           DEFINE FILES USED, OPEN CARD INPUT AND PRINT OUTPUT
C
      IINP   = 1
      IOUT   = 2
*XW   IR     = 5
*XW   IW     = 6
      IOMO   = 20
      CALL OPNSEQ(IINP,'DDFINP',    'OLD', .TRUE., .TRUE.)
      CALL OPNSEQ(IOUT,'DDFLOG','UNKNOWN',.FALSE., .TRUE.)
      CALL OPNCRD(IINP,IOUT)
      CALL DATEOF(BIRTH)
      WRITE(IOUT,900) BIRTH
C
C           READ INPUT OPTIONS
C
      CALL OPTDEN(IOUT,DELTA,CSTART,CSTOP,MINUS,KOLOR,PRTGRD,
     *            BOX,SIZE,IPLOTD,LAB1,LAB2)
C
C           GET COORDINATES OF THE FIRST DENSITY MAP
C
      CALL COORDS(IOUT,IOMO,0,NATOMS,NBONDS,NPLOTS,IDERIV,
     *            ATOM,XC,YC,ZC,XX,YY,ZZ,IBOND,JBOND,
     *            T,XO,XIMIN,XIMAX,MXATOM,MXBOND)
C
C           FORM TOTAL DENSITY MAP
C
      CALL PSISQR(IOUT,IOMO,GRID,WORK,MESH,OCCUP,NPLOTS,
     *            IDERIV,IPLOTD)
      IF(PRTGRD) CALL PRGRID(IOUT,'TOTAL DENSITY',GRID,MESH)
C
C           SUBTRACT ANY DESIRED DENSITY MAPS
C
      DO 100 I=1,MINUS
         IOMO = 20 + I
         CALL COORDS(IOUT,IOMO,1,NATOMS,NBONDS,NPLOTS,IDERIV,
     *               ATOM,XC,YC,ZC,XX,YY,ZZ,IBOND,JBOND,
     *               T,XO,XIMIN,XIMAX,MXATOM,MXBOND)
         CALL SUBDEN(IOUT,IOMO,GRID,WORK,MESH,OCCUP,NPLOTS,
     *               IDERIV,IPLOTD)
  100 CONTINUE
C
C        kinetic energy has a factor of 1/2 to be included now.
C        note that this factor is not included if drawing components!
C
      IF(IDERIV.GT.0  .AND.  IPLOTD.EQ.0) THEN
         DO JJ=1,MESH
            DO II=1,MESH
               GRID(II,JJ) = HALF * GRID(II,JJ)
            ENDDO
         ENDDO
      ENDIF
C
C        possible printing of the final grid
C
      IF(MINUS.GT.0 .AND. PRTGRD)
     *        CALL PRGRID(IOUT,'DENSITY DIFFERENCE',GRID,MESH)
C
C        user customizable output of final grid:
C
      FULLGRID=.FALSE.
      IF(FULLGRID) THEN
         DO I=1,3
            CORNER(I)=T(I,1)*XIMIN(1)+T(I,2)*XIMIN(2)+XO(I)
            DO J=1,2
               DX(I,J)=T(I,J)*(XIMAX(J)-XIMIN(J))/(MESH-1)
            ENDDO
         ENDDO
         II = (MESH+1)/2
         WRITE(IOUT,*) 'function values computed along P-y direction'
         DO JJ=1,MESH
C--         DO II=1,MESH
               XPT=CORNER(1)+(II-1)*DX(1,1)+(JJ-1)*DX(1,2)
               YPT=CORNER(2)+(II-1)*DX(2,1)+(JJ-1)*DX(2,2)
               ZPT=CORNER(3)+(II-1)*DX(3,1)+(JJ-1)*DX(3,2)
               WRITE(IOUT,8123) XPT,YPT,ZPT,GRID(II,JJ)
C--         ENDDO
         ENDDO
      END IF
 8123 FORMAT(1X,'X,Y,Z=',3F10.6,1X,'FUNCTION=',F15.10)
C
C           SCALE THE PLOT.
C     640X480 PIXELS IS 13.3X10 INCHES, WITH 1.5 INCHES
C     OF THE X DIRECTION RESERVED FOR TITLES.
C
      SCAL1 = 11.8D+00/(XIMAX(1)-XIMIN(1))
      SCAL2 = 10.0D+00/(XIMAX(2)-XIMIN(2))
      SCALE = MIN(SCAL1,SCAL2)
      WIDTH  = SCALE*(XIMAX(1)-XIMIN(1))
      HEIGHT = SCALE*(XIMAX(2)-XIMIN(2))
      THETA  = ZERO
      PHI    = PI/TWO
C
C           DETERMINE THE NUMBER OF CONTOURS
C
      GMIN = BIG
      GMAX =-BIG
      DO 320 I=1,MESH
         DO 310 J=1,MESH
            GMAX = MAX(GMAX,GRID(I,J))
            GMIN = MIN(GMIN,GRID(I,J))
  310    CONTINUE
  320 CONTINUE
      GGMAX=MIN(GMAX, CSTOP)
      GGMIN=MAX(GMIN,-CSTOP)
      NPCON = INT( (GGMAX-CSTART)/DELTA)
      NNCON = INT(-(GGMIN+CSTART)/DELTA)
      IF(GMAX.LT.ZERO) NPCON=0
      IF(GMIN.GT.ZERO) NNCON=0
      NZCON=0
      IF(GMIN*GMAX.LT.ZERO) NZCON=1
      CONMIN = -DELTA*NNCON - CSTART
      IF (NNCON.EQ.0) CONMIN = CSTART
      CONMAX =  DELTA*NPCON + CSTART
      IF (NPCON.EQ.0) CONMAX = -CSTART
      NCCN = NNCON + NPCON + NZCON
      WRITE(IOUT,920) LAB1,LAB2,NCCN,DELTA,GMIN,GMAX,CONMIN,CONMAX
      IF (CSTART.GT.ZERO) THEN
         IF (MINUS.EQ.0) WRITE(IOUT,930) CSTART
         IF (MINUS.GT.0) WRITE(IOUT,935) CSTART
      END IF
      IF (NCCN.LE.1) WRITE (IOUT,980)
      IF (NCCN.LE.1) STOP
C
C     ----- OPEN THE CALCOMP PLOTTING SYSTEM -----
C
C               BOUNDARIES 1/2 INCH WIDER THAN 13.3 X 10.0
C               ORIGIN IS RAISED 1/4 INCH FROM LOWER LEFT CORNER.
C
      R4SIZE = REAL(SIZE)
*XW   CALL OPENCC(13.8,10.5,1,WNAME)
*XW   CALL PLOT(0.25,0.25,-3)
*XW   CALL FACTOR(R4SIZE)
*XW   CALL NEWPEN(KOLOR)
C
C               PostScript OPEN
C
*PS   CALL OPENPS(13.8,10.5,1,WNAME)
*PS   CALL PLOT(0.25,0.25,-3)
*PS   CALL FACTOR(R4SIZE)
C
C           DRAW A CONTOUR PLOT
C
      CALL BORDER(BOX,WIDTH,HEIGHT,SCALE,XO,T,XIMIN,
     *            IBOND,JBOND,NBONDS,XX,YY,XC,YC,ZC,
     *            NATOMS,LAB1,LAB2,'DENDIF',BIRTH)
      CALL KONTRS(GRID,MESH,MESH,NNCON,NPCON,NZCON,
     *            DELTA,ZERO,0,CSTART,HEIGHT,WIDTH,
     *            THETA,PHI)
C
C           CLOSE THE CALCOMP PLOTTING SYSTEM
C
*XW   CALL FLSHCC
*XW   WRITE(IW,*) 'HIT <RETURN> TO EXIT.'
*XW   READ(IR,*)
*XW   CALL CLOSCC
C
*PS   CALL EJCTPS
*PS   CALL CLOSPS
      WRITE(IOUT,940)
      STOP
C
  900 FORMAT(1X,'* * * PROGRAM DENDIF * * * ENTERED AT ',A)
  920 FORMAT(///1X,27('- ')/
     *       1X,'TOTAL DENSITY/DENSITY DIFFERENCE PLOT',
     *           ' CHARACTERISTICS'/
     *        1X,'TITLE>',A40/1X,'     >',A40/
     *        1X,'THE PLOT CONTAINS',I4,' CONTOURS, AT',
     *           ' SPACING',F8.4,' ELECTRONS/BOHR**3'/
     *        1X,'MINIMUM,MAXIMUM ELECTRON DENSITY IS',2F11.5/
     *        1X,' MINIMUM,MAXIMUM CONTOURS DRAWN ARE',2F11.5)
  930 FORMAT(1X,' CONTOURS START AT',F11.5)
  935 FORMAT(1X,' CONTOURS START AT +/-',F11.5)
  940 FORMAT(1X,'EXITING PROGRAM DENDIF NORMALLY')
  980 FORMAT(1X,'NO CONTOUR MAP IS GENERATED, THE GRID IS A CONSTANT')
      END
C*DECK OPTDEN
      SUBROUTINE OPTDEN(IOUT,DELTA,CSTART,CSTOP,MINUS,KOLOR,PRTGRD,
     *                  BOX,SIZE,IPLOTD,LAB1,LAB2)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL PRTGRD,BOX
      CHARACTER*8 KEYWRD
      CHARACTER*40 LAB1,LAB2
      PARAMETER (ZERO=0.0D+00)
C
C        ----- READ RUNTIME OPTIONS -----
C
      CSTART = ZERO
      CSTOP  = ZERO
      DELTA  = ZERO
      BOX    = .TRUE.
      SIZE   = 1.0D+00
      MINUS  = 0
      KOLOR  = 1
      PRTGRD = .FALSE.
      IPLOTD = 0
C
C           READ OPTION CARDS
C
      IERR=0
      IEOF=0
  100 CONTINUE
      CALL RDCARD('OPTDEN  ',IEOF)
      IF(IEOF.NE.0) GO TO 800
C
C           SCAN OFF THE NEXT KEYWORD
C
  110 CONTINUE
      CALL GSTRNG(KEYWRD,-8)
      IF(KEYWRD.EQ.'        ') GO TO 100
C
      IF(KEYWRD.EQ.'DELTA   ') THEN
         DELTA = RFIND('DELTA   ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'CSTART  ') THEN
         CSTART = RFIND('CSTART  ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'CSTOP   ') THEN
         CSTOP = RFIND('CSTOP   ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'NOBOX   ') THEN
         BOX = .FALSE.
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'SIZE    ') THEN
         SIZE = RFIND('SIZE    ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'MINUS   ') THEN
         MINUS = IFIND('MINUS   ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'KOLOR   ') THEN
         KOLOR = IFIND('KOLOR   ',IERR)
         IF(IERR.NE.0) GO TO 700
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'GRID    ') THEN
         PRTGRD=.TRUE.
         GO TO 110
      END IF
C
C        -IPLOTD- being zero sums orbitals phi, or the kinetic energy
C        integrands: del(phi) dot del(phi), depending on which of these
C        is found in the grid files passed from -PLTORB-.
C        Next allows for computing kinetic energy components,
C        instead of totals.
C
      IF(KEYWRD.EQ.'D/DX**2 ') THEN
         IPLOTD=1
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'D/DY**2 ') THEN
         IPLOTD=2
         GO TO 110
      END IF
      IF(KEYWRD.EQ.'D/DZ**2 ') THEN
         IPLOTD=3
         GO TO 110
      END IF
C
C        IF YOU GET HERE, IT MUST BE A TITLE
C
      CALL REREAD
      CALL GSTRNG(LAB1,40)
      CALL GSTRNG(LAB2,40)
C
      IF(MINUS.EQ.0) THEN
         IF(DELTA.EQ.ZERO) DELTA=0.050D+00
         IF(CSTOP.EQ.ZERO) CSTOP=1.000D+00
      ELSE
         IF(DELTA.EQ.ZERO) DELTA=0.001D+00
         IF(CSTOP.EQ.ZERO) CSTOP=0.100D+00
      END IF
      RETURN
C
C        ERROR IN SCAN, OR END OF FILE ON INPUT
C
  700 CONTINUE
      WRITE(IOUT,910)
      STOP
C
  800 CONTINUE
      WRITE(IOUT,920)
      STOP
C
  910 FORMAT(1X,'***** ERROR READING DATA FROM OPTION CARD, STOPPING')
  920 FORMAT(1X,'***** UNEXPECTED END OF FILE READING OPTIONS')
      END
C*DECK COORDS
      SUBROUTINE COORDS(IOUT,IOMO,MODE,NATOMS,NBONDS,NPLOTS,IDERIV,
     *                  ATOM,XC,YC,ZC,XX,YY,ZZ,IBOND,JBOND,
     *                  T,XO,XIMIN,XIMAX,MXATOM,MXBOND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION XC(MXATOM),YC(MXATOM),ZC(MXATOM),
     *          XX(MXATOM),YY(MXATOM),ZZ(MXATOM),
     *          IBOND(MXBOND),JBOND(MXBOND),
     *          T(3,3),XO(3),XIMIN(2),XIMAX(2),
     *          TS(3,3),XOS(3),XIMINS(2),XIMAXS(2)
      CHARACTER*4  ATOM(MXATOM)
      CHARACTER*4  KINDFL
      CHARACTER*24 BIRTH
      CHARACTER*6  GENNAM
      PARAMETER (SMALL=1.0D-02)
      DIFF(X,Y) = ABS(X-Y)
C
C     ----- READ HEADER INFORMATION FROM THE MO GRID FILE -----
C     THIS FILE IS PRODUCED BY PROGRAM PLTORB.  MODE DETERMINES
C     WHETHER THE FILE PROCESSED IS THE FIRST FILE (MODE=0) OR
C     IF THIS FILE IS TO BE SUBTRACTED FROM THE FIRST FILE (MODE=1).
C      FILE IS OPENED WITH GENERIC NAME FOR020, FOR021, ...
C
      WRITE(UNIT=GENNAM,FMT='(A4,I2)') 'FOR0',IOMO
      CALL OPNSEQ(IOMO,  GENNAM,    'OLD', .TRUE.,.FALSE.)
      REWIND IOMO
      IF(MODE.EQ.0) THEN
         READ (IOMO,END=850,ERR=850) KINDFL,BIRTH,NATOM,NAO,NMO,
     *                               IDERIVS,NPLOTS,NBOND
         READ (IOMO,END=850,ERR=850) ATOM,XX,YY,ZZ
         READ (IOMO,END=850,ERR=850) IBOND,JBOND
         READ (IOMO,END=850,ERR=850) TS,XOS,XIMINS,XIMAXS
      ELSE
         READ (IOMO,END=850,ERR=850) KINDFL,BIRTH,NATOM,NAO,NMO,
     *                               IDERIVS,NPLOTS,NBOND
         READ (IOMO,END=850,ERR=850) ATOM,XX,YY,ZZ
         READ (IOMO,END=850,ERR=850)
         READ (IOMO,END=850,ERR=850) TS,XOS,XIMINS,XIMAXS
      END IF
C
      IF(KINDFL.NE.'PLTO') THEN
         WRITE(IOUT,910) KINDFL
         STOP
      END IF
      CALL PRINT(IOUT,IOMO,NATOM,NAO,NMO,NBOND,NPLOTS,BIRTH,
     *           XX,YY,ZZ,ATOM,TS,XOS,XIMINS,XIMAXS)
C
      IF(MODE.NE.0) GO TO 300
C
      NATOMS=NATOM
      NBONDS=NBOND
      IDERIV=IDERIVS
      DO 220 J=1,3
         XO(J) = XOS(J)
         DO 210 I=1,3
            T(I,J) = TS(I,J)
  210    CONTINUE
         IF(J.EQ.3) GO TO 220
            XIMIN(J)=XIMINS(J)
            XIMAX(J)=XIMAXS(J)
  220 CONTINUE
      DO 240 I=1,NATOMS
         XC(I) = XX(I)
         YC(I) = YY(I)
         ZC(I) = ZZ(I)
  240 CONTINUE
      RETURN
C
C        MAKE SURE THE PLOTTING PLANE MATCHES UP
C
  300 CONTINUE
      NERR=0
      IF(IDERIV.NE.IDERIVS) THEN
         WRITE(IOUT,*) 'ALL PLOT SETS MUST BE ORBITALS, OR ELSE'
         WRITE(IOUT,*) 'ALL PLOT SETS MUST BE ORBITAL DERIVATIVES.'
         NERR=NERR+1
      END IF
      DO 330 J=1,3
         IF(DIFF(XO(J),XOS(J)).GT.SMALL) NERR=NERR+1
         DO 320 I=1,3
            IF(DIFF(T(I,J),TS(I,J)).GT.SMALL) NERR=NERR+1
  320    CONTINUE
         IF(J.EQ.3) GO TO 330
            IF(DIFF(XIMIN(J),XIMINS(J)).GT.SMALL) NERR=NERR+1
            IF(DIFF(XIMAX(J),XIMAXS(J)).GT.SMALL) NERR=NERR+1
  330 CONTINUE
      IF(NERR.GT.0) THEN
         WRITE(IOUT,980) NERR
         STOP
      END IF
      RETURN
C
  850 CONTINUE
      WRITE(IOUT,985) IOMO
      STOP
C
  910 FORMAT(1X,'***** DENSITY FILE TYPE="',A4,'" INSTEAD OF "PLTO"',
     *          ' EXECUTION CEASING *****')
  980 FORMAT(1X,'***** PLOTTING PLANE FOR FILE',I4,' DOES NOT MATCH',
     *          ' FIRST PLANE GIVEN'/
     *       1X,I4,' DIFFERENCES FOUND IN THE PLANE SPECIFICATION')
  985 FORMAT(1X,'***** END OF FILE OR ERROR ON UNIT',I4)
      END
C*DECK PRINT
      SUBROUTINE PRINT(IOUT,IOMO,NATOMS,NAOS,NMOS,NBONDS,NPLOTS,BIRTH,
     *                 XC,YC,ZC,ATOM,T,XO,XIMIN,XIMAX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION XC(NATOMS),YC(NATOMS),ZC(NATOMS),T(3,3),XO(3),
     *          XIMIN(2),XIMAX(2)
      CHARACTER*4  ATOM(NATOMS)
      CHARACTER*24 BIRTH
C
C     ----- PRINT HEADER INFO FROM MO GRID FILE -----
C
      WRITE(IOUT,9000) IOMO,BIRTH,NATOMS,NBONDS,NAOS,NMOS,NPLOTS
C
      WRITE(IOUT,9010)
      DO 100 K=1,NATOMS
         WRITE(IOUT,9020) ATOM(K),XC(K),YC(K),ZC(K)
  100 CONTINUE
C
      WRITE(IOUT,9030) ((T(I,J),J=1,3),I=1,3)
      WRITE(IOUT,9040) XO
      WRITE(IOUT,9050) XIMIN(1),XIMAX(1),XIMIN(2),XIMAX(2)
      RETURN
C
 9000 FORMAT(///1X,33('* ')/
     *       1X,'READING MO GRIDS FROM FILE',I4,
     *       ' CREATED AT ',A24/
     *       1X,'NATOMS=',I8  ,5X,'NBONDS=',I8/
     *       1X,'NAOS  =',I8  ,5X,'NMOS  =',I8/
     *       1X,'NPLOTS=',I8  )
 9010 FORMAT(/1X,'THE ATOMIC POSITIONS ARE'/
     *         1X,'ATOM',6X,'X',11X,'Y',11X,'Z (BOHRS)')
 9020 FORMAT(1X,A4,3F12.7)
 9030 FORMAT(/1X,'ROTATION FROM FUNDAMENTAL TO PLOTTING AXES IS'/
     *      11X,'PX',11X,'PY',11X,'PZ'/
     *      1X,'FX',3F13.7/1X,'FY',3F13.7/1X,'FZ',3F13.7)
 9040 FORMAT(/1X,'TRANSLATION FROM F AXIS ORIGIN TO P AXIS ORIGIN IS'/
     *         1X,3F13.7,'  (BOHRS)')
 9050 FORMAT(/1X,'MINIMA AND MAXIMA ON THE PLOTTING PLANE ARE'/
     *         5X,'PX MIN=',F13.6,' PX MAX=',F13.6/
     *         5X,'PY MIN=',F13.6,' PY MAX=',F13.6,' BOHR')
      END
C
C*DECK PSISQR
      SUBROUTINE PSISQR(IOUT,IOMO,GRID,WORK,MESH,OCCUP,NPLOTS,
     *                  IDERIV,IPLOTD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION GRID(MESH,MESH),WORK(MESH,MESH),OCCUP(NPLOTS)
      CHARACTER*4  KEYWRD
      CHARACTER*40 LAB1,LAB2
      PARAMETER (ZERO=0.0D+00, ONE=1.0D+00, TWO=2.0D+00)
C
C     ----- COMPUTE TOTAL ELECTRON DENSITY -----
C
      WRITE(IOUT,900) NPLOTS
      DO 110 J=1,MESH
         DO 100 I=1,MESH
            GRID(I,J) = ZERO
  100    CONTINUE
  110 CONTINUE
C
C        READ THE DENSITY MATRIX
C     THIS IS RESTRICTED TO DIAGONAL FORM, SO ONLY NATURAL
C     ORBITALS MAY HAVE THEIR DENSITY COMPUTED.  EXAMPLES
C     ARE SCF ORBITALS, GVB ORBITALS, CI/MCSCF NATURAL ORBITALS.
C
      IEOF=0
      IERR=0
      CALL RDCARD('PSISQR  ',IEOF)
      IF(IEOF.NE.0) GO TO 800
      CALL GSTRNG(KEYWRD,-4)
      IF(KEYWRD.EQ.'TWO ') THEN
         OCCNO=TWO
         GO TO 250
      END IF
      IF(KEYWRD.EQ.'ONE ') THEN
         OCCNO=ONE
         GO TO 250
      END IF
C
      CALL REREAD
      DO 200 I=1,NPLOTS
         OCCUP(I)=RFIND('OCC.NO. ',IERR)
         IF(IERR.NE.0) GO TO 700
         IF(OCCUP(I).LT.ZERO  .OR.  OCCUP(I).GT.TWO) GO TO 700
  200 CONTINUE
      GO TO 300
C
  250 CONTINUE
      DO 260 I=1,NPLOTS
         OCCUP(I) = OCCNO
  260 CONTINUE
C
C        COMPUTE TOTAL EXECTRON DENSITY (or kinetic energy contribution)
C
  300 CONTINUE
      IF(IDERIV.EQ.0) THEN
         MXAMP = 1
      ELSE
         MXAMP = 3
      END IF
      DO 380 I=1,NPLOTS
         READ (IOMO,ERR=850,END=850) LAB1,LAB2
         OCCNO = OCCUP(I)
         WRITE(IOUT,920) I,LAB1,OCCNO,LAB2
         DO 370 KK=1,MXAMP
            IF(IDERIV.EQ.0) THEN
               READ(IOMO,ERR=850,END=850) WORK
            ELSE
               IF(IPLOTD.GT.0  .AND.  KK.NE.IPLOTD) THEN
                  READ(IOMO)
                  GO TO 370
               END IF
               READ(IOMO,ERR=850,END=850) WORK
            END IF
            DO 360 J=1,MESH
               DO 350 K=1,MESH
                  GRID(K,J)=GRID(K,J) + WORK(K,J)*WORK(K,J)*OCCNO
  350          CONTINUE
  360       CONTINUE
  370    CONTINUE
  380 CONTINUE
      REWIND IOMO
      CLOSE(UNIT=IOMO, STATUS='KEEP')
      RETURN
C
  700 CONTINUE
      WRITE(IOUT,970) I,OCCUP(I)
      STOP
  800 CONTINUE
      WRITE(IOUT,980)
      STOP
  850 CONTINUE
      WRITE(IOUT,985)
      STOP
C
  900 FORMAT(1X,'GENERATING TOTAL DENSITY GRID,',
     *           ' FROM',I4,' ORBITAL PLOT GRIDS')
  920 FORMAT(1X,'GRID',I4,' TITLE>',A40/
     *       1X,'OCCNO=',F7.5,1X,'>',A40)
  970 FORMAT(1X,'***** ERROR READING OCCUPATION NUMBER',I4,F10.3)
  980 FORMAT(1X,'***** UNEXPECTED END OF INPUT FILE IN PSISQR')
  985 FORMAT(1X,'***** UNEXPECTED END OF GRID FILE IN PSISQR')
      END
C*DECK SUBDEN
      SUBROUTINE SUBDEN(IOUT,IOMO,GRID,WORK,MESH,OCCUP,NPLOTS,
     *                  IDERIV,IPLOTD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION GRID(MESH,MESH),WORK(MESH,MESH),OCCUP(NPLOTS)
      CHARACTER*4  KEYWRD
      CHARACTER*40 LAB1,LAB2
      PARAMETER (ZERO=0.0D+00, ONE=1.0D+00, TWO=2.0D+00)
C
C     ----- SUBTRACT FRAGMENT DENSITY FROM TOTAL DENSITY -----
C
      WRITE(IOUT,900) NPLOTS
C
C        READ THE DENSITY MATRIX
C     THIS IS RESTRICTED TO DIAGONAL FORM, SO ONLY NATURAL
C     ORBITALS MAY HAVE THEIR DENSITY COMPUTED.  EXAMPLES
C     ARE SCF ORBITALS, GVB ORBITALS, CI/MCSCF NATURAL ORBITALS.
C
      IEOF=0
      IERR=0
      CALL RDCARD('SUBDEN  ',IEOF)
      IF(IEOF.NE.0) GO TO 800
      CALL GSTRNG(KEYWRD,-4)
      IF(KEYWRD.EQ.'TWO ') THEN
         OCCNO=TWO
         GO TO 250
      END IF
      IF(KEYWRD.EQ.'ONE ') THEN
         OCCNO=ONE
         GO TO 250
      END IF
C
      CALL REREAD
      DO 200 I=1,NPLOTS
         OCCUP(I)=RFIND('OCC.NO. ',IERR)
         IF(IERR.NE.0) GO TO 700
         IF(OCCUP(I).LT.ZERO  .OR.  OCCUP(I).GT.TWO) GO TO 700
  200 CONTINUE
      GO TO 300
C
  250 CONTINUE
      DO 260 I=1,NPLOTS
         OCCUP(I) = OCCNO
  260 CONTINUE
C
C        SUBTRACT THIS FRAGMENT'S DENSITY
C
  300 CONTINUE
      IF(IDERIV.EQ.0) THEN
         MXAMP = 1
      ELSE
         MXAMP = 3
      END IF
      DO 380 I=1,NPLOTS
         READ (IOMO,ERR=850,END=850) LAB1,LAB2
         OCCNO = OCCUP(I)
         WRITE(IOUT,920) I,LAB1,OCCNO,LAB2
         DO 370 KK=1,MXAMP
            IF(IDERIV.EQ.0) THEN
               READ(IOMO,ERR=850,END=850) WORK
            ELSE
               IF(IPLOTD.GT.0  .AND.  KK.NE.IPLOTD) THEN
                  READ(IOMO)
                  GO TO 370
               END IF
               READ(IOMO,ERR=850,END=850) WORK
            END IF
            DO 360 J=1,MESH
               DO 350 K=1,MESH
                  GRID(K,J)=GRID(K,J) - WORK(K,J)*WORK(K,J)*OCCNO
  350          CONTINUE
  360       CONTINUE
  370    CONTINUE
  380 CONTINUE
C
      REWIND IOMO
      CLOSE(UNIT=IOMO, STATUS='KEEP')
      RETURN
C
  700 CONTINUE
      WRITE(IOUT,970) I,OCCUP(I)
      STOP
  800 CONTINUE
      WRITE(IOUT,980)
      STOP
  850 CONTINUE
      WRITE(IOUT,985)
      STOP
C
  900 FORMAT(1X,'SUBTRACTING',I4,' ORBITAL PLOT GRIDS FROM',
     *          ' THE ELECTRON DENSITY MAP')
  920 FORMAT(1X,'GRID',I4,' TITLE>',A40/
     *       1X,'OCCNO=',F7.5,1X,'>',A40)
  970 FORMAT(1X,'***** ERROR READING OCCUPATION NUMBER',I4,F10.3)
  980 FORMAT(1X,'***** UNEXPECTED END OF INPUT FILE IN SUBDEN')
  985 FORMAT(1X,'***** UNEXPECTED END OF GRID FILE',I4,' IN SUBDEN')
      END
C*DECK PRGRID
      SUBROUTINE PRGRID(IOUT,STRING,GRID,MESH)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION GRID(MESH,MESH)
      CHARACTER*(*) STRING
C
C     ----- PRINT OUT SELECTED PORTIONS OF GRID -----
C
      WRITE(IOUT,910) STRING
      WRITE(IOUT,920) (JJ,JJ=1,MESH,3)
      DO 640 II=1,MESH,3
         WRITE(IOUT,930) II,(GRID(II,JJ),JJ=1,MESH,3)
  640 CONTINUE
      RETURN
C
  910 FORMAT(1X,'GRID FOR ',A)
  920 FORMAT(//5X,21I6)
  930 FORMAT(1X,I2,2X,21F6.2)
      END

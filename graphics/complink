#!/bin/csh
#
#   February 2013 - MWS
#
#   Compile and link all GAMESS graphics programs.
#   Use this file by: complink >& complink.log &
#
#   The next three lines require your attention.
#
#   Legal TARGETs are:   axp, hp, ibm, linux, sun.
#       These are 32 bit programs, so machine target names are simple.
#       Apple Macintosh is OK, just pick the target as 'linux' for Apple,
#       and note that Preview handles PostScript files very well.
#   If you don't want binaries for Xwindows or PostScript at your place,
#       then just set that particular version false.
#
set TARGET=linux
set xwversion=false
set psversion=true
#
#   The next three sections (compiler name, X11 library location,
#   and C compiler flags) will need to be modified if your system
#   is not already one of the valid targets.  
#
#   Pick compiler name and optimization level.
#           might also use   'g77 -O2 -Wno-globals -fno-globals'
#
if ($TARGET == axp)     set FORT='f77 -O4 -static'
if ($TARGET == hp)      set FORT='f90 +O2 +U77'
if ($TARGET == ibm)     set FORT='xlf -O2 -qmaxmem=-1'
if ($TARGET == linux)   set FORT='gfortran -O2 -std=legacy'
if ($TARGET == sun)     set FORT='f90 -O3'
#
#   Select the FORTRAN-calling-C "convention".
#   Pick nothing      if your FORTRAN expects lower case names
#   Pick -DCAPS       if your FORTRAN expects upper case names
#   pick -DUNDERSCORE if your FORTRAN expects lower case with _ postfixed
#
#   Select the "getenv/exit" declaration.
#   Pick -DANSI  if your man page says "char *getenv(const char *name )"
#   Pick nothing if your man page says "char *getenv( )"
#
if ($TARGET == axp)    set CFLAGS='-DANSI -DUNDERSCORE'
if ($TARGET == hp)     set CFLAGS='-DANSI'
if ($TARGET == ibm)    set CFLAGS='-DANSI'
if ($TARGET == linux)  set CFLAGS='-DANSI -DUNDERSCORE'
if ($TARGET == sun)    set CFLAGS='-DANSI -DUNDERSCORE'
#
#   The only X library we need is Xlib itself (no toolkits)
#
set XWLIBS='-lX11'
if ($TARGET == hp)      set XWLIBS='-Wl,-L/usr/lib/X11 -lX11 -Wl,-L/lib -lm'
if ($TARGET == hp)      set CFLAGS="$CFLAGS -I/usr/include/X11R6"
if ($TARGET == linux)   set XWLIBS='-Wl,-L/usr/X11R6/lib -lX11'
#
set PSLIBS=' '
if ($TARGET == hp)      set PSLIBS='-Wl,-L/lib -lm'
#
#   ---- nothing below here should need to be changed ----
#
#   Compile the various FORTRAN utility routines.
#   note that we borrow GAMESS' free format input routines,
#   but compile them again to be sure it is 32 bit integers.
#
echo '======================= utilities ========================'
cp ../source/frfmt.src               frfmt.f
cp kontrs.code                       kontrs.f
sed -e "/*UNX/s//    /" utils.code > utils.f
$FORT -c frfmt.f
$FORT -c kontrs.f
$FORT -c utils.f
rm -f *.f
#
#   Then compile and link the 4 programs.
#
if ($xwversion == true) then
   echo '================= Compiling XW versions =================='
   cc -c $CFLAGS -DUNIX xwindows.c
   echo '======================= xw-dendif ========================'
   sed -e "/*XW /s//    /" -e "/*UNX/s//    /" dendif.code > dendif.f
   $FORT -o dendif.xw.x dendif.f \
       frfmt.o kontrs.o utils.o xwindows.o $XWLIBS
   echo '======================= xw-mepmap ========================'
   sed -e "/*XW /s//    /" -e "/*UNX/s//    /" mepmap.code > mepmap.f
   $FORT -o mepmap.xw.x mepmap.f \
       frfmt.o kontrs.o utils.o xwindows.o $XWLIBS
   echo '======================= xw-molplt ========================'
   sed -e "/*XW /s//    /" -e "/*UNX/s//    /" molplt.code > molplt.f
   $FORT -o molplt.xw.x molplt.f \
       frfmt.o          utils.o xwindows.o $XWLIBS
   echo '======================= xw-pltorb ========================'
   sed -e "/*XW /s//    /" -e "/*UNX/s//    /" pltorb.code > pltorb.f
   $FORT -o pltorb.xw.x pltorb.f \
       frfmt.o kontrs.o utils.o xwindows.o $XWLIBS
   rm -f *.f
endif
#
if ($psversion == true) then
   echo '================= Compiling PS versions =================='
   cc -c $CFLAGS postscr.c
   echo '======================= ps-dendif ========================'
   sed -e "/*PS /s//    /" -e "/*UNX/s//    /" dendif.code > dendif.f
   $FORT -o dendif.ps.x dendif.f \
       frfmt.o kontrs.o utils.o postscr.o $PSLIBS
   echo '======================= ps-mepmap ========================'
   sed -e "/*PS /s//    /" -e "/*UNX/s//    /" mepmap.code > mepmap.f
   $FORT -o mepmap.ps.x mepmap.f \
       frfmt.o kontrs.o utils.o postscr.o $PSLIBS
   echo '======================= ps-molplt ========================'
   sed -e "/*PS /s//    /" -e "/*UNX/s//    /" molplt.code > molplt.f
   $FORT -o molplt.ps.x molplt.f \
       frfmt.o          utils.o postscr.o $PSLIBS
   echo '======================= ps-pltorb ========================'
   sed -e "/*PS /s//    /" -e "/*UNX/s//    /" pltorb.code > pltorb.f
   $FORT -o pltorb.ps.x pltorb.f \
       frfmt.o kontrs.o utils.o postscr.o $PSLIBS
   rm -f *.f
endif
#
rm -f *.o
date
time

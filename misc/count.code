      program count
c
c     this program was provided by Shiro Koseki.
c     It counts lines in GAMESS source code, prints
c     the number of comment, machine dependent, and
c     ordinary FORTRAN lines in each subroutine.  The
c     subroutine names are printed module by module.
C
C     Modified by Brian Salter-Duke in April 1999 to
C     correct various bugs, update TARGETS in DATA XMCHN,
C     use setenv under unix to point to input and output
C     files and to improve output. TARGETS updated for October
C     2000 version in May 2001. Further updated for January
C     2009 version in April 2009.
C
C     First 'cp count.code count.f' and then edit count.f.
C     To run under unix with the input and output files set to INPUT 
C     and OUTPUT by setenv, avtivate 5 lines beginning with *UNX.
C     To run on other systems with input and output files
C     called INPUT.DAT and OUTPUT.DAT activate 2 lines
C     beginning with *OTH. This was the original method.
C
C     Compile with:-
C
C     f77 -o count.x count.f
C
C     or whatever your compiler is called.   
C     Run the program by a little script such as
C           #!/bin/csh
C           set DIR=../misc
C           set CDIR=../misc
C           #
C           if ( -e $DIR/$1.dat ) rm $DIR/$1.dat
C           #
C           setenv INPUT $1.src
C           setenv OUTPUT $DIR/$1.dat
C           $CDIR/count.x > $DIR/$1.out
C
      PARAMETER  (MXSUB=100, NMCHNE=34)
      CHARACTER*6 SUBNAM(MXSUB),XMODUL,BLANK6
      DIMENSION   LCSUB(MXSUB),LSSUB(MXSUB),LBSUB(MXSUB)
      DIMENSION   IMCHNE(NMCHNE)
      CHARACTER*4 XMCHNE(NMCHNE)
      CHARACTER*1 A(80),A4(4),COM,STAR,BLANK,DATE(9)
*UNX  CHARACTER*256 FILENM
      DATA COM/'C'/, STAR/'*'/, BLANK/' '/, BLANK6/'      '/
      DATA XMCHNE/'*AIX', '*CRY', '*I64', '*I32', '*SOC',
     .            '*MPI', '*T3E', '*HIT', '*NEC', '*DEC',
     .            '*F2C', '*SEQ', '*F77', '*FUJ', '*XXX','*TRF',
     .            '*HP ', '*IBM', '*BL3', '*SGI', '*WIN','*ITA',
     .            '*SUN', '*MPL', '*UNX', '*VMS', '*CX1',
     .            '*INT', '*L32', '*L64', '*XT3', '*FGE',
     .            '*VAX', '*   '/
C
*UNX  CALL GETENV('INPUT',FILENM)
*UNX  OPEN (1,FILE=FILENM, STATUS='OLD')
*UNX  CALL GETENV('OUTPUT',FILENM)
*UNX  OPEN (2,FILE=FILENM,STATUS='NEW')
*OTH  OPEN (1,FILE='INPUT.DAT', STATUS='OLD')
*OTH  OPEN (2,FILE='OUTPUT.DAT',STATUS='NEW')
C
  600 FORMAT(/1X)
      WRITE(*,600)
      LINE=0
      NSUB=1
      DO 10 I=1,MXSUB
         SUBNAM(I) = BLANK6
         LCSUB(I) = 0
         LSSUB(I) = 0
         LBSUB(I) = 0
   10    CONTINUE
      SUBNAM(NSUB)='......'
      DO 12 J=1,NMCHNE
         IMCHNE(J) = 0
   12    CONTINUE
C
 1000 CONTINUE
  100 FORMAT(80A1)
      READ(1,100,END=900) (A(I),I=1,80)
C
      LINE = LINE +1
      IF(LINE.EQ.1) THEN
         IS = 2
         DO 110 J=1,9
            IS = IS +1
            DATE(J) = A(IS)
  110       CONTINUE
         END IF
C
      IF(A(1).EQ.BLANK) GO TO 200
      IF(A(1).EQ.STAR)  GO TO 300
      IF(A(1).EQ.COM)   GO TO 400
      WRITE(*,690) (A(I),I=1,72)
  690 FORMAT(/1X,'WARNING: ',72A1,/)
C
  200 CONTINUE
      LBSUB(NSUB) = LBSUB(NSUB) +1
      GO TO 1001
C
  300 CONTINUE
      LSSUB(NSUB) = LSSUB(NSUB) +1
      DO 310 I=1,4
         A4(I) = A(I)
  310    CONTINUE
      CALL CLASFY(A4,IMCHNE,XMCHNE,NMCHNE,IFND)
      GO TO 1002
C
  400 CONTINUE
      IF(A(2).EQ.STAR) THEN
         IF(NSUB.EQ.1) CALL GETMOD(A,XMODUL)
         CALL GETDCK(A,SUBNAM,NSUB)
         END IF
      LCSUB(NSUB) = LCSUB(NSUB) +1
      GO TO 1003
C
 1001 WRITE(*,601) LINE,SUBNAM(NSUB),(DATE(J),J=1,9)
  601 FORMAT(1H+,'LINE =',I5,': SUBROUTINE=',A6,
     *           '  LATEST MODIFICATION: ',9A1)
      GOTO 1000
 1002 WRITE(*,602) LINE,SUBNAM(NSUB),(DATE(J),J=1,9),XMCHNE(IFND)
  602 FORMAT(1H+,'LINE =',I5,': SUBROUTINE=',A6,
     *           '  LATEST MODIFICATION: ',9A1,' FOUND ',A4,'.')
      GOTO 1000
 1003 WRITE(*,603) LINE,SUBNAM(NSUB),(DATE(J),J=1,9)
  603 FORMAT(1H+,'LINE =',I5,': SUBROUTINE=',A6,
     *           '  LATEST MODIFICATION: ',9A1,' COMMENT')
      GOTO 1000
  900 CONTINUE
      LCTOT = 0
      LSTOT = 0
      LBTOT = 0
      DO 910 J=1,NSUB
         LCTOT = LCTOT +LCSUB(J)
         LSTOT = LSTOT +LSSUB(J)
         LBTOT = LBTOT +LBSUB(J)
  910    CONTINUE
C
C     PRINT OUT:
  620 FORMAT(1X,A6,'(',9A1,')',9X,4I8)
  630 FORMAT(15X,I3,'. ',A6,1X,4I8)
  640 FORMAT((7X,5(A4,'(',I3,')',5X)))
  650 FORMAT(/1X,'WARNING ... LINE =',2I6,/)
  660 FORMAT(/30X,'TOTAL  COMMENT  *FLAG  FORTRAN')
      WRITE(2,660) 
      WRITE(2,620) XMODUL,(DATE(J),J=1,9),LINE,LCTOT,LSTOT,LBTOT
      DO 920 J=1,NSUB
         LTOTAL = LCSUB(J) +LSSUB(J) +LBSUB(J)
         WRITE(2,630) J,SUBNAM(J),LTOTAL,LCSUB(J),LSSUB(J),LBSUB(J)
  920   CONTINUE
C
      IZ = 0
      DO 930 I=1,NMCHNE
         IF(IMCHNE(I).EQ.0) GO TO 930
         IZ = IZ +1
         LCSUB(IZ) = I
  930    CONTINUE
      IF(IZ.GT.0)
     .   WRITE(2,640) (XMCHNE(LCSUB(I)),IMCHNE(LCSUB(I)),I=1,IZ)
C
      LTOTAL = LCTOT +LSTOT +LBTOT
      IF(LTOTAL.NE.LINE) WRITE(*,650) LINE,LTOTAL
      CLOSE(1,STATUS='KEEP')
      CLOSE(2,STATUS='KEEP')
      STOP
      END
C/CLASFY/***************************************
      SUBROUTINE CLASFY(A4,IMCHNE,XMCHNE,NMCHNE,IFND)
      DIMENSION   IMCHNE(NMCHNE)
      CHARACTER*4 XMCHNE(NMCHNE),A4
C
      DO 100 I=1,(NMCHNE-1)
         IF(A4.EQ.XMCHNE(I)) THEN
            IMCHNE(I) = IMCHNE(I) +1
            GO TO 200
            END IF
  100    CONTINUE
      I = NMCHNE
      IMCHNE(I) = IMCHNE(I) +1
C
  200 CONTINUE
      IFND = I
      RETURN
      END
C/GETMOD/************************
      SUBROUTINE GETMOD(A,X)
      CHARACTER*1 A(80),X(6),C6(6),BLANK
      DATA C6/'M','O','D','U','L','E'/, BLANK/' '/
C
      IS = 3
  101 CONTINUE
      DO 100 I=IS,80
         IF(A(I).EQ.C6(1)) GO TO 110
  100    CONTINUE
      WRITE(*,600) (A(I),I=1,72)
      STOP
  600 FORMAT(//1X,'ERROR IN GETMOD ...',/1X,72A1)
C
  110 IS = I
      DO 120 J=1,6
         IF(C6(J).NE.A(IS)) THEN
            IS = IS +1
            GO TO 101
            END IF
         IS = IS +1
  120    CONTINUE
      DO 130 I=IS,80
         IF(A(I).NE.BLANK) GO TO 140
  130    CONTINUE
      IS = 80
      GO TO 101
C
  140 IS = I
      DO 150 J=1,6
         X(J) = A(IS)
         IS = IS +1
  150    CONTINUE
      WRITE(*,610) (X(J),J=1,6)
  610 FORMAT(/1X,'MODULE NAME = ',6A1,/)
C
      RETURN
      END
C/GETDCK/************************
      SUBROUTINE GETDCK(A,SUBNAM,NSUB)
      CHARACTER*1 A(80),SUBNAM(6,*),D4(4),BLANK
      DATA D4/'D','E','C','K'/, BLANK/' '/
C
      IS = 15
  101 CONTINUE
      DO 100 I=IS,80
         IF(A(I).EQ.D4(1)) GO TO 110
  100    CONTINUE
      GO TO 900
C
  110 IS = I
      DO 120 J=1,4
         IF(D4(J).NE.A(IS)) THEN
            IS = IS +1
            GO TO 101
            END IF
         IS = IS +1
  120    CONTINUE
      DO 130 I=IS,80
         IF(A(I).NE.BLANK) GO TO 140
  130    CONTINUE
      IS = 80
      GO TO 101
C
  140 IS = I
      NSUB = NSUB +1
      DO 150 J=1,6
         SUBNAM(J,NSUB) = A(IS)
         IS = IS +1
  150    CONTINUE
      WRITE(*,610) (SUBNAM(J,NSUB),J=1,6)
  610 FORMAT(/1X,'DECK NAME = ',6A1,/)
C
  900 CONTINUE
      RETURN
      END
